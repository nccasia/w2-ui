schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""whether this query should be cached (Hasura Cloud only)"""
directive @cached(
  """measured in seconds"""
  ttl: Int! = 60

  """refresh the cache entry"""
  refresh: Boolean! = false
) on QUERY

"""
columns and relationships of "Action"
"""
type Action implements Node {
  """An array relationship"""
  EventLogs(
    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): [EventLog!]!

  """An aggregate relationship"""
  EventLogs_aggregate(
    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): EventLog_aggregate!

  """An array relationship connection"""
  EventLogs_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): EventLogConnection!
  action: String!
  content: String!
  createdAt: timestamp!
  domain: String!
  id: ID!
  intent: String!
  type: ActionType!
}

"""
A Relay connection object on "Action"
"""
type ActionConnection {
  edges: [ActionEdge!]!
  pageInfo: PageInfo!
}

type ActionEdge {
  cursor: String!
  node: Action!
}

scalar ActionType

"""
Boolean expression to compare columns of type "ActionType". All fields are combined with logical 'AND'.
"""
input ActionType_comparison_exp {
  _eq: ActionType
  _gt: ActionType
  _gte: ActionType
  _in: [ActionType!]
  _is_null: Boolean
  _lt: ActionType
  _lte: ActionType
  _neq: ActionType
  _nin: [ActionType!]
}

"""
Boolean expression to filter rows from the table "Action". All fields are combined with a logical 'AND'.
"""
input Action_bool_exp {
  EventLogs: EventLog_bool_exp
  EventLogs_aggregate: EventLog_aggregate_bool_exp
  _and: [Action_bool_exp!]
  _not: Action_bool_exp
  _or: [Action_bool_exp!]
  action: String_comparison_exp
  content: String_comparison_exp
  createdAt: timestamp_comparison_exp
  domain: String_comparison_exp
  id: Int_comparison_exp
  intent: String_comparison_exp
  type: ActionType_comparison_exp
}

"""
unique or primary key constraints on table "Action"
"""
enum Action_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Action_pkey
}

"""
input type for incrementing numeric columns in table "Action"
"""
input Action_inc_input {
  id: Int
}

"""
input type for inserting data into table "Action"
"""
input Action_insert_input {
  EventLogs: EventLog_arr_rel_insert_input
  action: String
  content: String
  createdAt: timestamp
  domain: String
  id: Int
  intent: String
  type: ActionType
}

"""
response of any mutation on the table "Action"
"""
type Action_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Action!]!
}

"""
input type for inserting object relation for remote table "Action"
"""
input Action_obj_rel_insert_input {
  data: Action_insert_input!

  """upsert condition"""
  on_conflict: Action_on_conflict
}

"""
on_conflict condition type for table "Action"
"""
input Action_on_conflict {
  constraint: Action_constraint!
  update_columns: [Action_update_column!]! = []
  where: Action_bool_exp
}

"""Ordering options when selecting data from "Action"."""
input Action_order_by {
  EventLogs_aggregate: EventLog_aggregate_order_by
  action: order_by
  content: order_by
  createdAt: order_by
  domain: order_by
  id: order_by
  intent: order_by
  type: order_by
}

"""primary key columns input for table: Action"""
input Action_pk_columns_input {
  id: Int!
}

"""
select columns of table "Action"
"""
enum Action_select_column {
  """column name"""
  action

  """column name"""
  content

  """column name"""
  createdAt

  """column name"""
  domain

  """column name"""
  id

  """column name"""
  intent

  """column name"""
  type
}

"""
input type for updating data in table "Action"
"""
input Action_set_input {
  action: String
  content: String
  createdAt: timestamp
  domain: String
  id: Int
  intent: String
  type: ActionType
}

"""
update columns of table "Action"
"""
enum Action_update_column {
  """column name"""
  action

  """column name"""
  content

  """column name"""
  createdAt

  """column name"""
  domain

  """column name"""
  id

  """column name"""
  intent

  """column name"""
  type
}

input Action_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: Action_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: Action_set_input

  """filter the rows which have to be updated"""
  where: Action_bool_exp!
}

"""
columns and relationships of "ActivityDefinition"
"""
type ActivityDefinition implements Node {
  """An array relationship"""
  TaskDefinitionActivityDefinitions(
    """distinct select on columns"""
    distinct_on: [TaskDefinitionActivityDefinition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinitionActivityDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinitionActivityDefinition_bool_exp
  ): [TaskDefinitionActivityDefinition!]!

  """An aggregate relationship"""
  TaskDefinitionActivityDefinitions_aggregate(
    """distinct select on columns"""
    distinct_on: [TaskDefinitionActivityDefinition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinitionActivityDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinitionActivityDefinition_bool_exp
  ): TaskDefinitionActivityDefinition_aggregate!

  """An array relationship connection"""
  TaskDefinitionActivityDefinitions_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [TaskDefinitionActivityDefinition_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinitionActivityDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinitionActivityDefinition_bool_exp
  ): TaskDefinitionActivityDefinitionConnection!
  config(
    """JSON select path"""
    path: String
  ): jsonb
  createdAt: timestamp!
  description: String
  id: ID!
  initialValue(
    """JSON select path"""
    path: String
  ): jsonb
  key: String!
  name: String
  synchronous: Boolean!
  type: ActivityType!
  updatedAt: timestamp!
}

"""
A Relay connection object on "ActivityDefinition"
"""
type ActivityDefinitionConnection {
  edges: [ActivityDefinitionEdge!]!
  pageInfo: PageInfo!
}

type ActivityDefinitionEdge {
  cursor: String!
  node: ActivityDefinition!
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ActivityDefinition_append_input {
  config: jsonb
  initialValue: jsonb
}

"""
Boolean expression to filter rows from the table "ActivityDefinition". All fields are combined with a logical 'AND'.
"""
input ActivityDefinition_bool_exp {
  TaskDefinitionActivityDefinitions: TaskDefinitionActivityDefinition_bool_exp
  TaskDefinitionActivityDefinitions_aggregate: TaskDefinitionActivityDefinition_aggregate_bool_exp
  _and: [ActivityDefinition_bool_exp!]
  _not: ActivityDefinition_bool_exp
  _or: [ActivityDefinition_bool_exp!]
  config: jsonb_comparison_exp
  createdAt: timestamp_comparison_exp
  description: String_comparison_exp
  id: Int_comparison_exp
  initialValue: jsonb_comparison_exp
  key: String_comparison_exp
  name: String_comparison_exp
  synchronous: Boolean_comparison_exp
  type: ActivityType_comparison_exp
  updatedAt: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "ActivityDefinition"
"""
enum ActivityDefinition_constraint {
  """
  unique or primary key constraint on columns "key"
  """
  ActivityDefinition_key_key

  """
  unique or primary key constraint on columns "id"
  """
  ActivityDefinition_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ActivityDefinition_delete_at_path_input {
  config: [String!]
  initialValue: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ActivityDefinition_delete_elem_input {
  config: Int
  initialValue: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ActivityDefinition_delete_key_input {
  config: String
  initialValue: String
}

"""
input type for incrementing numeric columns in table "ActivityDefinition"
"""
input ActivityDefinition_inc_input {
  id: Int
}

"""
input type for inserting data into table "ActivityDefinition"
"""
input ActivityDefinition_insert_input {
  TaskDefinitionActivityDefinitions: TaskDefinitionActivityDefinition_arr_rel_insert_input
  config: jsonb
  createdAt: timestamp
  description: String
  id: Int
  initialValue: jsonb
  key: String
  name: String
  synchronous: Boolean
  type: ActivityType
  updatedAt: timestamp
}

"""
response of any mutation on the table "ActivityDefinition"
"""
type ActivityDefinition_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ActivityDefinition!]!
}

"""
input type for inserting object relation for remote table "ActivityDefinition"
"""
input ActivityDefinition_obj_rel_insert_input {
  data: ActivityDefinition_insert_input!

  """upsert condition"""
  on_conflict: ActivityDefinition_on_conflict
}

"""
on_conflict condition type for table "ActivityDefinition"
"""
input ActivityDefinition_on_conflict {
  constraint: ActivityDefinition_constraint!
  update_columns: [ActivityDefinition_update_column!]! = []
  where: ActivityDefinition_bool_exp
}

"""Ordering options when selecting data from "ActivityDefinition"."""
input ActivityDefinition_order_by {
  TaskDefinitionActivityDefinitions_aggregate: TaskDefinitionActivityDefinition_aggregate_order_by
  config: order_by
  createdAt: order_by
  description: order_by
  id: order_by
  initialValue: order_by
  key: order_by
  name: order_by
  synchronous: order_by
  type: order_by
  updatedAt: order_by
}

"""primary key columns input for table: ActivityDefinition"""
input ActivityDefinition_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ActivityDefinition_prepend_input {
  config: jsonb
  initialValue: jsonb
}

"""
select columns of table "ActivityDefinition"
"""
enum ActivityDefinition_select_column {
  """column name"""
  config

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  initialValue

  """column name"""
  key

  """column name"""
  name

  """column name"""
  synchronous

  """column name"""
  type

  """column name"""
  updatedAt
}

"""
input type for updating data in table "ActivityDefinition"
"""
input ActivityDefinition_set_input {
  config: jsonb
  createdAt: timestamp
  description: String
  id: Int
  initialValue: jsonb
  key: String
  name: String
  synchronous: Boolean
  type: ActivityType
  updatedAt: timestamp
}

"""
update columns of table "ActivityDefinition"
"""
enum ActivityDefinition_update_column {
  """column name"""
  config

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  initialValue

  """column name"""
  key

  """column name"""
  name

  """column name"""
  synchronous

  """column name"""
  type

  """column name"""
  updatedAt
}

input ActivityDefinition_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: ActivityDefinition_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: ActivityDefinition_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: ActivityDefinition_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: ActivityDefinition_delete_key_input

  """increments the numeric columns with given value of the filtered values"""
  _inc: ActivityDefinition_inc_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: ActivityDefinition_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: ActivityDefinition_set_input

  """filter the rows which have to be updated"""
  where: ActivityDefinition_bool_exp!
}

scalar ActivityType

"""
Boolean expression to compare columns of type "ActivityType". All fields are combined with logical 'AND'.
"""
input ActivityType_comparison_exp {
  _eq: ActivityType
  _gt: ActivityType
  _gte: ActivityType
  _in: [ActivityType!]
  _is_null: Boolean
  _lt: ActivityType
  _lte: ActivityType
  _neq: ActivityType
  _nin: [ActivityType!]
}

"""
Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

"""
columns and relationships of "Comment"
"""
type Comment implements Node {
  """An object relationship"""
  Task: Task!

  """An object relationship"""
  User: User!
  content: String!
  createdAt: timestamp!
  creatorId: Int!
  id: ID!
  taskId: Int!
  updatedAt: timestamp!
}

"""
A Relay connection object on "Comment"
"""
type CommentConnection {
  edges: [CommentEdge!]!
  pageInfo: PageInfo!
}

type CommentEdge {
  cursor: String!
  node: Comment!
}

"""
aggregated selection of "Comment"
"""
type Comment_aggregate {
  aggregate: Comment_aggregate_fields
  nodes: [Comment!]!
}

input Comment_aggregate_bool_exp {
  count: Comment_aggregate_bool_exp_count
}

input Comment_aggregate_bool_exp_count {
  arguments: [Comment_select_column!]
  distinct: Boolean
  filter: Comment_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "Comment"
"""
type Comment_aggregate_fields {
  avg: Comment_avg_fields
  count(columns: [Comment_select_column!], distinct: Boolean): Int!
  max: Comment_max_fields
  min: Comment_min_fields
  stddev: Comment_stddev_fields
  stddev_pop: Comment_stddev_pop_fields
  stddev_samp: Comment_stddev_samp_fields
  sum: Comment_sum_fields
  var_pop: Comment_var_pop_fields
  var_samp: Comment_var_samp_fields
  variance: Comment_variance_fields
}

"""
order by aggregate values of table "Comment"
"""
input Comment_aggregate_order_by {
  avg: Comment_avg_order_by
  count: order_by
  max: Comment_max_order_by
  min: Comment_min_order_by
  stddev: Comment_stddev_order_by
  stddev_pop: Comment_stddev_pop_order_by
  stddev_samp: Comment_stddev_samp_order_by
  sum: Comment_sum_order_by
  var_pop: Comment_var_pop_order_by
  var_samp: Comment_var_samp_order_by
  variance: Comment_variance_order_by
}

"""
input type for inserting array relation for remote table "Comment"
"""
input Comment_arr_rel_insert_input {
  data: [Comment_insert_input!]!

  """upsert condition"""
  on_conflict: Comment_on_conflict
}

"""aggregate avg on columns"""
type Comment_avg_fields {
  creatorId: Float
  id: Float
  taskId: Float
}

"""
order by avg() on columns of table "Comment"
"""
input Comment_avg_order_by {
  creatorId: order_by
  id: order_by
  taskId: order_by
}

"""
Boolean expression to filter rows from the table "Comment". All fields are combined with a logical 'AND'.
"""
input Comment_bool_exp {
  Task: Task_bool_exp
  User: User_bool_exp
  _and: [Comment_bool_exp!]
  _not: Comment_bool_exp
  _or: [Comment_bool_exp!]
  content: String_comparison_exp
  createdAt: timestamp_comparison_exp
  creatorId: Int_comparison_exp
  id: Int_comparison_exp
  taskId: Int_comparison_exp
  updatedAt: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "Comment"
"""
enum Comment_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Comment_pkey
}

"""
input type for incrementing numeric columns in table "Comment"
"""
input Comment_inc_input {
  creatorId: Int
  id: Int
  taskId: Int
}

"""
input type for inserting data into table "Comment"
"""
input Comment_insert_input {
  Task: Task_obj_rel_insert_input
  User: User_obj_rel_insert_input
  content: String
  createdAt: timestamp
  creatorId: Int
  id: Int
  taskId: Int
  updatedAt: timestamp
}

"""aggregate max on columns"""
type Comment_max_fields {
  content: String
  createdAt: timestamp
  creatorId: Int
  id: Int
  taskId: Int
  updatedAt: timestamp
}

"""
order by max() on columns of table "Comment"
"""
input Comment_max_order_by {
  content: order_by
  createdAt: order_by
  creatorId: order_by
  id: order_by
  taskId: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type Comment_min_fields {
  content: String
  createdAt: timestamp
  creatorId: Int
  id: Int
  taskId: Int
  updatedAt: timestamp
}

"""
order by min() on columns of table "Comment"
"""
input Comment_min_order_by {
  content: order_by
  createdAt: order_by
  creatorId: order_by
  id: order_by
  taskId: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "Comment"
"""
type Comment_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Comment!]!
}

"""
on_conflict condition type for table "Comment"
"""
input Comment_on_conflict {
  constraint: Comment_constraint!
  update_columns: [Comment_update_column!]! = []
  where: Comment_bool_exp
}

"""Ordering options when selecting data from "Comment"."""
input Comment_order_by {
  Task: Task_order_by
  User: User_order_by
  content: order_by
  createdAt: order_by
  creatorId: order_by
  id: order_by
  taskId: order_by
  updatedAt: order_by
}

"""primary key columns input for table: Comment"""
input Comment_pk_columns_input {
  id: Int!
}

"""
select columns of table "Comment"
"""
enum Comment_select_column {
  """column name"""
  content

  """column name"""
  createdAt

  """column name"""
  creatorId

  """column name"""
  id

  """column name"""
  taskId

  """column name"""
  updatedAt
}

"""
input type for updating data in table "Comment"
"""
input Comment_set_input {
  content: String
  createdAt: timestamp
  creatorId: Int
  id: Int
  taskId: Int
  updatedAt: timestamp
}

"""aggregate stddev on columns"""
type Comment_stddev_fields {
  creatorId: Float
  id: Float
  taskId: Float
}

"""
order by stddev() on columns of table "Comment"
"""
input Comment_stddev_order_by {
  creatorId: order_by
  id: order_by
  taskId: order_by
}

"""aggregate stddev_pop on columns"""
type Comment_stddev_pop_fields {
  creatorId: Float
  id: Float
  taskId: Float
}

"""
order by stddev_pop() on columns of table "Comment"
"""
input Comment_stddev_pop_order_by {
  creatorId: order_by
  id: order_by
  taskId: order_by
}

"""aggregate stddev_samp on columns"""
type Comment_stddev_samp_fields {
  creatorId: Float
  id: Float
  taskId: Float
}

"""
order by stddev_samp() on columns of table "Comment"
"""
input Comment_stddev_samp_order_by {
  creatorId: order_by
  id: order_by
  taskId: order_by
}

"""aggregate sum on columns"""
type Comment_sum_fields {
  creatorId: Int
  id: Int
  taskId: Int
}

"""
order by sum() on columns of table "Comment"
"""
input Comment_sum_order_by {
  creatorId: order_by
  id: order_by
  taskId: order_by
}

"""
update columns of table "Comment"
"""
enum Comment_update_column {
  """column name"""
  content

  """column name"""
  createdAt

  """column name"""
  creatorId

  """column name"""
  id

  """column name"""
  taskId

  """column name"""
  updatedAt
}

input Comment_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: Comment_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: Comment_set_input

  """filter the rows which have to be updated"""
  where: Comment_bool_exp!
}

"""aggregate var_pop on columns"""
type Comment_var_pop_fields {
  creatorId: Float
  id: Float
  taskId: Float
}

"""
order by var_pop() on columns of table "Comment"
"""
input Comment_var_pop_order_by {
  creatorId: order_by
  id: order_by
  taskId: order_by
}

"""aggregate var_samp on columns"""
type Comment_var_samp_fields {
  creatorId: Float
  id: Float
  taskId: Float
}

"""
order by var_samp() on columns of table "Comment"
"""
input Comment_var_samp_order_by {
  creatorId: order_by
  id: order_by
  taskId: order_by
}

"""aggregate variance on columns"""
type Comment_variance_fields {
  creatorId: Float
  id: Float
  taskId: Float
}

"""
order by variance() on columns of table "Comment"
"""
input Comment_variance_order_by {
  creatorId: order_by
  id: order_by
  taskId: order_by
}

"""
columns and relationships of "EventLog"
"""
type EventLog implements Node {
  """An object relationship"""
  Action: Action!

  """An object relationship"""
  Organization: Organization!

  """An object relationship"""
  Task: Task

  """An object relationship"""
  User: User
  actionId: Int!
  createdAt: timestamp!
  id: ID!
  organizationId: Int!
  taskId: Int
  userId: Int
}

"""
A Relay connection object on "EventLog"
"""
type EventLogConnection {
  edges: [EventLogEdge!]!
  pageInfo: PageInfo!
}

type EventLogEdge {
  cursor: String!
  node: EventLog!
}

"""
aggregated selection of "EventLog"
"""
type EventLog_aggregate {
  aggregate: EventLog_aggregate_fields
  nodes: [EventLog!]!
}

input EventLog_aggregate_bool_exp {
  count: EventLog_aggregate_bool_exp_count
}

input EventLog_aggregate_bool_exp_count {
  arguments: [EventLog_select_column!]
  distinct: Boolean
  filter: EventLog_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "EventLog"
"""
type EventLog_aggregate_fields {
  avg: EventLog_avg_fields
  count(columns: [EventLog_select_column!], distinct: Boolean): Int!
  max: EventLog_max_fields
  min: EventLog_min_fields
  stddev: EventLog_stddev_fields
  stddev_pop: EventLog_stddev_pop_fields
  stddev_samp: EventLog_stddev_samp_fields
  sum: EventLog_sum_fields
  var_pop: EventLog_var_pop_fields
  var_samp: EventLog_var_samp_fields
  variance: EventLog_variance_fields
}

"""
order by aggregate values of table "EventLog"
"""
input EventLog_aggregate_order_by {
  avg: EventLog_avg_order_by
  count: order_by
  max: EventLog_max_order_by
  min: EventLog_min_order_by
  stddev: EventLog_stddev_order_by
  stddev_pop: EventLog_stddev_pop_order_by
  stddev_samp: EventLog_stddev_samp_order_by
  sum: EventLog_sum_order_by
  var_pop: EventLog_var_pop_order_by
  var_samp: EventLog_var_samp_order_by
  variance: EventLog_variance_order_by
}

"""
input type for inserting array relation for remote table "EventLog"
"""
input EventLog_arr_rel_insert_input {
  data: [EventLog_insert_input!]!

  """upsert condition"""
  on_conflict: EventLog_on_conflict
}

"""aggregate avg on columns"""
type EventLog_avg_fields {
  actionId: Float
  id: Float
  organizationId: Float
  taskId: Float
  userId: Float
}

"""
order by avg() on columns of table "EventLog"
"""
input EventLog_avg_order_by {
  actionId: order_by
  id: order_by
  organizationId: order_by
  taskId: order_by
  userId: order_by
}

"""
Boolean expression to filter rows from the table "EventLog". All fields are combined with a logical 'AND'.
"""
input EventLog_bool_exp {
  Action: Action_bool_exp
  Organization: Organization_bool_exp
  Task: Task_bool_exp
  User: User_bool_exp
  _and: [EventLog_bool_exp!]
  _not: EventLog_bool_exp
  _or: [EventLog_bool_exp!]
  actionId: Int_comparison_exp
  createdAt: timestamp_comparison_exp
  id: Int_comparison_exp
  organizationId: Int_comparison_exp
  taskId: Int_comparison_exp
  userId: Int_comparison_exp
}

"""
unique or primary key constraints on table "EventLog"
"""
enum EventLog_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  EventLog_pkey
}

"""
input type for incrementing numeric columns in table "EventLog"
"""
input EventLog_inc_input {
  actionId: Int
  id: Int
  organizationId: Int
  taskId: Int
  userId: Int
}

"""
input type for inserting data into table "EventLog"
"""
input EventLog_insert_input {
  Action: Action_obj_rel_insert_input
  Organization: Organization_obj_rel_insert_input
  Task: Task_obj_rel_insert_input
  User: User_obj_rel_insert_input
  actionId: Int
  createdAt: timestamp
  id: Int
  organizationId: Int
  taskId: Int
  userId: Int
}

"""aggregate max on columns"""
type EventLog_max_fields {
  actionId: Int
  createdAt: timestamp
  id: Int
  organizationId: Int
  taskId: Int
  userId: Int
}

"""
order by max() on columns of table "EventLog"
"""
input EventLog_max_order_by {
  actionId: order_by
  createdAt: order_by
  id: order_by
  organizationId: order_by
  taskId: order_by
  userId: order_by
}

"""aggregate min on columns"""
type EventLog_min_fields {
  actionId: Int
  createdAt: timestamp
  id: Int
  organizationId: Int
  taskId: Int
  userId: Int
}

"""
order by min() on columns of table "EventLog"
"""
input EventLog_min_order_by {
  actionId: order_by
  createdAt: order_by
  id: order_by
  organizationId: order_by
  taskId: order_by
  userId: order_by
}

"""
response of any mutation on the table "EventLog"
"""
type EventLog_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [EventLog!]!
}

"""
on_conflict condition type for table "EventLog"
"""
input EventLog_on_conflict {
  constraint: EventLog_constraint!
  update_columns: [EventLog_update_column!]! = []
  where: EventLog_bool_exp
}

"""Ordering options when selecting data from "EventLog"."""
input EventLog_order_by {
  Action: Action_order_by
  Organization: Organization_order_by
  Task: Task_order_by
  User: User_order_by
  actionId: order_by
  createdAt: order_by
  id: order_by
  organizationId: order_by
  taskId: order_by
  userId: order_by
}

"""primary key columns input for table: EventLog"""
input EventLog_pk_columns_input {
  id: Int!
}

"""
select columns of table "EventLog"
"""
enum EventLog_select_column {
  """column name"""
  actionId

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  taskId

  """column name"""
  userId
}

"""
input type for updating data in table "EventLog"
"""
input EventLog_set_input {
  actionId: Int
  createdAt: timestamp
  id: Int
  organizationId: Int
  taskId: Int
  userId: Int
}

"""aggregate stddev on columns"""
type EventLog_stddev_fields {
  actionId: Float
  id: Float
  organizationId: Float
  taskId: Float
  userId: Float
}

"""
order by stddev() on columns of table "EventLog"
"""
input EventLog_stddev_order_by {
  actionId: order_by
  id: order_by
  organizationId: order_by
  taskId: order_by
  userId: order_by
}

"""aggregate stddev_pop on columns"""
type EventLog_stddev_pop_fields {
  actionId: Float
  id: Float
  organizationId: Float
  taskId: Float
  userId: Float
}

"""
order by stddev_pop() on columns of table "EventLog"
"""
input EventLog_stddev_pop_order_by {
  actionId: order_by
  id: order_by
  organizationId: order_by
  taskId: order_by
  userId: order_by
}

"""aggregate stddev_samp on columns"""
type EventLog_stddev_samp_fields {
  actionId: Float
  id: Float
  organizationId: Float
  taskId: Float
  userId: Float
}

"""
order by stddev_samp() on columns of table "EventLog"
"""
input EventLog_stddev_samp_order_by {
  actionId: order_by
  id: order_by
  organizationId: order_by
  taskId: order_by
  userId: order_by
}

"""aggregate sum on columns"""
type EventLog_sum_fields {
  actionId: Int
  id: Int
  organizationId: Int
  taskId: Int
  userId: Int
}

"""
order by sum() on columns of table "EventLog"
"""
input EventLog_sum_order_by {
  actionId: order_by
  id: order_by
  organizationId: order_by
  taskId: order_by
  userId: order_by
}

"""
update columns of table "EventLog"
"""
enum EventLog_update_column {
  """column name"""
  actionId

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  taskId

  """column name"""
  userId
}

input EventLog_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: EventLog_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: EventLog_set_input

  """filter the rows which have to be updated"""
  where: EventLog_bool_exp!
}

"""aggregate var_pop on columns"""
type EventLog_var_pop_fields {
  actionId: Float
  id: Float
  organizationId: Float
  taskId: Float
  userId: Float
}

"""
order by var_pop() on columns of table "EventLog"
"""
input EventLog_var_pop_order_by {
  actionId: order_by
  id: order_by
  organizationId: order_by
  taskId: order_by
  userId: order_by
}

"""aggregate var_samp on columns"""
type EventLog_var_samp_fields {
  actionId: Float
  id: Float
  organizationId: Float
  taskId: Float
  userId: Float
}

"""
order by var_samp() on columns of table "EventLog"
"""
input EventLog_var_samp_order_by {
  actionId: order_by
  id: order_by
  organizationId: order_by
  taskId: order_by
  userId: order_by
}

"""aggregate variance on columns"""
type EventLog_variance_fields {
  actionId: Float
  id: Float
  organizationId: Float
  taskId: Float
  userId: Float
}

"""
order by variance() on columns of table "EventLog"
"""
input EventLog_variance_order_by {
  actionId: order_by
  id: order_by
  organizationId: order_by
  taskId: order_by
  userId: order_by
}

"""
columns and relationships of "File"
"""
type File implements Node {
  """An object relationship"""
  File: File

  """An array relationship"""
  Files(
    """distinct select on columns"""
    distinct_on: [File_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [File_order_by!]

    """filter the rows returned"""
    where: File_bool_exp
  ): [File!]!

  """An aggregate relationship"""
  Files_aggregate(
    """distinct select on columns"""
    distinct_on: [File_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [File_order_by!]

    """filter the rows returned"""
    where: File_bool_exp
  ): File_aggregate!

  """An array relationship connection"""
  Files_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [File_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [File_order_by!]

    """filter the rows returned"""
    where: File_bool_exp
  ): FileConnection!

  """An object relationship"""
  Organization: Organization!

  """An array relationship"""
  Users(
    """distinct select on columns"""
    distinct_on: [User_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [User_order_by!]

    """filter the rows returned"""
    where: User_bool_exp
  ): [User!]!

  """An aggregate relationship"""
  Users_aggregate(
    """distinct select on columns"""
    distinct_on: [User_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [User_order_by!]

    """filter the rows returned"""
    where: User_bool_exp
  ): User_aggregate!

  """An array relationship connection"""
  Users_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [User_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [User_order_by!]

    """filter the rows returned"""
    where: User_bool_exp
  ): UserConnection!
  cdnUrl: String!
  createdAt: timestamp!
  data: String!
  encoding: String!
  fileType: FileType!
  filename: String!
  id: ID!
  mimetype: String!
  organizationId: Int!
  updatedAt: timestamp!
  varantName: String
  variantKey: String
  variantOfId: Int
  variantValue: String
}

"""
A Relay connection object on "File"
"""
type FileConnection {
  edges: [FileEdge!]!
  pageInfo: PageInfo!
}

type FileEdge {
  cursor: String!
  node: File!
}

scalar FileType

"""
Boolean expression to compare columns of type "FileType". All fields are combined with logical 'AND'.
"""
input FileType_comparison_exp {
  _eq: FileType
  _gt: FileType
  _gte: FileType
  _in: [FileType!]
  _is_null: Boolean
  _lt: FileType
  _lte: FileType
  _neq: FileType
  _nin: [FileType!]
}

"""
aggregated selection of "File"
"""
type File_aggregate {
  aggregate: File_aggregate_fields
  nodes: [File!]!
}

input File_aggregate_bool_exp {
  count: File_aggregate_bool_exp_count
}

input File_aggregate_bool_exp_count {
  arguments: [File_select_column!]
  distinct: Boolean
  filter: File_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "File"
"""
type File_aggregate_fields {
  avg: File_avg_fields
  count(columns: [File_select_column!], distinct: Boolean): Int!
  max: File_max_fields
  min: File_min_fields
  stddev: File_stddev_fields
  stddev_pop: File_stddev_pop_fields
  stddev_samp: File_stddev_samp_fields
  sum: File_sum_fields
  var_pop: File_var_pop_fields
  var_samp: File_var_samp_fields
  variance: File_variance_fields
}

"""
order by aggregate values of table "File"
"""
input File_aggregate_order_by {
  avg: File_avg_order_by
  count: order_by
  max: File_max_order_by
  min: File_min_order_by
  stddev: File_stddev_order_by
  stddev_pop: File_stddev_pop_order_by
  stddev_samp: File_stddev_samp_order_by
  sum: File_sum_order_by
  var_pop: File_var_pop_order_by
  var_samp: File_var_samp_order_by
  variance: File_variance_order_by
}

"""
input type for inserting array relation for remote table "File"
"""
input File_arr_rel_insert_input {
  data: [File_insert_input!]!

  """upsert condition"""
  on_conflict: File_on_conflict
}

"""aggregate avg on columns"""
type File_avg_fields {
  id: Float
  organizationId: Float
  variantOfId: Float
}

"""
order by avg() on columns of table "File"
"""
input File_avg_order_by {
  id: order_by
  organizationId: order_by
  variantOfId: order_by
}

"""
Boolean expression to filter rows from the table "File". All fields are combined with a logical 'AND'.
"""
input File_bool_exp {
  File: File_bool_exp
  Files: File_bool_exp
  Files_aggregate: File_aggregate_bool_exp
  Organization: Organization_bool_exp
  Users: User_bool_exp
  Users_aggregate: User_aggregate_bool_exp
  _and: [File_bool_exp!]
  _not: File_bool_exp
  _or: [File_bool_exp!]
  cdnUrl: String_comparison_exp
  createdAt: timestamp_comparison_exp
  data: String_comparison_exp
  encoding: String_comparison_exp
  fileType: FileType_comparison_exp
  filename: String_comparison_exp
  id: Int_comparison_exp
  mimetype: String_comparison_exp
  organizationId: Int_comparison_exp
  updatedAt: timestamp_comparison_exp
  varantName: String_comparison_exp
  variantKey: String_comparison_exp
  variantOfId: Int_comparison_exp
  variantValue: String_comparison_exp
}

"""
unique or primary key constraints on table "File"
"""
enum File_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  File_pkey
}

"""
input type for incrementing numeric columns in table "File"
"""
input File_inc_input {
  id: Int
  organizationId: Int
  variantOfId: Int
}

"""
input type for inserting data into table "File"
"""
input File_insert_input {
  File: File_obj_rel_insert_input
  Files: File_arr_rel_insert_input
  Organization: Organization_obj_rel_insert_input
  Users: User_arr_rel_insert_input
  cdnUrl: String
  createdAt: timestamp
  data: String
  encoding: String
  fileType: FileType
  filename: String
  id: Int
  mimetype: String
  organizationId: Int
  updatedAt: timestamp
  varantName: String
  variantKey: String
  variantOfId: Int
  variantValue: String
}

"""aggregate max on columns"""
type File_max_fields {
  cdnUrl: String
  createdAt: timestamp
  data: String
  encoding: String
  fileType: FileType
  filename: String
  id: Int
  mimetype: String
  organizationId: Int
  updatedAt: timestamp
  varantName: String
  variantKey: String
  variantOfId: Int
  variantValue: String
}

"""
order by max() on columns of table "File"
"""
input File_max_order_by {
  cdnUrl: order_by
  createdAt: order_by
  data: order_by
  encoding: order_by
  fileType: order_by
  filename: order_by
  id: order_by
  mimetype: order_by
  organizationId: order_by
  updatedAt: order_by
  varantName: order_by
  variantKey: order_by
  variantOfId: order_by
  variantValue: order_by
}

"""aggregate min on columns"""
type File_min_fields {
  cdnUrl: String
  createdAt: timestamp
  data: String
  encoding: String
  fileType: FileType
  filename: String
  id: Int
  mimetype: String
  organizationId: Int
  updatedAt: timestamp
  varantName: String
  variantKey: String
  variantOfId: Int
  variantValue: String
}

"""
order by min() on columns of table "File"
"""
input File_min_order_by {
  cdnUrl: order_by
  createdAt: order_by
  data: order_by
  encoding: order_by
  fileType: order_by
  filename: order_by
  id: order_by
  mimetype: order_by
  organizationId: order_by
  updatedAt: order_by
  varantName: order_by
  variantKey: order_by
  variantOfId: order_by
  variantValue: order_by
}

"""
response of any mutation on the table "File"
"""
type File_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [File!]!
}

"""
input type for inserting object relation for remote table "File"
"""
input File_obj_rel_insert_input {
  data: File_insert_input!

  """upsert condition"""
  on_conflict: File_on_conflict
}

"""
on_conflict condition type for table "File"
"""
input File_on_conflict {
  constraint: File_constraint!
  update_columns: [File_update_column!]! = []
  where: File_bool_exp
}

"""Ordering options when selecting data from "File"."""
input File_order_by {
  File: File_order_by
  Files_aggregate: File_aggregate_order_by
  Organization: Organization_order_by
  Users_aggregate: User_aggregate_order_by
  cdnUrl: order_by
  createdAt: order_by
  data: order_by
  encoding: order_by
  fileType: order_by
  filename: order_by
  id: order_by
  mimetype: order_by
  organizationId: order_by
  updatedAt: order_by
  varantName: order_by
  variantKey: order_by
  variantOfId: order_by
  variantValue: order_by
}

"""primary key columns input for table: File"""
input File_pk_columns_input {
  id: Int!
}

"""
select columns of table "File"
"""
enum File_select_column {
  """column name"""
  cdnUrl

  """column name"""
  createdAt

  """column name"""
  data

  """column name"""
  encoding

  """column name"""
  fileType

  """column name"""
  filename

  """column name"""
  id

  """column name"""
  mimetype

  """column name"""
  organizationId

  """column name"""
  updatedAt

  """column name"""
  varantName

  """column name"""
  variantKey

  """column name"""
  variantOfId

  """column name"""
  variantValue
}

"""
input type for updating data in table "File"
"""
input File_set_input {
  cdnUrl: String
  createdAt: timestamp
  data: String
  encoding: String
  fileType: FileType
  filename: String
  id: Int
  mimetype: String
  organizationId: Int
  updatedAt: timestamp
  varantName: String
  variantKey: String
  variantOfId: Int
  variantValue: String
}

"""aggregate stddev on columns"""
type File_stddev_fields {
  id: Float
  organizationId: Float
  variantOfId: Float
}

"""
order by stddev() on columns of table "File"
"""
input File_stddev_order_by {
  id: order_by
  organizationId: order_by
  variantOfId: order_by
}

"""aggregate stddev_pop on columns"""
type File_stddev_pop_fields {
  id: Float
  organizationId: Float
  variantOfId: Float
}

"""
order by stddev_pop() on columns of table "File"
"""
input File_stddev_pop_order_by {
  id: order_by
  organizationId: order_by
  variantOfId: order_by
}

"""aggregate stddev_samp on columns"""
type File_stddev_samp_fields {
  id: Float
  organizationId: Float
  variantOfId: Float
}

"""
order by stddev_samp() on columns of table "File"
"""
input File_stddev_samp_order_by {
  id: order_by
  organizationId: order_by
  variantOfId: order_by
}

"""aggregate sum on columns"""
type File_sum_fields {
  id: Int
  organizationId: Int
  variantOfId: Int
}

"""
order by sum() on columns of table "File"
"""
input File_sum_order_by {
  id: order_by
  organizationId: order_by
  variantOfId: order_by
}

"""
update columns of table "File"
"""
enum File_update_column {
  """column name"""
  cdnUrl

  """column name"""
  createdAt

  """column name"""
  data

  """column name"""
  encoding

  """column name"""
  fileType

  """column name"""
  filename

  """column name"""
  id

  """column name"""
  mimetype

  """column name"""
  organizationId

  """column name"""
  updatedAt

  """column name"""
  varantName

  """column name"""
  variantKey

  """column name"""
  variantOfId

  """column name"""
  variantValue
}

input File_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: File_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: File_set_input

  """filter the rows which have to be updated"""
  where: File_bool_exp!
}

"""aggregate var_pop on columns"""
type File_var_pop_fields {
  id: Float
  organizationId: Float
  variantOfId: Float
}

"""
order by var_pop() on columns of table "File"
"""
input File_var_pop_order_by {
  id: order_by
  organizationId: order_by
  variantOfId: order_by
}

"""aggregate var_samp on columns"""
type File_var_samp_fields {
  id: Float
  organizationId: Float
  variantOfId: Float
}

"""
order by var_samp() on columns of table "File"
"""
input File_var_samp_order_by {
  id: order_by
  organizationId: order_by
  variantOfId: order_by
}

"""aggregate variance on columns"""
type File_variance_fields {
  id: Float
  organizationId: Float
  variantOfId: Float
}

"""
order by variance() on columns of table "File"
"""
input File_variance_order_by {
  id: order_by
  organizationId: order_by
  variantOfId: order_by
}

"""
columns and relationships of "Form"
"""
type Form implements Node {
  """An array relationship"""
  TaskDefinitions(
    """distinct select on columns"""
    distinct_on: [TaskDefinition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): [TaskDefinition!]!

  """An aggregate relationship"""
  TaskDefinitions_aggregate(
    """distinct select on columns"""
    distinct_on: [TaskDefinition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): TaskDefinition_aggregate!

  """An array relationship connection"""
  TaskDefinitions_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [TaskDefinition_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): TaskDefinitionConnection!

  """An array relationship"""
  Tasks(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): [Task!]!

  """An aggregate relationship"""
  Tasks_aggregate(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): Task_aggregate!

  """An array relationship connection"""
  Tasks_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Task_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): TaskConnection!
  code: String!
  config(
    """JSON select path"""
    path: String
  ): jsonb!
  createdAt: timestamp!
  description: String!
  displayConfig(
    """JSON select path"""
    path: String
  ): jsonb!
  displayTemplate: String!
  id: ID!
  name: String!
  schema(
    """JSON select path"""
    path: String
  ): jsonb!
  serializerConfig(
    """JSON select path"""
    path: String
  ): jsonb!
  triggerConfig(
    """JSON select path"""
    path: String
  ): jsonb!
  updatedAt: timestamp!
  validationConfig(
    """JSON select path"""
    path: String
  ): jsonb!
}

"""
A Relay connection object on "Form"
"""
type FormConnection {
  edges: [FormEdge!]!
  pageInfo: PageInfo!
}

type FormEdge {
  cursor: String!
  node: Form!
}

input FormTriggerInput {
  formId: Int
  taskId: Int
  value: String!
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input Form_append_input {
  config: jsonb
  displayConfig: jsonb
  schema: jsonb
  serializerConfig: jsonb
  triggerConfig: jsonb
  validationConfig: jsonb
}

"""
Boolean expression to filter rows from the table "Form". All fields are combined with a logical 'AND'.
"""
input Form_bool_exp {
  TaskDefinitions: TaskDefinition_bool_exp
  TaskDefinitions_aggregate: TaskDefinition_aggregate_bool_exp
  Tasks: Task_bool_exp
  Tasks_aggregate: Task_aggregate_bool_exp
  _and: [Form_bool_exp!]
  _not: Form_bool_exp
  _or: [Form_bool_exp!]
  code: String_comparison_exp
  config: jsonb_comparison_exp
  createdAt: timestamp_comparison_exp
  description: String_comparison_exp
  displayConfig: jsonb_comparison_exp
  displayTemplate: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  schema: jsonb_comparison_exp
  serializerConfig: jsonb_comparison_exp
  triggerConfig: jsonb_comparison_exp
  updatedAt: timestamp_comparison_exp
  validationConfig: jsonb_comparison_exp
}

"""
unique or primary key constraints on table "Form"
"""
enum Form_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Form_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input Form_delete_at_path_input {
  config: [String!]
  displayConfig: [String!]
  schema: [String!]
  serializerConfig: [String!]
  triggerConfig: [String!]
  validationConfig: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input Form_delete_elem_input {
  config: Int
  displayConfig: Int
  schema: Int
  serializerConfig: Int
  triggerConfig: Int
  validationConfig: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input Form_delete_key_input {
  config: String
  displayConfig: String
  schema: String
  serializerConfig: String
  triggerConfig: String
  validationConfig: String
}

"""
input type for incrementing numeric columns in table "Form"
"""
input Form_inc_input {
  id: Int
}

"""
input type for inserting data into table "Form"
"""
input Form_insert_input {
  TaskDefinitions: TaskDefinition_arr_rel_insert_input
  Tasks: Task_arr_rel_insert_input
  code: String
  config: jsonb
  createdAt: timestamp
  description: String
  displayConfig: jsonb
  displayTemplate: String
  id: Int
  name: String
  schema: jsonb
  serializerConfig: jsonb
  triggerConfig: jsonb
  updatedAt: timestamp
  validationConfig: jsonb
}

"""
response of any mutation on the table "Form"
"""
type Form_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Form!]!
}

"""
input type for inserting object relation for remote table "Form"
"""
input Form_obj_rel_insert_input {
  data: Form_insert_input!

  """upsert condition"""
  on_conflict: Form_on_conflict
}

"""
on_conflict condition type for table "Form"
"""
input Form_on_conflict {
  constraint: Form_constraint!
  update_columns: [Form_update_column!]! = []
  where: Form_bool_exp
}

"""Ordering options when selecting data from "Form"."""
input Form_order_by {
  TaskDefinitions_aggregate: TaskDefinition_aggregate_order_by
  Tasks_aggregate: Task_aggregate_order_by
  code: order_by
  config: order_by
  createdAt: order_by
  description: order_by
  displayConfig: order_by
  displayTemplate: order_by
  id: order_by
  name: order_by
  schema: order_by
  serializerConfig: order_by
  triggerConfig: order_by
  updatedAt: order_by
  validationConfig: order_by
}

"""primary key columns input for table: Form"""
input Form_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input Form_prepend_input {
  config: jsonb
  displayConfig: jsonb
  schema: jsonb
  serializerConfig: jsonb
  triggerConfig: jsonb
  validationConfig: jsonb
}

"""
select columns of table "Form"
"""
enum Form_select_column {
  """column name"""
  code

  """column name"""
  config

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  displayConfig

  """column name"""
  displayTemplate

  """column name"""
  id

  """column name"""
  name

  """column name"""
  schema

  """column name"""
  serializerConfig

  """column name"""
  triggerConfig

  """column name"""
  updatedAt

  """column name"""
  validationConfig
}

"""
input type for updating data in table "Form"
"""
input Form_set_input {
  code: String
  config: jsonb
  createdAt: timestamp
  description: String
  displayConfig: jsonb
  displayTemplate: String
  id: Int
  name: String
  schema: jsonb
  serializerConfig: jsonb
  triggerConfig: jsonb
  updatedAt: timestamp
  validationConfig: jsonb
}

"""
update columns of table "Form"
"""
enum Form_update_column {
  """column name"""
  code

  """column name"""
  config

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  displayConfig

  """column name"""
  displayTemplate

  """column name"""
  id

  """column name"""
  name

  """column name"""
  schema

  """column name"""
  serializerConfig

  """column name"""
  triggerConfig

  """column name"""
  updatedAt

  """column name"""
  validationConfig
}

input Form_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: Form_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: Form_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: Form_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: Form_delete_key_input

  """increments the numeric columns with given value of the filtered values"""
  _inc: Form_inc_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: Form_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: Form_set_input

  """filter the rows which have to be updated"""
  where: Form_bool_exp!
}

"""
Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

scalar JWT

type LoginAuth {
  accessToken: JWT!
  refreshToken: JWT!
  user: LoginUser!
}

input LoginInput {
  email: String!
  password: String!
}

type LoginUser {
  email: String!
  firstname: String
  id: ID!
  lastname: String
}

"""
columns and relationships of "MemberOnProjects"
"""
type MemberOnProjects implements Node {
  """An object relationship"""
  Project: Project!

  """An object relationship"""
  User: User!
  assignedAt: timestamp!
  assignedBy: String!
  id: ID!
  projectId: Int!
  userId: Int!
}

"""
A Relay connection object on "MemberOnProjects"
"""
type MemberOnProjectsConnection {
  edges: [MemberOnProjectsEdge!]!
  pageInfo: PageInfo!
}

type MemberOnProjectsEdge {
  cursor: String!
  node: MemberOnProjects!
}

"""
aggregated selection of "MemberOnProjects"
"""
type MemberOnProjects_aggregate {
  aggregate: MemberOnProjects_aggregate_fields
  nodes: [MemberOnProjects!]!
}

input MemberOnProjects_aggregate_bool_exp {
  count: MemberOnProjects_aggregate_bool_exp_count
}

input MemberOnProjects_aggregate_bool_exp_count {
  arguments: [MemberOnProjects_select_column!]
  distinct: Boolean
  filter: MemberOnProjects_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "MemberOnProjects"
"""
type MemberOnProjects_aggregate_fields {
  avg: MemberOnProjects_avg_fields
  count(columns: [MemberOnProjects_select_column!], distinct: Boolean): Int!
  max: MemberOnProjects_max_fields
  min: MemberOnProjects_min_fields
  stddev: MemberOnProjects_stddev_fields
  stddev_pop: MemberOnProjects_stddev_pop_fields
  stddev_samp: MemberOnProjects_stddev_samp_fields
  sum: MemberOnProjects_sum_fields
  var_pop: MemberOnProjects_var_pop_fields
  var_samp: MemberOnProjects_var_samp_fields
  variance: MemberOnProjects_variance_fields
}

"""
order by aggregate values of table "MemberOnProjects"
"""
input MemberOnProjects_aggregate_order_by {
  avg: MemberOnProjects_avg_order_by
  count: order_by
  max: MemberOnProjects_max_order_by
  min: MemberOnProjects_min_order_by
  stddev: MemberOnProjects_stddev_order_by
  stddev_pop: MemberOnProjects_stddev_pop_order_by
  stddev_samp: MemberOnProjects_stddev_samp_order_by
  sum: MemberOnProjects_sum_order_by
  var_pop: MemberOnProjects_var_pop_order_by
  var_samp: MemberOnProjects_var_samp_order_by
  variance: MemberOnProjects_variance_order_by
}

"""
input type for inserting array relation for remote table "MemberOnProjects"
"""
input MemberOnProjects_arr_rel_insert_input {
  data: [MemberOnProjects_insert_input!]!

  """upsert condition"""
  on_conflict: MemberOnProjects_on_conflict
}

"""aggregate avg on columns"""
type MemberOnProjects_avg_fields {
  projectId: Float
  userId: Float
}

"""
order by avg() on columns of table "MemberOnProjects"
"""
input MemberOnProjects_avg_order_by {
  projectId: order_by
  userId: order_by
}

"""
Boolean expression to filter rows from the table "MemberOnProjects". All fields are combined with a logical 'AND'.
"""
input MemberOnProjects_bool_exp {
  Project: Project_bool_exp
  User: User_bool_exp
  _and: [MemberOnProjects_bool_exp!]
  _not: MemberOnProjects_bool_exp
  _or: [MemberOnProjects_bool_exp!]
  assignedAt: timestamp_comparison_exp
  assignedBy: String_comparison_exp
  projectId: Int_comparison_exp
  userId: Int_comparison_exp
}

"""
unique or primary key constraints on table "MemberOnProjects"
"""
enum MemberOnProjects_constraint {
  """
  unique or primary key constraint on columns "projectId", "userId"
  """
  MemberOnProjects_pkey
}

"""
input type for incrementing numeric columns in table "MemberOnProjects"
"""
input MemberOnProjects_inc_input {
  projectId: Int
  userId: Int
}

"""
input type for inserting data into table "MemberOnProjects"
"""
input MemberOnProjects_insert_input {
  Project: Project_obj_rel_insert_input
  User: User_obj_rel_insert_input
  assignedAt: timestamp
  assignedBy: String
  projectId: Int
  userId: Int
}

"""aggregate max on columns"""
type MemberOnProjects_max_fields {
  assignedAt: timestamp
  assignedBy: String
  projectId: Int
  userId: Int
}

"""
order by max() on columns of table "MemberOnProjects"
"""
input MemberOnProjects_max_order_by {
  assignedAt: order_by
  assignedBy: order_by
  projectId: order_by
  userId: order_by
}

"""aggregate min on columns"""
type MemberOnProjects_min_fields {
  assignedAt: timestamp
  assignedBy: String
  projectId: Int
  userId: Int
}

"""
order by min() on columns of table "MemberOnProjects"
"""
input MemberOnProjects_min_order_by {
  assignedAt: order_by
  assignedBy: order_by
  projectId: order_by
  userId: order_by
}

"""
response of any mutation on the table "MemberOnProjects"
"""
type MemberOnProjects_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [MemberOnProjects!]!
}

"""
on_conflict condition type for table "MemberOnProjects"
"""
input MemberOnProjects_on_conflict {
  constraint: MemberOnProjects_constraint!
  update_columns: [MemberOnProjects_update_column!]! = []
  where: MemberOnProjects_bool_exp
}

"""Ordering options when selecting data from "MemberOnProjects"."""
input MemberOnProjects_order_by {
  Project: Project_order_by
  User: User_order_by
  assignedAt: order_by
  assignedBy: order_by
  projectId: order_by
  userId: order_by
}

"""primary key columns input for table: MemberOnProjects"""
input MemberOnProjects_pk_columns_input {
  projectId: Int!
  userId: Int!
}

"""
select columns of table "MemberOnProjects"
"""
enum MemberOnProjects_select_column {
  """column name"""
  assignedAt

  """column name"""
  assignedBy

  """column name"""
  projectId

  """column name"""
  userId
}

"""
input type for updating data in table "MemberOnProjects"
"""
input MemberOnProjects_set_input {
  assignedAt: timestamp
  assignedBy: String
  projectId: Int
  userId: Int
}

"""aggregate stddev on columns"""
type MemberOnProjects_stddev_fields {
  projectId: Float
  userId: Float
}

"""
order by stddev() on columns of table "MemberOnProjects"
"""
input MemberOnProjects_stddev_order_by {
  projectId: order_by
  userId: order_by
}

"""aggregate stddev_pop on columns"""
type MemberOnProjects_stddev_pop_fields {
  projectId: Float
  userId: Float
}

"""
order by stddev_pop() on columns of table "MemberOnProjects"
"""
input MemberOnProjects_stddev_pop_order_by {
  projectId: order_by
  userId: order_by
}

"""aggregate stddev_samp on columns"""
type MemberOnProjects_stddev_samp_fields {
  projectId: Float
  userId: Float
}

"""
order by stddev_samp() on columns of table "MemberOnProjects"
"""
input MemberOnProjects_stddev_samp_order_by {
  projectId: order_by
  userId: order_by
}

"""aggregate sum on columns"""
type MemberOnProjects_sum_fields {
  projectId: Int
  userId: Int
}

"""
order by sum() on columns of table "MemberOnProjects"
"""
input MemberOnProjects_sum_order_by {
  projectId: order_by
  userId: order_by
}

"""
update columns of table "MemberOnProjects"
"""
enum MemberOnProjects_update_column {
  """column name"""
  assignedAt

  """column name"""
  assignedBy

  """column name"""
  projectId

  """column name"""
  userId
}

input MemberOnProjects_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: MemberOnProjects_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: MemberOnProjects_set_input

  """filter the rows which have to be updated"""
  where: MemberOnProjects_bool_exp!
}

"""aggregate var_pop on columns"""
type MemberOnProjects_var_pop_fields {
  projectId: Float
  userId: Float
}

"""
order by var_pop() on columns of table "MemberOnProjects"
"""
input MemberOnProjects_var_pop_order_by {
  projectId: order_by
  userId: order_by
}

"""aggregate var_samp on columns"""
type MemberOnProjects_var_samp_fields {
  projectId: Float
  userId: Float
}

"""
order by var_samp() on columns of table "MemberOnProjects"
"""
input MemberOnProjects_var_samp_order_by {
  projectId: order_by
  userId: order_by
}

"""aggregate variance on columns"""
type MemberOnProjects_variance_fields {
  projectId: Float
  userId: Float
}

"""
order by variance() on columns of table "MemberOnProjects"
"""
input MemberOnProjects_variance_order_by {
  projectId: order_by
  userId: order_by
}

"""
columns and relationships of "MemberOnTeams"
"""
type MemberOnTeams implements Node {
  """An object relationship"""
  Team: Team!

  """An object relationship"""
  User: User!
  assignedAt: timestamp!
  assignedBy: String!
  id: ID!
  teamId: Int!
  userId: Int!
}

"""
A Relay connection object on "MemberOnTeams"
"""
type MemberOnTeamsConnection {
  edges: [MemberOnTeamsEdge!]!
  pageInfo: PageInfo!
}

type MemberOnTeamsEdge {
  cursor: String!
  node: MemberOnTeams!
}

"""
aggregated selection of "MemberOnTeams"
"""
type MemberOnTeams_aggregate {
  aggregate: MemberOnTeams_aggregate_fields
  nodes: [MemberOnTeams!]!
}

input MemberOnTeams_aggregate_bool_exp {
  count: MemberOnTeams_aggregate_bool_exp_count
}

input MemberOnTeams_aggregate_bool_exp_count {
  arguments: [MemberOnTeams_select_column!]
  distinct: Boolean
  filter: MemberOnTeams_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "MemberOnTeams"
"""
type MemberOnTeams_aggregate_fields {
  avg: MemberOnTeams_avg_fields
  count(columns: [MemberOnTeams_select_column!], distinct: Boolean): Int!
  max: MemberOnTeams_max_fields
  min: MemberOnTeams_min_fields
  stddev: MemberOnTeams_stddev_fields
  stddev_pop: MemberOnTeams_stddev_pop_fields
  stddev_samp: MemberOnTeams_stddev_samp_fields
  sum: MemberOnTeams_sum_fields
  var_pop: MemberOnTeams_var_pop_fields
  var_samp: MemberOnTeams_var_samp_fields
  variance: MemberOnTeams_variance_fields
}

"""
order by aggregate values of table "MemberOnTeams"
"""
input MemberOnTeams_aggregate_order_by {
  avg: MemberOnTeams_avg_order_by
  count: order_by
  max: MemberOnTeams_max_order_by
  min: MemberOnTeams_min_order_by
  stddev: MemberOnTeams_stddev_order_by
  stddev_pop: MemberOnTeams_stddev_pop_order_by
  stddev_samp: MemberOnTeams_stddev_samp_order_by
  sum: MemberOnTeams_sum_order_by
  var_pop: MemberOnTeams_var_pop_order_by
  var_samp: MemberOnTeams_var_samp_order_by
  variance: MemberOnTeams_variance_order_by
}

"""
input type for inserting array relation for remote table "MemberOnTeams"
"""
input MemberOnTeams_arr_rel_insert_input {
  data: [MemberOnTeams_insert_input!]!

  """upsert condition"""
  on_conflict: MemberOnTeams_on_conflict
}

"""aggregate avg on columns"""
type MemberOnTeams_avg_fields {
  teamId: Float
  userId: Float
}

"""
order by avg() on columns of table "MemberOnTeams"
"""
input MemberOnTeams_avg_order_by {
  teamId: order_by
  userId: order_by
}

"""
Boolean expression to filter rows from the table "MemberOnTeams". All fields are combined with a logical 'AND'.
"""
input MemberOnTeams_bool_exp {
  Team: Team_bool_exp
  User: User_bool_exp
  _and: [MemberOnTeams_bool_exp!]
  _not: MemberOnTeams_bool_exp
  _or: [MemberOnTeams_bool_exp!]
  assignedAt: timestamp_comparison_exp
  assignedBy: String_comparison_exp
  teamId: Int_comparison_exp
  userId: Int_comparison_exp
}

"""
unique or primary key constraints on table "MemberOnTeams"
"""
enum MemberOnTeams_constraint {
  """
  unique or primary key constraint on columns "teamId", "userId"
  """
  MemberOnTeams_pkey
}

"""
input type for incrementing numeric columns in table "MemberOnTeams"
"""
input MemberOnTeams_inc_input {
  teamId: Int
  userId: Int
}

"""
input type for inserting data into table "MemberOnTeams"
"""
input MemberOnTeams_insert_input {
  Team: Team_obj_rel_insert_input
  User: User_obj_rel_insert_input
  assignedAt: timestamp
  assignedBy: String
  teamId: Int
  userId: Int
}

"""aggregate max on columns"""
type MemberOnTeams_max_fields {
  assignedAt: timestamp
  assignedBy: String
  teamId: Int
  userId: Int
}

"""
order by max() on columns of table "MemberOnTeams"
"""
input MemberOnTeams_max_order_by {
  assignedAt: order_by
  assignedBy: order_by
  teamId: order_by
  userId: order_by
}

"""aggregate min on columns"""
type MemberOnTeams_min_fields {
  assignedAt: timestamp
  assignedBy: String
  teamId: Int
  userId: Int
}

"""
order by min() on columns of table "MemberOnTeams"
"""
input MemberOnTeams_min_order_by {
  assignedAt: order_by
  assignedBy: order_by
  teamId: order_by
  userId: order_by
}

"""
response of any mutation on the table "MemberOnTeams"
"""
type MemberOnTeams_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [MemberOnTeams!]!
}

"""
on_conflict condition type for table "MemberOnTeams"
"""
input MemberOnTeams_on_conflict {
  constraint: MemberOnTeams_constraint!
  update_columns: [MemberOnTeams_update_column!]! = []
  where: MemberOnTeams_bool_exp
}

"""Ordering options when selecting data from "MemberOnTeams"."""
input MemberOnTeams_order_by {
  Team: Team_order_by
  User: User_order_by
  assignedAt: order_by
  assignedBy: order_by
  teamId: order_by
  userId: order_by
}

"""primary key columns input for table: MemberOnTeams"""
input MemberOnTeams_pk_columns_input {
  teamId: Int!
  userId: Int!
}

"""
select columns of table "MemberOnTeams"
"""
enum MemberOnTeams_select_column {
  """column name"""
  assignedAt

  """column name"""
  assignedBy

  """column name"""
  teamId

  """column name"""
  userId
}

"""
input type for updating data in table "MemberOnTeams"
"""
input MemberOnTeams_set_input {
  assignedAt: timestamp
  assignedBy: String
  teamId: Int
  userId: Int
}

"""aggregate stddev on columns"""
type MemberOnTeams_stddev_fields {
  teamId: Float
  userId: Float
}

"""
order by stddev() on columns of table "MemberOnTeams"
"""
input MemberOnTeams_stddev_order_by {
  teamId: order_by
  userId: order_by
}

"""aggregate stddev_pop on columns"""
type MemberOnTeams_stddev_pop_fields {
  teamId: Float
  userId: Float
}

"""
order by stddev_pop() on columns of table "MemberOnTeams"
"""
input MemberOnTeams_stddev_pop_order_by {
  teamId: order_by
  userId: order_by
}

"""aggregate stddev_samp on columns"""
type MemberOnTeams_stddev_samp_fields {
  teamId: Float
  userId: Float
}

"""
order by stddev_samp() on columns of table "MemberOnTeams"
"""
input MemberOnTeams_stddev_samp_order_by {
  teamId: order_by
  userId: order_by
}

"""aggregate sum on columns"""
type MemberOnTeams_sum_fields {
  teamId: Int
  userId: Int
}

"""
order by sum() on columns of table "MemberOnTeams"
"""
input MemberOnTeams_sum_order_by {
  teamId: order_by
  userId: order_by
}

"""
update columns of table "MemberOnTeams"
"""
enum MemberOnTeams_update_column {
  """column name"""
  assignedAt

  """column name"""
  assignedBy

  """column name"""
  teamId

  """column name"""
  userId
}

input MemberOnTeams_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: MemberOnTeams_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: MemberOnTeams_set_input

  """filter the rows which have to be updated"""
  where: MemberOnTeams_bool_exp!
}

"""aggregate var_pop on columns"""
type MemberOnTeams_var_pop_fields {
  teamId: Float
  userId: Float
}

"""
order by var_pop() on columns of table "MemberOnTeams"
"""
input MemberOnTeams_var_pop_order_by {
  teamId: order_by
  userId: order_by
}

"""aggregate var_samp on columns"""
type MemberOnTeams_var_samp_fields {
  teamId: Float
  userId: Float
}

"""
order by var_samp() on columns of table "MemberOnTeams"
"""
input MemberOnTeams_var_samp_order_by {
  teamId: order_by
  userId: order_by
}

"""aggregate variance on columns"""
type MemberOnTeams_variance_fields {
  teamId: Float
  userId: Float
}

"""
order by variance() on columns of table "MemberOnTeams"
"""
input MemberOnTeams_variance_order_by {
  teamId: order_by
  userId: order_by
}

"""An object with globally unique ID"""
interface Node {
  """A globally unique identifier"""
  id: ID!
}

"""
columns and relationships of "Organization"
"""
type Organization implements Node {
  """An array relationship"""
  EventLogs(
    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): [EventLog!]!

  """An aggregate relationship"""
  EventLogs_aggregate(
    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): EventLog_aggregate!

  """An array relationship connection"""
  EventLogs_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): EventLogConnection!

  """An array relationship"""
  Files(
    """distinct select on columns"""
    distinct_on: [File_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [File_order_by!]

    """filter the rows returned"""
    where: File_bool_exp
  ): [File!]!

  """An aggregate relationship"""
  Files_aggregate(
    """distinct select on columns"""
    distinct_on: [File_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [File_order_by!]

    """filter the rows returned"""
    where: File_bool_exp
  ): File_aggregate!

  """An array relationship connection"""
  Files_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [File_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [File_order_by!]

    """filter the rows returned"""
    where: File_bool_exp
  ): FileConnection!

  """An array relationship"""
  PermissionGroups(
    """distinct select on columns"""
    distinct_on: [PermissionGroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [PermissionGroup_order_by!]

    """filter the rows returned"""
    where: PermissionGroup_bool_exp
  ): [PermissionGroup!]!

  """An aggregate relationship"""
  PermissionGroups_aggregate(
    """distinct select on columns"""
    distinct_on: [PermissionGroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [PermissionGroup_order_by!]

    """filter the rows returned"""
    where: PermissionGroup_bool_exp
  ): PermissionGroup_aggregate!

  """An array relationship connection"""
  PermissionGroups_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [PermissionGroup_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [PermissionGroup_order_by!]

    """filter the rows returned"""
    where: PermissionGroup_bool_exp
  ): PermissionGroupConnection!

  """An array relationship"""
  Permissions(
    """distinct select on columns"""
    distinct_on: [Permission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Permission_order_by!]

    """filter the rows returned"""
    where: Permission_bool_exp
  ): [Permission!]!

  """An aggregate relationship"""
  Permissions_aggregate(
    """distinct select on columns"""
    distinct_on: [Permission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Permission_order_by!]

    """filter the rows returned"""
    where: Permission_bool_exp
  ): Permission_aggregate!

  """An array relationship connection"""
  Permissions_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Permission_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Permission_order_by!]

    """filter the rows returned"""
    where: Permission_bool_exp
  ): PermissionConnection!

  """An array relationship"""
  Projects(
    """distinct select on columns"""
    distinct_on: [Project_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Project_order_by!]

    """filter the rows returned"""
    where: Project_bool_exp
  ): [Project!]!

  """An aggregate relationship"""
  Projects_aggregate(
    """distinct select on columns"""
    distinct_on: [Project_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Project_order_by!]

    """filter the rows returned"""
    where: Project_bool_exp
  ): Project_aggregate!

  """An array relationship connection"""
  Projects_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Project_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Project_order_by!]

    """filter the rows returned"""
    where: Project_bool_exp
  ): ProjectConnection!

  """An array relationship"""
  Resources(
    """distinct select on columns"""
    distinct_on: [Resource_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Resource_order_by!]

    """filter the rows returned"""
    where: Resource_bool_exp
  ): [Resource!]!

  """An aggregate relationship"""
  Resources_aggregate(
    """distinct select on columns"""
    distinct_on: [Resource_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Resource_order_by!]

    """filter the rows returned"""
    where: Resource_bool_exp
  ): Resource_aggregate!

  """An array relationship connection"""
  Resources_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Resource_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Resource_order_by!]

    """filter the rows returned"""
    where: Resource_bool_exp
  ): ResourceConnection!

  """An array relationship"""
  Settings(
    """distinct select on columns"""
    distinct_on: [Settings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Settings_order_by!]

    """filter the rows returned"""
    where: Settings_bool_exp
  ): [Settings!]!

  """An aggregate relationship"""
  Settings_aggregate(
    """distinct select on columns"""
    distinct_on: [Settings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Settings_order_by!]

    """filter the rows returned"""
    where: Settings_bool_exp
  ): Settings_aggregate!

  """An array relationship connection"""
  Settings_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Settings_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Settings_order_by!]

    """filter the rows returned"""
    where: Settings_bool_exp
  ): SettingsConnection!

  """An array relationship"""
  TaskBoards(
    """distinct select on columns"""
    distinct_on: [TaskBoard_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskBoard_order_by!]

    """filter the rows returned"""
    where: TaskBoard_bool_exp
  ): [TaskBoard!]!

  """An aggregate relationship"""
  TaskBoards_aggregate(
    """distinct select on columns"""
    distinct_on: [TaskBoard_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskBoard_order_by!]

    """filter the rows returned"""
    where: TaskBoard_bool_exp
  ): TaskBoard_aggregate!

  """An array relationship connection"""
  TaskBoards_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [TaskBoard_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [TaskBoard_order_by!]

    """filter the rows returned"""
    where: TaskBoard_bool_exp
  ): TaskBoardConnection!

  """An array relationship"""
  TaskDefinitions(
    """distinct select on columns"""
    distinct_on: [TaskDefinition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): [TaskDefinition!]!

  """An aggregate relationship"""
  TaskDefinitions_aggregate(
    """distinct select on columns"""
    distinct_on: [TaskDefinition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): TaskDefinition_aggregate!

  """An array relationship connection"""
  TaskDefinitions_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [TaskDefinition_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): TaskDefinitionConnection!

  """An array relationship"""
  Tasks(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): [Task!]!

  """An aggregate relationship"""
  Tasks_aggregate(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): Task_aggregate!

  """An array relationship connection"""
  Tasks_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Task_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): TaskConnection!

  """An array relationship"""
  Teams(
    """distinct select on columns"""
    distinct_on: [Team_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Team_order_by!]

    """filter the rows returned"""
    where: Team_bool_exp
  ): [Team!]!

  """An aggregate relationship"""
  Teams_aggregate(
    """distinct select on columns"""
    distinct_on: [Team_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Team_order_by!]

    """filter the rows returned"""
    where: Team_bool_exp
  ): Team_aggregate!

  """An array relationship connection"""
  Teams_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Team_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Team_order_by!]

    """filter the rows returned"""
    where: Team_bool_exp
  ): TeamConnection!

  """An array relationship"""
  Users(
    """distinct select on columns"""
    distinct_on: [User_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [User_order_by!]

    """filter the rows returned"""
    where: User_bool_exp
  ): [User!]!

  """An aggregate relationship"""
  Users_aggregate(
    """distinct select on columns"""
    distinct_on: [User_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [User_order_by!]

    """filter the rows returned"""
    where: User_bool_exp
  ): User_aggregate!

  """An array relationship connection"""
  Users_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [User_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [User_order_by!]

    """filter the rows returned"""
    where: User_bool_exp
  ): UserConnection!
  createdAt: timestamp!
  description: String!
  id: ID!
  name: String!
  updatedAt: timestamp!
}

"""
A Relay connection object on "Organization"
"""
type OrganizationConnection {
  edges: [OrganizationEdge!]!
  pageInfo: PageInfo!
}

type OrganizationEdge {
  cursor: String!
  node: Organization!
}

"""
Boolean expression to filter rows from the table "Organization". All fields are combined with a logical 'AND'.
"""
input Organization_bool_exp {
  EventLogs: EventLog_bool_exp
  EventLogs_aggregate: EventLog_aggregate_bool_exp
  Files: File_bool_exp
  Files_aggregate: File_aggregate_bool_exp
  PermissionGroups: PermissionGroup_bool_exp
  PermissionGroups_aggregate: PermissionGroup_aggregate_bool_exp
  Permissions: Permission_bool_exp
  Permissions_aggregate: Permission_aggregate_bool_exp
  Projects: Project_bool_exp
  Projects_aggregate: Project_aggregate_bool_exp
  Resources: Resource_bool_exp
  Resources_aggregate: Resource_aggregate_bool_exp
  Settings: Settings_bool_exp
  Settings_aggregate: Settings_aggregate_bool_exp
  TaskBoards: TaskBoard_bool_exp
  TaskBoards_aggregate: TaskBoard_aggregate_bool_exp
  TaskDefinitions: TaskDefinition_bool_exp
  TaskDefinitions_aggregate: TaskDefinition_aggregate_bool_exp
  Tasks: Task_bool_exp
  Tasks_aggregate: Task_aggregate_bool_exp
  Teams: Team_bool_exp
  Teams_aggregate: Team_aggregate_bool_exp
  Users: User_bool_exp
  Users_aggregate: User_aggregate_bool_exp
  _and: [Organization_bool_exp!]
  _not: Organization_bool_exp
  _or: [Organization_bool_exp!]
  createdAt: timestamp_comparison_exp
  description: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  updatedAt: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "Organization"
"""
enum Organization_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Organization_pkey
}

"""
input type for incrementing numeric columns in table "Organization"
"""
input Organization_inc_input {
  id: Int
}

"""
input type for inserting data into table "Organization"
"""
input Organization_insert_input {
  EventLogs: EventLog_arr_rel_insert_input
  Files: File_arr_rel_insert_input
  PermissionGroups: PermissionGroup_arr_rel_insert_input
  Permissions: Permission_arr_rel_insert_input
  Projects: Project_arr_rel_insert_input
  Resources: Resource_arr_rel_insert_input
  Settings: Settings_arr_rel_insert_input
  TaskBoards: TaskBoard_arr_rel_insert_input
  TaskDefinitions: TaskDefinition_arr_rel_insert_input
  Tasks: Task_arr_rel_insert_input
  Teams: Team_arr_rel_insert_input
  Users: User_arr_rel_insert_input
  createdAt: timestamp
  description: String
  id: Int
  name: String
  updatedAt: timestamp
}

"""
response of any mutation on the table "Organization"
"""
type Organization_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Organization!]!
}

"""
input type for inserting object relation for remote table "Organization"
"""
input Organization_obj_rel_insert_input {
  data: Organization_insert_input!

  """upsert condition"""
  on_conflict: Organization_on_conflict
}

"""
on_conflict condition type for table "Organization"
"""
input Organization_on_conflict {
  constraint: Organization_constraint!
  update_columns: [Organization_update_column!]! = []
  where: Organization_bool_exp
}

"""Ordering options when selecting data from "Organization"."""
input Organization_order_by {
  EventLogs_aggregate: EventLog_aggregate_order_by
  Files_aggregate: File_aggregate_order_by
  PermissionGroups_aggregate: PermissionGroup_aggregate_order_by
  Permissions_aggregate: Permission_aggregate_order_by
  Projects_aggregate: Project_aggregate_order_by
  Resources_aggregate: Resource_aggregate_order_by
  Settings_aggregate: Settings_aggregate_order_by
  TaskBoards_aggregate: TaskBoard_aggregate_order_by
  TaskDefinitions_aggregate: TaskDefinition_aggregate_order_by
  Tasks_aggregate: Task_aggregate_order_by
  Teams_aggregate: Team_aggregate_order_by
  Users_aggregate: User_aggregate_order_by
  createdAt: order_by
  description: order_by
  id: order_by
  name: order_by
  updatedAt: order_by
}

"""primary key columns input for table: Organization"""
input Organization_pk_columns_input {
  id: Int!
}

"""
select columns of table "Organization"
"""
enum Organization_select_column {
  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updatedAt
}

"""
input type for updating data in table "Organization"
"""
input Organization_set_input {
  createdAt: timestamp
  description: String
  id: Int
  name: String
  updatedAt: timestamp
}

"""
update columns of table "Organization"
"""
enum Organization_update_column {
  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updatedAt
}

input Organization_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: Organization_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: Organization_set_input

  """filter the rows which have to be updated"""
  where: Organization_bool_exp!
}

type PageInfo {
  endCursor: String!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String!
}

"""
columns and relationships of "Permission"
"""
type Permission implements Node {
  """An object relationship"""
  Organization: Organization!

  """An object relationship"""
  PermissionGroup: PermissionGroup!

  """An array relationship"""
  UserPermissions(
    """distinct select on columns"""
    distinct_on: [UserPermission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [UserPermission_order_by!]

    """filter the rows returned"""
    where: UserPermission_bool_exp
  ): [UserPermission!]!

  """An aggregate relationship"""
  UserPermissions_aggregate(
    """distinct select on columns"""
    distinct_on: [UserPermission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [UserPermission_order_by!]

    """filter the rows returned"""
    where: UserPermission_bool_exp
  ): UserPermission_aggregate!

  """An array relationship connection"""
  UserPermissions_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [UserPermission_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [UserPermission_order_by!]

    """filter the rows returned"""
    where: UserPermission_bool_exp
  ): UserPermissionConnection!
  code: String!
  createdAt: timestamp!
  description: String!
  id: ID!
  name: String!
  organizationId: Int!
  permissionGroupId: Int!
  updatedAt: timestamp!
}

"""
A Relay connection object on "Permission"
"""
type PermissionConnection {
  edges: [PermissionEdge!]!
  pageInfo: PageInfo!
}

type PermissionEdge {
  cursor: String!
  node: Permission!
}

"""
columns and relationships of "PermissionGroup"
"""
type PermissionGroup implements Node {
  """An object relationship"""
  Organization: Organization!

  """An array relationship"""
  Permissions(
    """distinct select on columns"""
    distinct_on: [Permission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Permission_order_by!]

    """filter the rows returned"""
    where: Permission_bool_exp
  ): [Permission!]!

  """An aggregate relationship"""
  Permissions_aggregate(
    """distinct select on columns"""
    distinct_on: [Permission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Permission_order_by!]

    """filter the rows returned"""
    where: Permission_bool_exp
  ): Permission_aggregate!

  """An array relationship connection"""
  Permissions_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Permission_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Permission_order_by!]

    """filter the rows returned"""
    where: Permission_bool_exp
  ): PermissionConnection!
  createdAt: timestamp!
  description: String!
  id: ID!
  name: String!
  organizationId: Int!
  updatedAt: timestamp!
}

"""
A Relay connection object on "PermissionGroup"
"""
type PermissionGroupConnection {
  edges: [PermissionGroupEdge!]!
  pageInfo: PageInfo!
}

type PermissionGroupEdge {
  cursor: String!
  node: PermissionGroup!
}

"""
aggregated selection of "PermissionGroup"
"""
type PermissionGroup_aggregate {
  aggregate: PermissionGroup_aggregate_fields
  nodes: [PermissionGroup!]!
}

input PermissionGroup_aggregate_bool_exp {
  count: PermissionGroup_aggregate_bool_exp_count
}

input PermissionGroup_aggregate_bool_exp_count {
  arguments: [PermissionGroup_select_column!]
  distinct: Boolean
  filter: PermissionGroup_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "PermissionGroup"
"""
type PermissionGroup_aggregate_fields {
  avg: PermissionGroup_avg_fields
  count(columns: [PermissionGroup_select_column!], distinct: Boolean): Int!
  max: PermissionGroup_max_fields
  min: PermissionGroup_min_fields
  stddev: PermissionGroup_stddev_fields
  stddev_pop: PermissionGroup_stddev_pop_fields
  stddev_samp: PermissionGroup_stddev_samp_fields
  sum: PermissionGroup_sum_fields
  var_pop: PermissionGroup_var_pop_fields
  var_samp: PermissionGroup_var_samp_fields
  variance: PermissionGroup_variance_fields
}

"""
order by aggregate values of table "PermissionGroup"
"""
input PermissionGroup_aggregate_order_by {
  avg: PermissionGroup_avg_order_by
  count: order_by
  max: PermissionGroup_max_order_by
  min: PermissionGroup_min_order_by
  stddev: PermissionGroup_stddev_order_by
  stddev_pop: PermissionGroup_stddev_pop_order_by
  stddev_samp: PermissionGroup_stddev_samp_order_by
  sum: PermissionGroup_sum_order_by
  var_pop: PermissionGroup_var_pop_order_by
  var_samp: PermissionGroup_var_samp_order_by
  variance: PermissionGroup_variance_order_by
}

"""
input type for inserting array relation for remote table "PermissionGroup"
"""
input PermissionGroup_arr_rel_insert_input {
  data: [PermissionGroup_insert_input!]!

  """upsert condition"""
  on_conflict: PermissionGroup_on_conflict
}

"""aggregate avg on columns"""
type PermissionGroup_avg_fields {
  id: Float
  organizationId: Float
}

"""
order by avg() on columns of table "PermissionGroup"
"""
input PermissionGroup_avg_order_by {
  id: order_by
  organizationId: order_by
}

"""
Boolean expression to filter rows from the table "PermissionGroup". All fields are combined with a logical 'AND'.
"""
input PermissionGroup_bool_exp {
  Organization: Organization_bool_exp
  Permissions: Permission_bool_exp
  Permissions_aggregate: Permission_aggregate_bool_exp
  _and: [PermissionGroup_bool_exp!]
  _not: PermissionGroup_bool_exp
  _or: [PermissionGroup_bool_exp!]
  createdAt: timestamp_comparison_exp
  description: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  organizationId: Int_comparison_exp
  updatedAt: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "PermissionGroup"
"""
enum PermissionGroup_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  PermissionGroup_pkey
}

"""
input type for incrementing numeric columns in table "PermissionGroup"
"""
input PermissionGroup_inc_input {
  id: Int
  organizationId: Int
}

"""
input type for inserting data into table "PermissionGroup"
"""
input PermissionGroup_insert_input {
  Organization: Organization_obj_rel_insert_input
  Permissions: Permission_arr_rel_insert_input
  createdAt: timestamp
  description: String
  id: Int
  name: String
  organizationId: Int
  updatedAt: timestamp
}

"""aggregate max on columns"""
type PermissionGroup_max_fields {
  createdAt: timestamp
  description: String
  id: Int
  name: String
  organizationId: Int
  updatedAt: timestamp
}

"""
order by max() on columns of table "PermissionGroup"
"""
input PermissionGroup_max_order_by {
  createdAt: order_by
  description: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type PermissionGroup_min_fields {
  createdAt: timestamp
  description: String
  id: Int
  name: String
  organizationId: Int
  updatedAt: timestamp
}

"""
order by min() on columns of table "PermissionGroup"
"""
input PermissionGroup_min_order_by {
  createdAt: order_by
  description: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "PermissionGroup"
"""
type PermissionGroup_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [PermissionGroup!]!
}

"""
input type for inserting object relation for remote table "PermissionGroup"
"""
input PermissionGroup_obj_rel_insert_input {
  data: PermissionGroup_insert_input!

  """upsert condition"""
  on_conflict: PermissionGroup_on_conflict
}

"""
on_conflict condition type for table "PermissionGroup"
"""
input PermissionGroup_on_conflict {
  constraint: PermissionGroup_constraint!
  update_columns: [PermissionGroup_update_column!]! = []
  where: PermissionGroup_bool_exp
}

"""Ordering options when selecting data from "PermissionGroup"."""
input PermissionGroup_order_by {
  Organization: Organization_order_by
  Permissions_aggregate: Permission_aggregate_order_by
  createdAt: order_by
  description: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  updatedAt: order_by
}

"""primary key columns input for table: PermissionGroup"""
input PermissionGroup_pk_columns_input {
  id: Int!
}

"""
select columns of table "PermissionGroup"
"""
enum PermissionGroup_select_column {
  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  updatedAt
}

"""
input type for updating data in table "PermissionGroup"
"""
input PermissionGroup_set_input {
  createdAt: timestamp
  description: String
  id: Int
  name: String
  organizationId: Int
  updatedAt: timestamp
}

"""aggregate stddev on columns"""
type PermissionGroup_stddev_fields {
  id: Float
  organizationId: Float
}

"""
order by stddev() on columns of table "PermissionGroup"
"""
input PermissionGroup_stddev_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate stddev_pop on columns"""
type PermissionGroup_stddev_pop_fields {
  id: Float
  organizationId: Float
}

"""
order by stddev_pop() on columns of table "PermissionGroup"
"""
input PermissionGroup_stddev_pop_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate stddev_samp on columns"""
type PermissionGroup_stddev_samp_fields {
  id: Float
  organizationId: Float
}

"""
order by stddev_samp() on columns of table "PermissionGroup"
"""
input PermissionGroup_stddev_samp_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate sum on columns"""
type PermissionGroup_sum_fields {
  id: Int
  organizationId: Int
}

"""
order by sum() on columns of table "PermissionGroup"
"""
input PermissionGroup_sum_order_by {
  id: order_by
  organizationId: order_by
}

"""
update columns of table "PermissionGroup"
"""
enum PermissionGroup_update_column {
  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  updatedAt
}

input PermissionGroup_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: PermissionGroup_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: PermissionGroup_set_input

  """filter the rows which have to be updated"""
  where: PermissionGroup_bool_exp!
}

"""aggregate var_pop on columns"""
type PermissionGroup_var_pop_fields {
  id: Float
  organizationId: Float
}

"""
order by var_pop() on columns of table "PermissionGroup"
"""
input PermissionGroup_var_pop_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate var_samp on columns"""
type PermissionGroup_var_samp_fields {
  id: Float
  organizationId: Float
}

"""
order by var_samp() on columns of table "PermissionGroup"
"""
input PermissionGroup_var_samp_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate variance on columns"""
type PermissionGroup_variance_fields {
  id: Float
  organizationId: Float
}

"""
order by variance() on columns of table "PermissionGroup"
"""
input PermissionGroup_variance_order_by {
  id: order_by
  organizationId: order_by
}

"""
aggregated selection of "Permission"
"""
type Permission_aggregate {
  aggregate: Permission_aggregate_fields
  nodes: [Permission!]!
}

input Permission_aggregate_bool_exp {
  count: Permission_aggregate_bool_exp_count
}

input Permission_aggregate_bool_exp_count {
  arguments: [Permission_select_column!]
  distinct: Boolean
  filter: Permission_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "Permission"
"""
type Permission_aggregate_fields {
  avg: Permission_avg_fields
  count(columns: [Permission_select_column!], distinct: Boolean): Int!
  max: Permission_max_fields
  min: Permission_min_fields
  stddev: Permission_stddev_fields
  stddev_pop: Permission_stddev_pop_fields
  stddev_samp: Permission_stddev_samp_fields
  sum: Permission_sum_fields
  var_pop: Permission_var_pop_fields
  var_samp: Permission_var_samp_fields
  variance: Permission_variance_fields
}

"""
order by aggregate values of table "Permission"
"""
input Permission_aggregate_order_by {
  avg: Permission_avg_order_by
  count: order_by
  max: Permission_max_order_by
  min: Permission_min_order_by
  stddev: Permission_stddev_order_by
  stddev_pop: Permission_stddev_pop_order_by
  stddev_samp: Permission_stddev_samp_order_by
  sum: Permission_sum_order_by
  var_pop: Permission_var_pop_order_by
  var_samp: Permission_var_samp_order_by
  variance: Permission_variance_order_by
}

"""
input type for inserting array relation for remote table "Permission"
"""
input Permission_arr_rel_insert_input {
  data: [Permission_insert_input!]!

  """upsert condition"""
  on_conflict: Permission_on_conflict
}

"""aggregate avg on columns"""
type Permission_avg_fields {
  id: Float
  organizationId: Float
  permissionGroupId: Float
}

"""
order by avg() on columns of table "Permission"
"""
input Permission_avg_order_by {
  id: order_by
  organizationId: order_by
  permissionGroupId: order_by
}

"""
Boolean expression to filter rows from the table "Permission". All fields are combined with a logical 'AND'.
"""
input Permission_bool_exp {
  Organization: Organization_bool_exp
  PermissionGroup: PermissionGroup_bool_exp
  UserPermissions: UserPermission_bool_exp
  UserPermissions_aggregate: UserPermission_aggregate_bool_exp
  _and: [Permission_bool_exp!]
  _not: Permission_bool_exp
  _or: [Permission_bool_exp!]
  code: String_comparison_exp
  createdAt: timestamp_comparison_exp
  description: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  organizationId: Int_comparison_exp
  permissionGroupId: Int_comparison_exp
  updatedAt: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "Permission"
"""
enum Permission_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Permission_pkey
}

"""
input type for incrementing numeric columns in table "Permission"
"""
input Permission_inc_input {
  id: Int
  organizationId: Int
  permissionGroupId: Int
}

"""
input type for inserting data into table "Permission"
"""
input Permission_insert_input {
  Organization: Organization_obj_rel_insert_input
  PermissionGroup: PermissionGroup_obj_rel_insert_input
  UserPermissions: UserPermission_arr_rel_insert_input
  code: String
  createdAt: timestamp
  description: String
  id: Int
  name: String
  organizationId: Int
  permissionGroupId: Int
  updatedAt: timestamp
}

"""aggregate max on columns"""
type Permission_max_fields {
  code: String
  createdAt: timestamp
  description: String
  id: Int
  name: String
  organizationId: Int
  permissionGroupId: Int
  updatedAt: timestamp
}

"""
order by max() on columns of table "Permission"
"""
input Permission_max_order_by {
  code: order_by
  createdAt: order_by
  description: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  permissionGroupId: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type Permission_min_fields {
  code: String
  createdAt: timestamp
  description: String
  id: Int
  name: String
  organizationId: Int
  permissionGroupId: Int
  updatedAt: timestamp
}

"""
order by min() on columns of table "Permission"
"""
input Permission_min_order_by {
  code: order_by
  createdAt: order_by
  description: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  permissionGroupId: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "Permission"
"""
type Permission_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Permission!]!
}

"""
input type for inserting object relation for remote table "Permission"
"""
input Permission_obj_rel_insert_input {
  data: Permission_insert_input!

  """upsert condition"""
  on_conflict: Permission_on_conflict
}

"""
on_conflict condition type for table "Permission"
"""
input Permission_on_conflict {
  constraint: Permission_constraint!
  update_columns: [Permission_update_column!]! = []
  where: Permission_bool_exp
}

"""Ordering options when selecting data from "Permission"."""
input Permission_order_by {
  Organization: Organization_order_by
  PermissionGroup: PermissionGroup_order_by
  UserPermissions_aggregate: UserPermission_aggregate_order_by
  code: order_by
  createdAt: order_by
  description: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  permissionGroupId: order_by
  updatedAt: order_by
}

"""primary key columns input for table: Permission"""
input Permission_pk_columns_input {
  id: Int!
}

"""
select columns of table "Permission"
"""
enum Permission_select_column {
  """column name"""
  code

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  permissionGroupId

  """column name"""
  updatedAt
}

"""
input type for updating data in table "Permission"
"""
input Permission_set_input {
  code: String
  createdAt: timestamp
  description: String
  id: Int
  name: String
  organizationId: Int
  permissionGroupId: Int
  updatedAt: timestamp
}

"""aggregate stddev on columns"""
type Permission_stddev_fields {
  id: Float
  organizationId: Float
  permissionGroupId: Float
}

"""
order by stddev() on columns of table "Permission"
"""
input Permission_stddev_order_by {
  id: order_by
  organizationId: order_by
  permissionGroupId: order_by
}

"""aggregate stddev_pop on columns"""
type Permission_stddev_pop_fields {
  id: Float
  organizationId: Float
  permissionGroupId: Float
}

"""
order by stddev_pop() on columns of table "Permission"
"""
input Permission_stddev_pop_order_by {
  id: order_by
  organizationId: order_by
  permissionGroupId: order_by
}

"""aggregate stddev_samp on columns"""
type Permission_stddev_samp_fields {
  id: Float
  organizationId: Float
  permissionGroupId: Float
}

"""
order by stddev_samp() on columns of table "Permission"
"""
input Permission_stddev_samp_order_by {
  id: order_by
  organizationId: order_by
  permissionGroupId: order_by
}

"""aggregate sum on columns"""
type Permission_sum_fields {
  id: Int
  organizationId: Int
  permissionGroupId: Int
}

"""
order by sum() on columns of table "Permission"
"""
input Permission_sum_order_by {
  id: order_by
  organizationId: order_by
  permissionGroupId: order_by
}

"""
update columns of table "Permission"
"""
enum Permission_update_column {
  """column name"""
  code

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  permissionGroupId

  """column name"""
  updatedAt
}

input Permission_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: Permission_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: Permission_set_input

  """filter the rows which have to be updated"""
  where: Permission_bool_exp!
}

"""aggregate var_pop on columns"""
type Permission_var_pop_fields {
  id: Float
  organizationId: Float
  permissionGroupId: Float
}

"""
order by var_pop() on columns of table "Permission"
"""
input Permission_var_pop_order_by {
  id: order_by
  organizationId: order_by
  permissionGroupId: order_by
}

"""aggregate var_samp on columns"""
type Permission_var_samp_fields {
  id: Float
  organizationId: Float
  permissionGroupId: Float
}

"""
order by var_samp() on columns of table "Permission"
"""
input Permission_var_samp_order_by {
  id: order_by
  organizationId: order_by
  permissionGroupId: order_by
}

"""aggregate variance on columns"""
type Permission_variance_fields {
  id: Float
  organizationId: Float
  permissionGroupId: Float
}

"""
order by variance() on columns of table "Permission"
"""
input Permission_variance_order_by {
  id: order_by
  organizationId: order_by
  permissionGroupId: order_by
}

"""
columns and relationships of "Post"
"""
type Post implements Node {
  """An object relationship"""
  User: User
  authorId: Int
  content: String
  createdAt: timestamp!
  id: ID!
  published: Boolean!
  title: String!
  updatedAt: timestamp!
}

"""
A Relay connection object on "Post"
"""
type PostConnection {
  edges: [PostEdge!]!
  pageInfo: PageInfo!
}

type PostEdge {
  cursor: String!
  node: Post!
}

"""
aggregated selection of "Post"
"""
type Post_aggregate {
  aggregate: Post_aggregate_fields
  nodes: [Post!]!
}

input Post_aggregate_bool_exp {
  bool_and: Post_aggregate_bool_exp_bool_and
  bool_or: Post_aggregate_bool_exp_bool_or
  count: Post_aggregate_bool_exp_count
}

input Post_aggregate_bool_exp_bool_and {
  arguments: Post_select_column_Post_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: Post_bool_exp
  predicate: Boolean_comparison_exp!
}

input Post_aggregate_bool_exp_bool_or {
  arguments: Post_select_column_Post_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: Post_bool_exp
  predicate: Boolean_comparison_exp!
}

input Post_aggregate_bool_exp_count {
  arguments: [Post_select_column!]
  distinct: Boolean
  filter: Post_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "Post"
"""
type Post_aggregate_fields {
  avg: Post_avg_fields
  count(columns: [Post_select_column!], distinct: Boolean): Int!
  max: Post_max_fields
  min: Post_min_fields
  stddev: Post_stddev_fields
  stddev_pop: Post_stddev_pop_fields
  stddev_samp: Post_stddev_samp_fields
  sum: Post_sum_fields
  var_pop: Post_var_pop_fields
  var_samp: Post_var_samp_fields
  variance: Post_variance_fields
}

"""
order by aggregate values of table "Post"
"""
input Post_aggregate_order_by {
  avg: Post_avg_order_by
  count: order_by
  max: Post_max_order_by
  min: Post_min_order_by
  stddev: Post_stddev_order_by
  stddev_pop: Post_stddev_pop_order_by
  stddev_samp: Post_stddev_samp_order_by
  sum: Post_sum_order_by
  var_pop: Post_var_pop_order_by
  var_samp: Post_var_samp_order_by
  variance: Post_variance_order_by
}

"""
input type for inserting array relation for remote table "Post"
"""
input Post_arr_rel_insert_input {
  data: [Post_insert_input!]!

  """upsert condition"""
  on_conflict: Post_on_conflict
}

"""aggregate avg on columns"""
type Post_avg_fields {
  authorId: Float
  id: Float
}

"""
order by avg() on columns of table "Post"
"""
input Post_avg_order_by {
  authorId: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "Post". All fields are combined with a logical 'AND'.
"""
input Post_bool_exp {
  User: User_bool_exp
  _and: [Post_bool_exp!]
  _not: Post_bool_exp
  _or: [Post_bool_exp!]
  authorId: Int_comparison_exp
  content: String_comparison_exp
  createdAt: timestamp_comparison_exp
  id: Int_comparison_exp
  published: Boolean_comparison_exp
  title: String_comparison_exp
  updatedAt: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "Post"
"""
enum Post_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Post_pkey
}

"""
input type for incrementing numeric columns in table "Post"
"""
input Post_inc_input {
  authorId: Int
  id: Int
}

"""
input type for inserting data into table "Post"
"""
input Post_insert_input {
  User: User_obj_rel_insert_input
  authorId: Int
  content: String
  createdAt: timestamp
  id: Int
  published: Boolean
  title: String
  updatedAt: timestamp
}

"""aggregate max on columns"""
type Post_max_fields {
  authorId: Int
  content: String
  createdAt: timestamp
  id: Int
  title: String
  updatedAt: timestamp
}

"""
order by max() on columns of table "Post"
"""
input Post_max_order_by {
  authorId: order_by
  content: order_by
  createdAt: order_by
  id: order_by
  title: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type Post_min_fields {
  authorId: Int
  content: String
  createdAt: timestamp
  id: Int
  title: String
  updatedAt: timestamp
}

"""
order by min() on columns of table "Post"
"""
input Post_min_order_by {
  authorId: order_by
  content: order_by
  createdAt: order_by
  id: order_by
  title: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "Post"
"""
type Post_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Post!]!
}

"""
on_conflict condition type for table "Post"
"""
input Post_on_conflict {
  constraint: Post_constraint!
  update_columns: [Post_update_column!]! = []
  where: Post_bool_exp
}

"""Ordering options when selecting data from "Post"."""
input Post_order_by {
  User: User_order_by
  authorId: order_by
  content: order_by
  createdAt: order_by
  id: order_by
  published: order_by
  title: order_by
  updatedAt: order_by
}

"""primary key columns input for table: Post"""
input Post_pk_columns_input {
  id: Int!
}

"""
select columns of table "Post"
"""
enum Post_select_column {
  """column name"""
  authorId

  """column name"""
  content

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  published

  """column name"""
  title

  """column name"""
  updatedAt
}

"""
select "Post_aggregate_bool_exp_bool_and_arguments_columns" columns of table "Post"
"""
enum Post_select_column_Post_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  published
}

"""
select "Post_aggregate_bool_exp_bool_or_arguments_columns" columns of table "Post"
"""
enum Post_select_column_Post_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  published
}

"""
input type for updating data in table "Post"
"""
input Post_set_input {
  authorId: Int
  content: String
  createdAt: timestamp
  id: Int
  published: Boolean
  title: String
  updatedAt: timestamp
}

"""aggregate stddev on columns"""
type Post_stddev_fields {
  authorId: Float
  id: Float
}

"""
order by stddev() on columns of table "Post"
"""
input Post_stddev_order_by {
  authorId: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type Post_stddev_pop_fields {
  authorId: Float
  id: Float
}

"""
order by stddev_pop() on columns of table "Post"
"""
input Post_stddev_pop_order_by {
  authorId: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type Post_stddev_samp_fields {
  authorId: Float
  id: Float
}

"""
order by stddev_samp() on columns of table "Post"
"""
input Post_stddev_samp_order_by {
  authorId: order_by
  id: order_by
}

"""aggregate sum on columns"""
type Post_sum_fields {
  authorId: Int
  id: Int
}

"""
order by sum() on columns of table "Post"
"""
input Post_sum_order_by {
  authorId: order_by
  id: order_by
}

"""
update columns of table "Post"
"""
enum Post_update_column {
  """column name"""
  authorId

  """column name"""
  content

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  published

  """column name"""
  title

  """column name"""
  updatedAt
}

input Post_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: Post_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: Post_set_input

  """filter the rows which have to be updated"""
  where: Post_bool_exp!
}

"""aggregate var_pop on columns"""
type Post_var_pop_fields {
  authorId: Float
  id: Float
}

"""
order by var_pop() on columns of table "Post"
"""
input Post_var_pop_order_by {
  authorId: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type Post_var_samp_fields {
  authorId: Float
  id: Float
}

"""
order by var_samp() on columns of table "Post"
"""
input Post_var_samp_order_by {
  authorId: order_by
  id: order_by
}

"""aggregate variance on columns"""
type Post_variance_fields {
  authorId: Float
  id: Float
}

"""
order by variance() on columns of table "Post"
"""
input Post_variance_order_by {
  authorId: order_by
  id: order_by
}

"""
columns and relationships of "Project"
"""
type Project implements Node {
  """An array relationship"""
  MemberOnProjects(
    """distinct select on columns"""
    distinct_on: [MemberOnProjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnProjects_order_by!]

    """filter the rows returned"""
    where: MemberOnProjects_bool_exp
  ): [MemberOnProjects!]!

  """An aggregate relationship"""
  MemberOnProjects_aggregate(
    """distinct select on columns"""
    distinct_on: [MemberOnProjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnProjects_order_by!]

    """filter the rows returned"""
    where: MemberOnProjects_bool_exp
  ): MemberOnProjects_aggregate!

  """An array relationship connection"""
  MemberOnProjects_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [MemberOnProjects_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnProjects_order_by!]

    """filter the rows returned"""
    where: MemberOnProjects_bool_exp
  ): MemberOnProjectsConnection!

  """An object relationship"""
  Organization: Organization!

  """An array relationship"""
  ProjectSettings(
    """distinct select on columns"""
    distinct_on: [ProjectSettings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ProjectSettings_order_by!]

    """filter the rows returned"""
    where: ProjectSettings_bool_exp
  ): [ProjectSettings!]!

  """An aggregate relationship"""
  ProjectSettings_aggregate(
    """distinct select on columns"""
    distinct_on: [ProjectSettings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ProjectSettings_order_by!]

    """filter the rows returned"""
    where: ProjectSettings_bool_exp
  ): ProjectSettings_aggregate!

  """An array relationship connection"""
  ProjectSettings_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [ProjectSettings_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [ProjectSettings_order_by!]

    """filter the rows returned"""
    where: ProjectSettings_bool_exp
  ): ProjectSettingsConnection!

  """An array relationship"""
  TaskBoards(
    """distinct select on columns"""
    distinct_on: [TaskBoard_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskBoard_order_by!]

    """filter the rows returned"""
    where: TaskBoard_bool_exp
  ): [TaskBoard!]!

  """An aggregate relationship"""
  TaskBoards_aggregate(
    """distinct select on columns"""
    distinct_on: [TaskBoard_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskBoard_order_by!]

    """filter the rows returned"""
    where: TaskBoard_bool_exp
  ): TaskBoard_aggregate!

  """An array relationship connection"""
  TaskBoards_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [TaskBoard_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [TaskBoard_order_by!]

    """filter the rows returned"""
    where: TaskBoard_bool_exp
  ): TaskBoardConnection!

  """An object relationship"""
  TaskDefinition: TaskDefinition!

  """An array relationship"""
  Tasks(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): [Task!]!

  """An aggregate relationship"""
  Tasks_aggregate(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): Task_aggregate!

  """An array relationship connection"""
  Tasks_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Task_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): TaskConnection!

  """An object relationship"""
  User: User!
  code: String!
  createdAt: timestamp!
  creatorId: Int!
  description: String!
  icon: String!
  id: ID!
  managerId: Int!
  name: String!
  organizationId: Int!
  reporterId: Int!
  taskDefinitionId: Int!
  updatedAt: timestamp!

  """An object relationship"""
  userByManagerid: User!

  """An object relationship"""
  userByReporterid: User!
}

"""
A Relay connection object on "Project"
"""
type ProjectConnection {
  edges: [ProjectEdge!]!
  pageInfo: PageInfo!
}

type ProjectEdge {
  cursor: String!
  node: Project!
}

"""
columns and relationships of "ProjectSettings"
"""
type ProjectSettings implements Node {
  """An object relationship"""
  Project: Project!
  createdAt: timestamp!
  id: ID!
  key: String!
  projectId: Int!
  updatedAt: timestamp!
  value(
    """JSON select path"""
    path: String
  ): jsonb!
}

"""
A Relay connection object on "ProjectSettings"
"""
type ProjectSettingsConnection {
  edges: [ProjectSettingsEdge!]!
  pageInfo: PageInfo!
}

type ProjectSettingsEdge {
  cursor: String!
  node: ProjectSettings!
}

"""
aggregated selection of "ProjectSettings"
"""
type ProjectSettings_aggregate {
  aggregate: ProjectSettings_aggregate_fields
  nodes: [ProjectSettings!]!
}

input ProjectSettings_aggregate_bool_exp {
  count: ProjectSettings_aggregate_bool_exp_count
}

input ProjectSettings_aggregate_bool_exp_count {
  arguments: [ProjectSettings_select_column!]
  distinct: Boolean
  filter: ProjectSettings_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "ProjectSettings"
"""
type ProjectSettings_aggregate_fields {
  avg: ProjectSettings_avg_fields
  count(columns: [ProjectSettings_select_column!], distinct: Boolean): Int!
  max: ProjectSettings_max_fields
  min: ProjectSettings_min_fields
  stddev: ProjectSettings_stddev_fields
  stddev_pop: ProjectSettings_stddev_pop_fields
  stddev_samp: ProjectSettings_stddev_samp_fields
  sum: ProjectSettings_sum_fields
  var_pop: ProjectSettings_var_pop_fields
  var_samp: ProjectSettings_var_samp_fields
  variance: ProjectSettings_variance_fields
}

"""
order by aggregate values of table "ProjectSettings"
"""
input ProjectSettings_aggregate_order_by {
  avg: ProjectSettings_avg_order_by
  count: order_by
  max: ProjectSettings_max_order_by
  min: ProjectSettings_min_order_by
  stddev: ProjectSettings_stddev_order_by
  stddev_pop: ProjectSettings_stddev_pop_order_by
  stddev_samp: ProjectSettings_stddev_samp_order_by
  sum: ProjectSettings_sum_order_by
  var_pop: ProjectSettings_var_pop_order_by
  var_samp: ProjectSettings_var_samp_order_by
  variance: ProjectSettings_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ProjectSettings_append_input {
  value: jsonb
}

"""
input type for inserting array relation for remote table "ProjectSettings"
"""
input ProjectSettings_arr_rel_insert_input {
  data: [ProjectSettings_insert_input!]!

  """upsert condition"""
  on_conflict: ProjectSettings_on_conflict
}

"""aggregate avg on columns"""
type ProjectSettings_avg_fields {
  id: Float
  projectId: Float
}

"""
order by avg() on columns of table "ProjectSettings"
"""
input ProjectSettings_avg_order_by {
  id: order_by
  projectId: order_by
}

"""
Boolean expression to filter rows from the table "ProjectSettings". All fields are combined with a logical 'AND'.
"""
input ProjectSettings_bool_exp {
  Project: Project_bool_exp
  _and: [ProjectSettings_bool_exp!]
  _not: ProjectSettings_bool_exp
  _or: [ProjectSettings_bool_exp!]
  createdAt: timestamp_comparison_exp
  id: Int_comparison_exp
  key: String_comparison_exp
  projectId: Int_comparison_exp
  updatedAt: timestamp_comparison_exp
  value: jsonb_comparison_exp
}

"""
unique or primary key constraints on table "ProjectSettings"
"""
enum ProjectSettings_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  ProjectSettings_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ProjectSettings_delete_at_path_input {
  value: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ProjectSettings_delete_elem_input {
  value: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ProjectSettings_delete_key_input {
  value: String
}

"""
input type for incrementing numeric columns in table "ProjectSettings"
"""
input ProjectSettings_inc_input {
  id: Int
  projectId: Int
}

"""
input type for inserting data into table "ProjectSettings"
"""
input ProjectSettings_insert_input {
  Project: Project_obj_rel_insert_input
  createdAt: timestamp
  id: Int
  key: String
  projectId: Int
  updatedAt: timestamp
  value: jsonb
}

"""aggregate max on columns"""
type ProjectSettings_max_fields {
  createdAt: timestamp
  id: Int
  key: String
  projectId: Int
  updatedAt: timestamp
}

"""
order by max() on columns of table "ProjectSettings"
"""
input ProjectSettings_max_order_by {
  createdAt: order_by
  id: order_by
  key: order_by
  projectId: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type ProjectSettings_min_fields {
  createdAt: timestamp
  id: Int
  key: String
  projectId: Int
  updatedAt: timestamp
}

"""
order by min() on columns of table "ProjectSettings"
"""
input ProjectSettings_min_order_by {
  createdAt: order_by
  id: order_by
  key: order_by
  projectId: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "ProjectSettings"
"""
type ProjectSettings_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ProjectSettings!]!
}

"""
on_conflict condition type for table "ProjectSettings"
"""
input ProjectSettings_on_conflict {
  constraint: ProjectSettings_constraint!
  update_columns: [ProjectSettings_update_column!]! = []
  where: ProjectSettings_bool_exp
}

"""Ordering options when selecting data from "ProjectSettings"."""
input ProjectSettings_order_by {
  Project: Project_order_by
  createdAt: order_by
  id: order_by
  key: order_by
  projectId: order_by
  updatedAt: order_by
  value: order_by
}

"""primary key columns input for table: ProjectSettings"""
input ProjectSettings_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ProjectSettings_prepend_input {
  value: jsonb
}

"""
select columns of table "ProjectSettings"
"""
enum ProjectSettings_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  key

  """column name"""
  projectId

  """column name"""
  updatedAt

  """column name"""
  value
}

"""
input type for updating data in table "ProjectSettings"
"""
input ProjectSettings_set_input {
  createdAt: timestamp
  id: Int
  key: String
  projectId: Int
  updatedAt: timestamp
  value: jsonb
}

"""aggregate stddev on columns"""
type ProjectSettings_stddev_fields {
  id: Float
  projectId: Float
}

"""
order by stddev() on columns of table "ProjectSettings"
"""
input ProjectSettings_stddev_order_by {
  id: order_by
  projectId: order_by
}

"""aggregate stddev_pop on columns"""
type ProjectSettings_stddev_pop_fields {
  id: Float
  projectId: Float
}

"""
order by stddev_pop() on columns of table "ProjectSettings"
"""
input ProjectSettings_stddev_pop_order_by {
  id: order_by
  projectId: order_by
}

"""aggregate stddev_samp on columns"""
type ProjectSettings_stddev_samp_fields {
  id: Float
  projectId: Float
}

"""
order by stddev_samp() on columns of table "ProjectSettings"
"""
input ProjectSettings_stddev_samp_order_by {
  id: order_by
  projectId: order_by
}

"""aggregate sum on columns"""
type ProjectSettings_sum_fields {
  id: Int
  projectId: Int
}

"""
order by sum() on columns of table "ProjectSettings"
"""
input ProjectSettings_sum_order_by {
  id: order_by
  projectId: order_by
}

"""
update columns of table "ProjectSettings"
"""
enum ProjectSettings_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  key

  """column name"""
  projectId

  """column name"""
  updatedAt

  """column name"""
  value
}

input ProjectSettings_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: ProjectSettings_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: ProjectSettings_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: ProjectSettings_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: ProjectSettings_delete_key_input

  """increments the numeric columns with given value of the filtered values"""
  _inc: ProjectSettings_inc_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: ProjectSettings_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: ProjectSettings_set_input

  """filter the rows which have to be updated"""
  where: ProjectSettings_bool_exp!
}

"""aggregate var_pop on columns"""
type ProjectSettings_var_pop_fields {
  id: Float
  projectId: Float
}

"""
order by var_pop() on columns of table "ProjectSettings"
"""
input ProjectSettings_var_pop_order_by {
  id: order_by
  projectId: order_by
}

"""aggregate var_samp on columns"""
type ProjectSettings_var_samp_fields {
  id: Float
  projectId: Float
}

"""
order by var_samp() on columns of table "ProjectSettings"
"""
input ProjectSettings_var_samp_order_by {
  id: order_by
  projectId: order_by
}

"""aggregate variance on columns"""
type ProjectSettings_variance_fields {
  id: Float
  projectId: Float
}

"""
order by variance() on columns of table "ProjectSettings"
"""
input ProjectSettings_variance_order_by {
  id: order_by
  projectId: order_by
}

"""
aggregated selection of "Project"
"""
type Project_aggregate {
  aggregate: Project_aggregate_fields
  nodes: [Project!]!
}

input Project_aggregate_bool_exp {
  count: Project_aggregate_bool_exp_count
}

input Project_aggregate_bool_exp_count {
  arguments: [Project_select_column!]
  distinct: Boolean
  filter: Project_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "Project"
"""
type Project_aggregate_fields {
  avg: Project_avg_fields
  count(columns: [Project_select_column!], distinct: Boolean): Int!
  max: Project_max_fields
  min: Project_min_fields
  stddev: Project_stddev_fields
  stddev_pop: Project_stddev_pop_fields
  stddev_samp: Project_stddev_samp_fields
  sum: Project_sum_fields
  var_pop: Project_var_pop_fields
  var_samp: Project_var_samp_fields
  variance: Project_variance_fields
}

"""
order by aggregate values of table "Project"
"""
input Project_aggregate_order_by {
  avg: Project_avg_order_by
  count: order_by
  max: Project_max_order_by
  min: Project_min_order_by
  stddev: Project_stddev_order_by
  stddev_pop: Project_stddev_pop_order_by
  stddev_samp: Project_stddev_samp_order_by
  sum: Project_sum_order_by
  var_pop: Project_var_pop_order_by
  var_samp: Project_var_samp_order_by
  variance: Project_variance_order_by
}

"""
input type for inserting array relation for remote table "Project"
"""
input Project_arr_rel_insert_input {
  data: [Project_insert_input!]!

  """upsert condition"""
  on_conflict: Project_on_conflict
}

"""aggregate avg on columns"""
type Project_avg_fields {
  creatorId: Float
  id: Float
  managerId: Float
  organizationId: Float
  reporterId: Float
  taskDefinitionId: Float
}

"""
order by avg() on columns of table "Project"
"""
input Project_avg_order_by {
  creatorId: order_by
  id: order_by
  managerId: order_by
  organizationId: order_by
  reporterId: order_by
  taskDefinitionId: order_by
}

"""
Boolean expression to filter rows from the table "Project". All fields are combined with a logical 'AND'.
"""
input Project_bool_exp {
  MemberOnProjects: MemberOnProjects_bool_exp
  MemberOnProjects_aggregate: MemberOnProjects_aggregate_bool_exp
  Organization: Organization_bool_exp
  ProjectSettings: ProjectSettings_bool_exp
  ProjectSettings_aggregate: ProjectSettings_aggregate_bool_exp
  TaskBoards: TaskBoard_bool_exp
  TaskBoards_aggregate: TaskBoard_aggregate_bool_exp
  TaskDefinition: TaskDefinition_bool_exp
  Tasks: Task_bool_exp
  Tasks_aggregate: Task_aggregate_bool_exp
  User: User_bool_exp
  _and: [Project_bool_exp!]
  _not: Project_bool_exp
  _or: [Project_bool_exp!]
  code: String_comparison_exp
  createdAt: timestamp_comparison_exp
  creatorId: Int_comparison_exp
  description: String_comparison_exp
  icon: String_comparison_exp
  id: Int_comparison_exp
  managerId: Int_comparison_exp
  name: String_comparison_exp
  organizationId: Int_comparison_exp
  reporterId: Int_comparison_exp
  taskDefinitionId: Int_comparison_exp
  updatedAt: timestamp_comparison_exp
  userByManagerid: User_bool_exp
  userByReporterid: User_bool_exp
}

"""
unique or primary key constraints on table "Project"
"""
enum Project_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Project_pkey
}

"""
input type for incrementing numeric columns in table "Project"
"""
input Project_inc_input {
  creatorId: Int
  id: Int
  managerId: Int
  organizationId: Int
  reporterId: Int
  taskDefinitionId: Int
}

"""
input type for inserting data into table "Project"
"""
input Project_insert_input {
  MemberOnProjects: MemberOnProjects_arr_rel_insert_input
  Organization: Organization_obj_rel_insert_input
  ProjectSettings: ProjectSettings_arr_rel_insert_input
  TaskBoards: TaskBoard_arr_rel_insert_input
  TaskDefinition: TaskDefinition_obj_rel_insert_input
  Tasks: Task_arr_rel_insert_input
  User: User_obj_rel_insert_input
  code: String
  createdAt: timestamp
  creatorId: Int
  description: String
  icon: String
  id: Int
  managerId: Int
  name: String
  organizationId: Int
  reporterId: Int
  taskDefinitionId: Int
  updatedAt: timestamp
  userByManagerid: User_obj_rel_insert_input
  userByReporterid: User_obj_rel_insert_input
}

"""aggregate max on columns"""
type Project_max_fields {
  code: String
  createdAt: timestamp
  creatorId: Int
  description: String
  icon: String
  id: Int
  managerId: Int
  name: String
  organizationId: Int
  reporterId: Int
  taskDefinitionId: Int
  updatedAt: timestamp
}

"""
order by max() on columns of table "Project"
"""
input Project_max_order_by {
  code: order_by
  createdAt: order_by
  creatorId: order_by
  description: order_by
  icon: order_by
  id: order_by
  managerId: order_by
  name: order_by
  organizationId: order_by
  reporterId: order_by
  taskDefinitionId: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type Project_min_fields {
  code: String
  createdAt: timestamp
  creatorId: Int
  description: String
  icon: String
  id: Int
  managerId: Int
  name: String
  organizationId: Int
  reporterId: Int
  taskDefinitionId: Int
  updatedAt: timestamp
}

"""
order by min() on columns of table "Project"
"""
input Project_min_order_by {
  code: order_by
  createdAt: order_by
  creatorId: order_by
  description: order_by
  icon: order_by
  id: order_by
  managerId: order_by
  name: order_by
  organizationId: order_by
  reporterId: order_by
  taskDefinitionId: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "Project"
"""
type Project_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Project!]!
}

"""
input type for inserting object relation for remote table "Project"
"""
input Project_obj_rel_insert_input {
  data: Project_insert_input!

  """upsert condition"""
  on_conflict: Project_on_conflict
}

"""
on_conflict condition type for table "Project"
"""
input Project_on_conflict {
  constraint: Project_constraint!
  update_columns: [Project_update_column!]! = []
  where: Project_bool_exp
}

"""Ordering options when selecting data from "Project"."""
input Project_order_by {
  MemberOnProjects_aggregate: MemberOnProjects_aggregate_order_by
  Organization: Organization_order_by
  ProjectSettings_aggregate: ProjectSettings_aggregate_order_by
  TaskBoards_aggregate: TaskBoard_aggregate_order_by
  TaskDefinition: TaskDefinition_order_by
  Tasks_aggregate: Task_aggregate_order_by
  User: User_order_by
  code: order_by
  createdAt: order_by
  creatorId: order_by
  description: order_by
  icon: order_by
  id: order_by
  managerId: order_by
  name: order_by
  organizationId: order_by
  reporterId: order_by
  taskDefinitionId: order_by
  updatedAt: order_by
  userByManagerid: User_order_by
  userByReporterid: User_order_by
}

"""primary key columns input for table: Project"""
input Project_pk_columns_input {
  id: Int!
}

"""
select columns of table "Project"
"""
enum Project_select_column {
  """column name"""
  code

  """column name"""
  createdAt

  """column name"""
  creatorId

  """column name"""
  description

  """column name"""
  icon

  """column name"""
  id

  """column name"""
  managerId

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  reporterId

  """column name"""
  taskDefinitionId

  """column name"""
  updatedAt
}

"""
input type for updating data in table "Project"
"""
input Project_set_input {
  code: String
  createdAt: timestamp
  creatorId: Int
  description: String
  icon: String
  id: Int
  managerId: Int
  name: String
  organizationId: Int
  reporterId: Int
  taskDefinitionId: Int
  updatedAt: timestamp
}

"""aggregate stddev on columns"""
type Project_stddev_fields {
  creatorId: Float
  id: Float
  managerId: Float
  organizationId: Float
  reporterId: Float
  taskDefinitionId: Float
}

"""
order by stddev() on columns of table "Project"
"""
input Project_stddev_order_by {
  creatorId: order_by
  id: order_by
  managerId: order_by
  organizationId: order_by
  reporterId: order_by
  taskDefinitionId: order_by
}

"""aggregate stddev_pop on columns"""
type Project_stddev_pop_fields {
  creatorId: Float
  id: Float
  managerId: Float
  organizationId: Float
  reporterId: Float
  taskDefinitionId: Float
}

"""
order by stddev_pop() on columns of table "Project"
"""
input Project_stddev_pop_order_by {
  creatorId: order_by
  id: order_by
  managerId: order_by
  organizationId: order_by
  reporterId: order_by
  taskDefinitionId: order_by
}

"""aggregate stddev_samp on columns"""
type Project_stddev_samp_fields {
  creatorId: Float
  id: Float
  managerId: Float
  organizationId: Float
  reporterId: Float
  taskDefinitionId: Float
}

"""
order by stddev_samp() on columns of table "Project"
"""
input Project_stddev_samp_order_by {
  creatorId: order_by
  id: order_by
  managerId: order_by
  organizationId: order_by
  reporterId: order_by
  taskDefinitionId: order_by
}

"""aggregate sum on columns"""
type Project_sum_fields {
  creatorId: Int
  id: Int
  managerId: Int
  organizationId: Int
  reporterId: Int
  taskDefinitionId: Int
}

"""
order by sum() on columns of table "Project"
"""
input Project_sum_order_by {
  creatorId: order_by
  id: order_by
  managerId: order_by
  organizationId: order_by
  reporterId: order_by
  taskDefinitionId: order_by
}

"""
update columns of table "Project"
"""
enum Project_update_column {
  """column name"""
  code

  """column name"""
  createdAt

  """column name"""
  creatorId

  """column name"""
  description

  """column name"""
  icon

  """column name"""
  id

  """column name"""
  managerId

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  reporterId

  """column name"""
  taskDefinitionId

  """column name"""
  updatedAt
}

input Project_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: Project_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: Project_set_input

  """filter the rows which have to be updated"""
  where: Project_bool_exp!
}

"""aggregate var_pop on columns"""
type Project_var_pop_fields {
  creatorId: Float
  id: Float
  managerId: Float
  organizationId: Float
  reporterId: Float
  taskDefinitionId: Float
}

"""
order by var_pop() on columns of table "Project"
"""
input Project_var_pop_order_by {
  creatorId: order_by
  id: order_by
  managerId: order_by
  organizationId: order_by
  reporterId: order_by
  taskDefinitionId: order_by
}

"""aggregate var_samp on columns"""
type Project_var_samp_fields {
  creatorId: Float
  id: Float
  managerId: Float
  organizationId: Float
  reporterId: Float
  taskDefinitionId: Float
}

"""
order by var_samp() on columns of table "Project"
"""
input Project_var_samp_order_by {
  creatorId: order_by
  id: order_by
  managerId: order_by
  organizationId: order_by
  reporterId: order_by
  taskDefinitionId: order_by
}

"""aggregate variance on columns"""
type Project_variance_fields {
  creatorId: Float
  id: Float
  managerId: Float
  organizationId: Float
  reporterId: Float
  taskDefinitionId: Float
}

"""
order by variance() on columns of table "Project"
"""
input Project_variance_order_by {
  creatorId: order_by
  id: order_by
  managerId: order_by
  organizationId: order_by
  reporterId: order_by
  taskDefinitionId: order_by
}

"""
columns and relationships of "Resource"
"""
type Resource implements Node {
  """An object relationship"""
  Organization: Organization!

  """An array relationship"""
  ResourceItems(
    """distinct select on columns"""
    distinct_on: [ResourceItem_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ResourceItem_order_by!]

    """filter the rows returned"""
    where: ResourceItem_bool_exp
  ): [ResourceItem!]!

  """An aggregate relationship"""
  ResourceItems_aggregate(
    """distinct select on columns"""
    distinct_on: [ResourceItem_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ResourceItem_order_by!]

    """filter the rows returned"""
    where: ResourceItem_bool_exp
  ): ResourceItem_aggregate!

  """An array relationship connection"""
  ResourceItems_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [ResourceItem_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [ResourceItem_order_by!]

    """filter the rows returned"""
    where: ResourceItem_bool_exp
  ): ResourceItemConnection!
  code: String!
  createdAt: timestamp!
  description: String!
  icon: String!
  id: ID!
  name: String!
  organizationId: Int!
  updatedAt: timestamp!
}

"""
A Relay connection object on "Resource"
"""
type ResourceConnection {
  edges: [ResourceEdge!]!
  pageInfo: PageInfo!
}

type ResourceEdge {
  cursor: String!
  node: Resource!
}

"""
columns and relationships of "ResourceItem"
"""
type ResourceItem implements Node {
  """An object relationship"""
  Resource: Resource!
  code: String!
  createdAt: timestamp!
  description: String!
  icon: String!
  id: ID!
  name: String!
  resourceId: Int!
  updatedAt: timestamp!
}

"""
A Relay connection object on "ResourceItem"
"""
type ResourceItemConnection {
  edges: [ResourceItemEdge!]!
  pageInfo: PageInfo!
}

type ResourceItemEdge {
  cursor: String!
  node: ResourceItem!
}

"""
aggregated selection of "ResourceItem"
"""
type ResourceItem_aggregate {
  aggregate: ResourceItem_aggregate_fields
  nodes: [ResourceItem!]!
}

input ResourceItem_aggregate_bool_exp {
  count: ResourceItem_aggregate_bool_exp_count
}

input ResourceItem_aggregate_bool_exp_count {
  arguments: [ResourceItem_select_column!]
  distinct: Boolean
  filter: ResourceItem_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "ResourceItem"
"""
type ResourceItem_aggregate_fields {
  avg: ResourceItem_avg_fields
  count(columns: [ResourceItem_select_column!], distinct: Boolean): Int!
  max: ResourceItem_max_fields
  min: ResourceItem_min_fields
  stddev: ResourceItem_stddev_fields
  stddev_pop: ResourceItem_stddev_pop_fields
  stddev_samp: ResourceItem_stddev_samp_fields
  sum: ResourceItem_sum_fields
  var_pop: ResourceItem_var_pop_fields
  var_samp: ResourceItem_var_samp_fields
  variance: ResourceItem_variance_fields
}

"""
order by aggregate values of table "ResourceItem"
"""
input ResourceItem_aggregate_order_by {
  avg: ResourceItem_avg_order_by
  count: order_by
  max: ResourceItem_max_order_by
  min: ResourceItem_min_order_by
  stddev: ResourceItem_stddev_order_by
  stddev_pop: ResourceItem_stddev_pop_order_by
  stddev_samp: ResourceItem_stddev_samp_order_by
  sum: ResourceItem_sum_order_by
  var_pop: ResourceItem_var_pop_order_by
  var_samp: ResourceItem_var_samp_order_by
  variance: ResourceItem_variance_order_by
}

"""
input type for inserting array relation for remote table "ResourceItem"
"""
input ResourceItem_arr_rel_insert_input {
  data: [ResourceItem_insert_input!]!

  """upsert condition"""
  on_conflict: ResourceItem_on_conflict
}

"""aggregate avg on columns"""
type ResourceItem_avg_fields {
  id: Float
  resourceId: Float
}

"""
order by avg() on columns of table "ResourceItem"
"""
input ResourceItem_avg_order_by {
  id: order_by
  resourceId: order_by
}

"""
Boolean expression to filter rows from the table "ResourceItem". All fields are combined with a logical 'AND'.
"""
input ResourceItem_bool_exp {
  Resource: Resource_bool_exp
  _and: [ResourceItem_bool_exp!]
  _not: ResourceItem_bool_exp
  _or: [ResourceItem_bool_exp!]
  code: String_comparison_exp
  createdAt: timestamp_comparison_exp
  description: String_comparison_exp
  icon: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  resourceId: Int_comparison_exp
  updatedAt: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "ResourceItem"
"""
enum ResourceItem_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  ResourceItem_pkey
}

"""
input type for incrementing numeric columns in table "ResourceItem"
"""
input ResourceItem_inc_input {
  id: Int
  resourceId: Int
}

"""
input type for inserting data into table "ResourceItem"
"""
input ResourceItem_insert_input {
  Resource: Resource_obj_rel_insert_input
  code: String
  createdAt: timestamp
  description: String
  icon: String
  id: Int
  name: String
  resourceId: Int
  updatedAt: timestamp
}

"""aggregate max on columns"""
type ResourceItem_max_fields {
  code: String
  createdAt: timestamp
  description: String
  icon: String
  id: Int
  name: String
  resourceId: Int
  updatedAt: timestamp
}

"""
order by max() on columns of table "ResourceItem"
"""
input ResourceItem_max_order_by {
  code: order_by
  createdAt: order_by
  description: order_by
  icon: order_by
  id: order_by
  name: order_by
  resourceId: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type ResourceItem_min_fields {
  code: String
  createdAt: timestamp
  description: String
  icon: String
  id: Int
  name: String
  resourceId: Int
  updatedAt: timestamp
}

"""
order by min() on columns of table "ResourceItem"
"""
input ResourceItem_min_order_by {
  code: order_by
  createdAt: order_by
  description: order_by
  icon: order_by
  id: order_by
  name: order_by
  resourceId: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "ResourceItem"
"""
type ResourceItem_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ResourceItem!]!
}

"""
on_conflict condition type for table "ResourceItem"
"""
input ResourceItem_on_conflict {
  constraint: ResourceItem_constraint!
  update_columns: [ResourceItem_update_column!]! = []
  where: ResourceItem_bool_exp
}

"""Ordering options when selecting data from "ResourceItem"."""
input ResourceItem_order_by {
  Resource: Resource_order_by
  code: order_by
  createdAt: order_by
  description: order_by
  icon: order_by
  id: order_by
  name: order_by
  resourceId: order_by
  updatedAt: order_by
}

"""primary key columns input for table: ResourceItem"""
input ResourceItem_pk_columns_input {
  id: Int!
}

"""
select columns of table "ResourceItem"
"""
enum ResourceItem_select_column {
  """column name"""
  code

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  icon

  """column name"""
  id

  """column name"""
  name

  """column name"""
  resourceId

  """column name"""
  updatedAt
}

"""
input type for updating data in table "ResourceItem"
"""
input ResourceItem_set_input {
  code: String
  createdAt: timestamp
  description: String
  icon: String
  id: Int
  name: String
  resourceId: Int
  updatedAt: timestamp
}

"""aggregate stddev on columns"""
type ResourceItem_stddev_fields {
  id: Float
  resourceId: Float
}

"""
order by stddev() on columns of table "ResourceItem"
"""
input ResourceItem_stddev_order_by {
  id: order_by
  resourceId: order_by
}

"""aggregate stddev_pop on columns"""
type ResourceItem_stddev_pop_fields {
  id: Float
  resourceId: Float
}

"""
order by stddev_pop() on columns of table "ResourceItem"
"""
input ResourceItem_stddev_pop_order_by {
  id: order_by
  resourceId: order_by
}

"""aggregate stddev_samp on columns"""
type ResourceItem_stddev_samp_fields {
  id: Float
  resourceId: Float
}

"""
order by stddev_samp() on columns of table "ResourceItem"
"""
input ResourceItem_stddev_samp_order_by {
  id: order_by
  resourceId: order_by
}

"""aggregate sum on columns"""
type ResourceItem_sum_fields {
  id: Int
  resourceId: Int
}

"""
order by sum() on columns of table "ResourceItem"
"""
input ResourceItem_sum_order_by {
  id: order_by
  resourceId: order_by
}

"""
update columns of table "ResourceItem"
"""
enum ResourceItem_update_column {
  """column name"""
  code

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  icon

  """column name"""
  id

  """column name"""
  name

  """column name"""
  resourceId

  """column name"""
  updatedAt
}

input ResourceItem_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: ResourceItem_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: ResourceItem_set_input

  """filter the rows which have to be updated"""
  where: ResourceItem_bool_exp!
}

"""aggregate var_pop on columns"""
type ResourceItem_var_pop_fields {
  id: Float
  resourceId: Float
}

"""
order by var_pop() on columns of table "ResourceItem"
"""
input ResourceItem_var_pop_order_by {
  id: order_by
  resourceId: order_by
}

"""aggregate var_samp on columns"""
type ResourceItem_var_samp_fields {
  id: Float
  resourceId: Float
}

"""
order by var_samp() on columns of table "ResourceItem"
"""
input ResourceItem_var_samp_order_by {
  id: order_by
  resourceId: order_by
}

"""aggregate variance on columns"""
type ResourceItem_variance_fields {
  id: Float
  resourceId: Float
}

"""
order by variance() on columns of table "ResourceItem"
"""
input ResourceItem_variance_order_by {
  id: order_by
  resourceId: order_by
}

"""
aggregated selection of "Resource"
"""
type Resource_aggregate {
  aggregate: Resource_aggregate_fields
  nodes: [Resource!]!
}

input Resource_aggregate_bool_exp {
  count: Resource_aggregate_bool_exp_count
}

input Resource_aggregate_bool_exp_count {
  arguments: [Resource_select_column!]
  distinct: Boolean
  filter: Resource_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "Resource"
"""
type Resource_aggregate_fields {
  avg: Resource_avg_fields
  count(columns: [Resource_select_column!], distinct: Boolean): Int!
  max: Resource_max_fields
  min: Resource_min_fields
  stddev: Resource_stddev_fields
  stddev_pop: Resource_stddev_pop_fields
  stddev_samp: Resource_stddev_samp_fields
  sum: Resource_sum_fields
  var_pop: Resource_var_pop_fields
  var_samp: Resource_var_samp_fields
  variance: Resource_variance_fields
}

"""
order by aggregate values of table "Resource"
"""
input Resource_aggregate_order_by {
  avg: Resource_avg_order_by
  count: order_by
  max: Resource_max_order_by
  min: Resource_min_order_by
  stddev: Resource_stddev_order_by
  stddev_pop: Resource_stddev_pop_order_by
  stddev_samp: Resource_stddev_samp_order_by
  sum: Resource_sum_order_by
  var_pop: Resource_var_pop_order_by
  var_samp: Resource_var_samp_order_by
  variance: Resource_variance_order_by
}

"""
input type for inserting array relation for remote table "Resource"
"""
input Resource_arr_rel_insert_input {
  data: [Resource_insert_input!]!

  """upsert condition"""
  on_conflict: Resource_on_conflict
}

"""aggregate avg on columns"""
type Resource_avg_fields {
  id: Float
  organizationId: Float
}

"""
order by avg() on columns of table "Resource"
"""
input Resource_avg_order_by {
  id: order_by
  organizationId: order_by
}

"""
Boolean expression to filter rows from the table "Resource". All fields are combined with a logical 'AND'.
"""
input Resource_bool_exp {
  Organization: Organization_bool_exp
  ResourceItems: ResourceItem_bool_exp
  ResourceItems_aggregate: ResourceItem_aggregate_bool_exp
  _and: [Resource_bool_exp!]
  _not: Resource_bool_exp
  _or: [Resource_bool_exp!]
  code: String_comparison_exp
  createdAt: timestamp_comparison_exp
  description: String_comparison_exp
  icon: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  organizationId: Int_comparison_exp
  updatedAt: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "Resource"
"""
enum Resource_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Resource_pkey
}

"""
input type for incrementing numeric columns in table "Resource"
"""
input Resource_inc_input {
  id: Int
  organizationId: Int
}

"""
input type for inserting data into table "Resource"
"""
input Resource_insert_input {
  Organization: Organization_obj_rel_insert_input
  ResourceItems: ResourceItem_arr_rel_insert_input
  code: String
  createdAt: timestamp
  description: String
  icon: String
  id: Int
  name: String
  organizationId: Int
  updatedAt: timestamp
}

"""aggregate max on columns"""
type Resource_max_fields {
  code: String
  createdAt: timestamp
  description: String
  icon: String
  id: Int
  name: String
  organizationId: Int
  updatedAt: timestamp
}

"""
order by max() on columns of table "Resource"
"""
input Resource_max_order_by {
  code: order_by
  createdAt: order_by
  description: order_by
  icon: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type Resource_min_fields {
  code: String
  createdAt: timestamp
  description: String
  icon: String
  id: Int
  name: String
  organizationId: Int
  updatedAt: timestamp
}

"""
order by min() on columns of table "Resource"
"""
input Resource_min_order_by {
  code: order_by
  createdAt: order_by
  description: order_by
  icon: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "Resource"
"""
type Resource_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Resource!]!
}

"""
input type for inserting object relation for remote table "Resource"
"""
input Resource_obj_rel_insert_input {
  data: Resource_insert_input!

  """upsert condition"""
  on_conflict: Resource_on_conflict
}

"""
on_conflict condition type for table "Resource"
"""
input Resource_on_conflict {
  constraint: Resource_constraint!
  update_columns: [Resource_update_column!]! = []
  where: Resource_bool_exp
}

"""Ordering options when selecting data from "Resource"."""
input Resource_order_by {
  Organization: Organization_order_by
  ResourceItems_aggregate: ResourceItem_aggregate_order_by
  code: order_by
  createdAt: order_by
  description: order_by
  icon: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  updatedAt: order_by
}

"""primary key columns input for table: Resource"""
input Resource_pk_columns_input {
  id: Int!
}

"""
select columns of table "Resource"
"""
enum Resource_select_column {
  """column name"""
  code

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  icon

  """column name"""
  id

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  updatedAt
}

"""
input type for updating data in table "Resource"
"""
input Resource_set_input {
  code: String
  createdAt: timestamp
  description: String
  icon: String
  id: Int
  name: String
  organizationId: Int
  updatedAt: timestamp
}

"""aggregate stddev on columns"""
type Resource_stddev_fields {
  id: Float
  organizationId: Float
}

"""
order by stddev() on columns of table "Resource"
"""
input Resource_stddev_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate stddev_pop on columns"""
type Resource_stddev_pop_fields {
  id: Float
  organizationId: Float
}

"""
order by stddev_pop() on columns of table "Resource"
"""
input Resource_stddev_pop_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate stddev_samp on columns"""
type Resource_stddev_samp_fields {
  id: Float
  organizationId: Float
}

"""
order by stddev_samp() on columns of table "Resource"
"""
input Resource_stddev_samp_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate sum on columns"""
type Resource_sum_fields {
  id: Int
  organizationId: Int
}

"""
order by sum() on columns of table "Resource"
"""
input Resource_sum_order_by {
  id: order_by
  organizationId: order_by
}

"""
update columns of table "Resource"
"""
enum Resource_update_column {
  """column name"""
  code

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  icon

  """column name"""
  id

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  updatedAt
}

input Resource_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: Resource_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: Resource_set_input

  """filter the rows which have to be updated"""
  where: Resource_bool_exp!
}

"""aggregate var_pop on columns"""
type Resource_var_pop_fields {
  id: Float
  organizationId: Float
}

"""
order by var_pop() on columns of table "Resource"
"""
input Resource_var_pop_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate var_samp on columns"""
type Resource_var_samp_fields {
  id: Float
  organizationId: Float
}

"""
order by var_samp() on columns of table "Resource"
"""
input Resource_var_samp_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate variance on columns"""
type Resource_variance_fields {
  id: Float
  organizationId: Float
}

"""
order by variance() on columns of table "Resource"
"""
input Resource_variance_order_by {
  id: order_by
  organizationId: order_by
}

scalar Role

"""
Boolean expression to compare columns of type "Role". All fields are combined with logical 'AND'.
"""
input Role_comparison_exp {
  _eq: Role
  _gt: Role
  _gte: Role
  _in: [Role!]
  _is_null: Boolean
  _lt: Role
  _lte: Role
  _neq: Role
  _nin: [Role!]
}

"""
columns and relationships of "Settings"
"""
type Settings implements Node {
  """An object relationship"""
  Organization: Organization!
  createdAt: timestamp!
  id: ID!
  key: String!
  organizationId: Int!
  updatedAt: timestamp!
  value(
    """JSON select path"""
    path: String
  ): jsonb!
}

"""
A Relay connection object on "Settings"
"""
type SettingsConnection {
  edges: [SettingsEdge!]!
  pageInfo: PageInfo!
}

type SettingsEdge {
  cursor: String!
  node: Settings!
}

"""
aggregated selection of "Settings"
"""
type Settings_aggregate {
  aggregate: Settings_aggregate_fields
  nodes: [Settings!]!
}

input Settings_aggregate_bool_exp {
  count: Settings_aggregate_bool_exp_count
}

input Settings_aggregate_bool_exp_count {
  arguments: [Settings_select_column!]
  distinct: Boolean
  filter: Settings_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "Settings"
"""
type Settings_aggregate_fields {
  avg: Settings_avg_fields
  count(columns: [Settings_select_column!], distinct: Boolean): Int!
  max: Settings_max_fields
  min: Settings_min_fields
  stddev: Settings_stddev_fields
  stddev_pop: Settings_stddev_pop_fields
  stddev_samp: Settings_stddev_samp_fields
  sum: Settings_sum_fields
  var_pop: Settings_var_pop_fields
  var_samp: Settings_var_samp_fields
  variance: Settings_variance_fields
}

"""
order by aggregate values of table "Settings"
"""
input Settings_aggregate_order_by {
  avg: Settings_avg_order_by
  count: order_by
  max: Settings_max_order_by
  min: Settings_min_order_by
  stddev: Settings_stddev_order_by
  stddev_pop: Settings_stddev_pop_order_by
  stddev_samp: Settings_stddev_samp_order_by
  sum: Settings_sum_order_by
  var_pop: Settings_var_pop_order_by
  var_samp: Settings_var_samp_order_by
  variance: Settings_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input Settings_append_input {
  value: jsonb
}

"""
input type for inserting array relation for remote table "Settings"
"""
input Settings_arr_rel_insert_input {
  data: [Settings_insert_input!]!

  """upsert condition"""
  on_conflict: Settings_on_conflict
}

"""aggregate avg on columns"""
type Settings_avg_fields {
  id: Float
  organizationId: Float
}

"""
order by avg() on columns of table "Settings"
"""
input Settings_avg_order_by {
  id: order_by
  organizationId: order_by
}

"""
Boolean expression to filter rows from the table "Settings". All fields are combined with a logical 'AND'.
"""
input Settings_bool_exp {
  Organization: Organization_bool_exp
  _and: [Settings_bool_exp!]
  _not: Settings_bool_exp
  _or: [Settings_bool_exp!]
  createdAt: timestamp_comparison_exp
  id: Int_comparison_exp
  key: String_comparison_exp
  organizationId: Int_comparison_exp
  updatedAt: timestamp_comparison_exp
  value: jsonb_comparison_exp
}

"""
unique or primary key constraints on table "Settings"
"""
enum Settings_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Settings_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input Settings_delete_at_path_input {
  value: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input Settings_delete_elem_input {
  value: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input Settings_delete_key_input {
  value: String
}

"""
input type for incrementing numeric columns in table "Settings"
"""
input Settings_inc_input {
  id: Int
  organizationId: Int
}

"""
input type for inserting data into table "Settings"
"""
input Settings_insert_input {
  Organization: Organization_obj_rel_insert_input
  createdAt: timestamp
  id: Int
  key: String
  organizationId: Int
  updatedAt: timestamp
  value: jsonb
}

"""aggregate max on columns"""
type Settings_max_fields {
  createdAt: timestamp
  id: Int
  key: String
  organizationId: Int
  updatedAt: timestamp
}

"""
order by max() on columns of table "Settings"
"""
input Settings_max_order_by {
  createdAt: order_by
  id: order_by
  key: order_by
  organizationId: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type Settings_min_fields {
  createdAt: timestamp
  id: Int
  key: String
  organizationId: Int
  updatedAt: timestamp
}

"""
order by min() on columns of table "Settings"
"""
input Settings_min_order_by {
  createdAt: order_by
  id: order_by
  key: order_by
  organizationId: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "Settings"
"""
type Settings_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Settings!]!
}

"""
on_conflict condition type for table "Settings"
"""
input Settings_on_conflict {
  constraint: Settings_constraint!
  update_columns: [Settings_update_column!]! = []
  where: Settings_bool_exp
}

"""Ordering options when selecting data from "Settings"."""
input Settings_order_by {
  Organization: Organization_order_by
  createdAt: order_by
  id: order_by
  key: order_by
  organizationId: order_by
  updatedAt: order_by
  value: order_by
}

"""primary key columns input for table: Settings"""
input Settings_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input Settings_prepend_input {
  value: jsonb
}

"""
select columns of table "Settings"
"""
enum Settings_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  key

  """column name"""
  organizationId

  """column name"""
  updatedAt

  """column name"""
  value
}

"""
input type for updating data in table "Settings"
"""
input Settings_set_input {
  createdAt: timestamp
  id: Int
  key: String
  organizationId: Int
  updatedAt: timestamp
  value: jsonb
}

"""aggregate stddev on columns"""
type Settings_stddev_fields {
  id: Float
  organizationId: Float
}

"""
order by stddev() on columns of table "Settings"
"""
input Settings_stddev_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate stddev_pop on columns"""
type Settings_stddev_pop_fields {
  id: Float
  organizationId: Float
}

"""
order by stddev_pop() on columns of table "Settings"
"""
input Settings_stddev_pop_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate stddev_samp on columns"""
type Settings_stddev_samp_fields {
  id: Float
  organizationId: Float
}

"""
order by stddev_samp() on columns of table "Settings"
"""
input Settings_stddev_samp_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate sum on columns"""
type Settings_sum_fields {
  id: Int
  organizationId: Int
}

"""
order by sum() on columns of table "Settings"
"""
input Settings_sum_order_by {
  id: order_by
  organizationId: order_by
}

"""
update columns of table "Settings"
"""
enum Settings_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  key

  """column name"""
  organizationId

  """column name"""
  updatedAt

  """column name"""
  value
}

input Settings_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: Settings_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: Settings_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: Settings_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: Settings_delete_key_input

  """increments the numeric columns with given value of the filtered values"""
  _inc: Settings_inc_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: Settings_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: Settings_set_input

  """filter the rows which have to be updated"""
  where: Settings_bool_exp!
}

"""aggregate var_pop on columns"""
type Settings_var_pop_fields {
  id: Float
  organizationId: Float
}

"""
order by var_pop() on columns of table "Settings"
"""
input Settings_var_pop_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate var_samp on columns"""
type Settings_var_samp_fields {
  id: Float
  organizationId: Float
}

"""
order by var_samp() on columns of table "Settings"
"""
input Settings_var_samp_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate variance on columns"""
type Settings_variance_fields {
  id: Float
  organizationId: Float
}

"""
order by variance() on columns of table "Settings"
"""
input Settings_variance_order_by {
  id: order_by
  organizationId: order_by
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String

  """does the column match the given case-insensitive pattern"""
  _ilike: String
  _in: [String!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: String
  _is_null: Boolean

  """does the column match the given pattern"""
  _like: String
  _lt: String
  _lte: String
  _neq: String

  """does the column NOT match the given case-insensitive pattern"""
  _nilike: String
  _nin: [String!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: String

  """does the column NOT match the given pattern"""
  _nlike: String

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: String

  """does the column NOT match the given SQL regular expression"""
  _nsimilar: String

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: String

  """does the column match the given SQL regular expression"""
  _similar: String
}

type SubmitTask {
  code: String
  description: String
  id: String
  name: String
}

type SubmitTaskOutput {
  submitTask: SubmitTask
}

"""
columns and relationships of "Task"
"""
type Task implements Node {
  """An array relationship"""
  Comments(
    """distinct select on columns"""
    distinct_on: [Comment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Comment_order_by!]

    """filter the rows returned"""
    where: Comment_bool_exp
  ): [Comment!]!

  """An aggregate relationship"""
  Comments_aggregate(
    """distinct select on columns"""
    distinct_on: [Comment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Comment_order_by!]

    """filter the rows returned"""
    where: Comment_bool_exp
  ): Comment_aggregate!

  """An array relationship connection"""
  Comments_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Comment_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Comment_order_by!]

    """filter the rows returned"""
    where: Comment_bool_exp
  ): CommentConnection!

  """An array relationship"""
  EventLogs(
    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): [EventLog!]!

  """An aggregate relationship"""
  EventLogs_aggregate(
    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): EventLog_aggregate!

  """An array relationship connection"""
  EventLogs_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): EventLogConnection!

  """An object relationship"""
  Form: Form

  """An object relationship"""
  Organization: Organization!

  """An object relationship"""
  Project: Project

  """An object relationship"""
  Task: Task

  """An object relationship"""
  TaskDefinition: TaskDefinition!

  """An array relationship"""
  Tasks(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): [Task!]!

  """An aggregate relationship"""
  Tasks_aggregate(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): Task_aggregate!

  """An array relationship connection"""
  Tasks_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Task_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): TaskConnection!

  """An object relationship"""
  Team: Team

  """An array relationship"""
  Triggers(
    """distinct select on columns"""
    distinct_on: [Trigger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Trigger_order_by!]

    """filter the rows returned"""
    where: Trigger_bool_exp
  ): [Trigger!]!

  """An aggregate relationship"""
  Triggers_aggregate(
    """distinct select on columns"""
    distinct_on: [Trigger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Trigger_order_by!]

    """filter the rows returned"""
    where: Trigger_bool_exp
  ): Trigger_aggregate!

  """An array relationship connection"""
  Triggers_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Trigger_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Trigger_order_by!]

    """filter the rows returned"""
    where: Trigger_bool_exp
  ): TriggerConnection!

  """An object relationship"""
  User: User
  assigneeId: Int
  config(
    """JSON select path"""
    path: String
  ): jsonb
  createdAt: timestamp!
  creatorId: Int!
  cta: String!
  ctaConfig(
    """JSON select path"""
    path: String
  ): jsonb
  ctaName: String!
  ctaTemplate: String
  definitionId: Int!
  description: String!
  descriptionTemplate: String
  dueDate: timestamp
  formConfig(
    """JSON select path"""
    path: String
  ): jsonb
  formId: Int
  id: ID!
  isActive: Boolean!
  key: String!
  machineConfig(
    """JSON select path"""
    path: String
  ): jsonb
  notificationConfig(
    """JSON select path"""
    path: String
  ): jsonb
  notificationTemplate: String
  organizationId: Int!
  parentId: Int
  priority: TaskPriority!
  processConfig(
    """JSON select path"""
    path: String
  ): jsonb
  projectId: Int
  properties(
    """JSON select path"""
    path: String
  ): jsonb
  reporterId: Int
  state: String!
  stateConfig(
    """JSON select path"""
    path: String
  ): jsonb
  stateName: String!
  stateTemplate: String
  stateValues: String!
  status: String!
  statusConfig(
    """JSON select path"""
    path: String
  ): jsonb
  statusName: String!
  statusTemplate: String
  teamId: Int
  title: String!
  titleTemplate: String
  triggerConfig(
    """JSON select path"""
    path: String
  ): jsonb
  type: String!
  typeName: String!
  updatedAt: timestamp!

  """An object relationship"""
  userByCreatorid: User!

  """An object relationship"""
  userByReporterid: User
  values(
    """JSON select path"""
    path: String
  ): jsonb
}

"""
columns and relationships of "TaskBoard"
"""
type TaskBoard implements Node {
  """An object relationship"""
  Organization: Organization!

  """An object relationship"""
  Project: Project

  """An array relationship"""
  TaskBoardSettings(
    """distinct select on columns"""
    distinct_on: [TaskBoardSettings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskBoardSettings_order_by!]

    """filter the rows returned"""
    where: TaskBoardSettings_bool_exp
  ): [TaskBoardSettings!]!

  """An aggregate relationship"""
  TaskBoardSettings_aggregate(
    """distinct select on columns"""
    distinct_on: [TaskBoardSettings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskBoardSettings_order_by!]

    """filter the rows returned"""
    where: TaskBoardSettings_bool_exp
  ): TaskBoardSettings_aggregate!

  """An array relationship connection"""
  TaskBoardSettings_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [TaskBoardSettings_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [TaskBoardSettings_order_by!]

    """filter the rows returned"""
    where: TaskBoardSettings_bool_exp
  ): TaskBoardSettingsConnection!

  """An object relationship"""
  TaskDefinition: TaskDefinition!
  code: String!
  createdAt: timestamp!
  description: String!
  icon: String!
  id: ID!
  name: String!
  organizationId: Int!
  projectId: Int
  taskDefinitionId: Int!
  type: TaskBoardType!
  updatedAt: timestamp!
  viewConfig(
    """JSON select path"""
    path: String
  ): jsonb!
  viewType: TaskBoardViewType!
  visibility: Visibility!
}

"""
A Relay connection object on "TaskBoard"
"""
type TaskBoardConnection {
  edges: [TaskBoardEdge!]!
  pageInfo: PageInfo!
}

type TaskBoardEdge {
  cursor: String!
  node: TaskBoard!
}

"""
columns and relationships of "TaskBoardSettings"
"""
type TaskBoardSettings implements Node {
  """An object relationship"""
  TaskBoard: TaskBoard!
  createdAt: timestamp!
  id: ID!
  key: String!
  taskBoardId: Int!
  updatedAt: timestamp!
  value(
    """JSON select path"""
    path: String
  ): jsonb!
}

"""
A Relay connection object on "TaskBoardSettings"
"""
type TaskBoardSettingsConnection {
  edges: [TaskBoardSettingsEdge!]!
  pageInfo: PageInfo!
}

type TaskBoardSettingsEdge {
  cursor: String!
  node: TaskBoardSettings!
}

"""
aggregated selection of "TaskBoardSettings"
"""
type TaskBoardSettings_aggregate {
  aggregate: TaskBoardSettings_aggregate_fields
  nodes: [TaskBoardSettings!]!
}

input TaskBoardSettings_aggregate_bool_exp {
  count: TaskBoardSettings_aggregate_bool_exp_count
}

input TaskBoardSettings_aggregate_bool_exp_count {
  arguments: [TaskBoardSettings_select_column!]
  distinct: Boolean
  filter: TaskBoardSettings_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "TaskBoardSettings"
"""
type TaskBoardSettings_aggregate_fields {
  avg: TaskBoardSettings_avg_fields
  count(columns: [TaskBoardSettings_select_column!], distinct: Boolean): Int!
  max: TaskBoardSettings_max_fields
  min: TaskBoardSettings_min_fields
  stddev: TaskBoardSettings_stddev_fields
  stddev_pop: TaskBoardSettings_stddev_pop_fields
  stddev_samp: TaskBoardSettings_stddev_samp_fields
  sum: TaskBoardSettings_sum_fields
  var_pop: TaskBoardSettings_var_pop_fields
  var_samp: TaskBoardSettings_var_samp_fields
  variance: TaskBoardSettings_variance_fields
}

"""
order by aggregate values of table "TaskBoardSettings"
"""
input TaskBoardSettings_aggregate_order_by {
  avg: TaskBoardSettings_avg_order_by
  count: order_by
  max: TaskBoardSettings_max_order_by
  min: TaskBoardSettings_min_order_by
  stddev: TaskBoardSettings_stddev_order_by
  stddev_pop: TaskBoardSettings_stddev_pop_order_by
  stddev_samp: TaskBoardSettings_stddev_samp_order_by
  sum: TaskBoardSettings_sum_order_by
  var_pop: TaskBoardSettings_var_pop_order_by
  var_samp: TaskBoardSettings_var_samp_order_by
  variance: TaskBoardSettings_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input TaskBoardSettings_append_input {
  value: jsonb
}

"""
input type for inserting array relation for remote table "TaskBoardSettings"
"""
input TaskBoardSettings_arr_rel_insert_input {
  data: [TaskBoardSettings_insert_input!]!

  """upsert condition"""
  on_conflict: TaskBoardSettings_on_conflict
}

"""aggregate avg on columns"""
type TaskBoardSettings_avg_fields {
  id: Float
  taskBoardId: Float
}

"""
order by avg() on columns of table "TaskBoardSettings"
"""
input TaskBoardSettings_avg_order_by {
  id: order_by
  taskBoardId: order_by
}

"""
Boolean expression to filter rows from the table "TaskBoardSettings". All fields are combined with a logical 'AND'.
"""
input TaskBoardSettings_bool_exp {
  TaskBoard: TaskBoard_bool_exp
  _and: [TaskBoardSettings_bool_exp!]
  _not: TaskBoardSettings_bool_exp
  _or: [TaskBoardSettings_bool_exp!]
  createdAt: timestamp_comparison_exp
  id: Int_comparison_exp
  key: String_comparison_exp
  taskBoardId: Int_comparison_exp
  updatedAt: timestamp_comparison_exp
  value: jsonb_comparison_exp
}

"""
unique or primary key constraints on table "TaskBoardSettings"
"""
enum TaskBoardSettings_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  TaskBoardSettings_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input TaskBoardSettings_delete_at_path_input {
  value: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input TaskBoardSettings_delete_elem_input {
  value: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input TaskBoardSettings_delete_key_input {
  value: String
}

"""
input type for incrementing numeric columns in table "TaskBoardSettings"
"""
input TaskBoardSettings_inc_input {
  id: Int
  taskBoardId: Int
}

"""
input type for inserting data into table "TaskBoardSettings"
"""
input TaskBoardSettings_insert_input {
  TaskBoard: TaskBoard_obj_rel_insert_input
  createdAt: timestamp
  id: Int
  key: String
  taskBoardId: Int
  updatedAt: timestamp
  value: jsonb
}

"""aggregate max on columns"""
type TaskBoardSettings_max_fields {
  createdAt: timestamp
  id: Int
  key: String
  taskBoardId: Int
  updatedAt: timestamp
}

"""
order by max() on columns of table "TaskBoardSettings"
"""
input TaskBoardSettings_max_order_by {
  createdAt: order_by
  id: order_by
  key: order_by
  taskBoardId: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type TaskBoardSettings_min_fields {
  createdAt: timestamp
  id: Int
  key: String
  taskBoardId: Int
  updatedAt: timestamp
}

"""
order by min() on columns of table "TaskBoardSettings"
"""
input TaskBoardSettings_min_order_by {
  createdAt: order_by
  id: order_by
  key: order_by
  taskBoardId: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "TaskBoardSettings"
"""
type TaskBoardSettings_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [TaskBoardSettings!]!
}

"""
on_conflict condition type for table "TaskBoardSettings"
"""
input TaskBoardSettings_on_conflict {
  constraint: TaskBoardSettings_constraint!
  update_columns: [TaskBoardSettings_update_column!]! = []
  where: TaskBoardSettings_bool_exp
}

"""Ordering options when selecting data from "TaskBoardSettings"."""
input TaskBoardSettings_order_by {
  TaskBoard: TaskBoard_order_by
  createdAt: order_by
  id: order_by
  key: order_by
  taskBoardId: order_by
  updatedAt: order_by
  value: order_by
}

"""primary key columns input for table: TaskBoardSettings"""
input TaskBoardSettings_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input TaskBoardSettings_prepend_input {
  value: jsonb
}

"""
select columns of table "TaskBoardSettings"
"""
enum TaskBoardSettings_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  key

  """column name"""
  taskBoardId

  """column name"""
  updatedAt

  """column name"""
  value
}

"""
input type for updating data in table "TaskBoardSettings"
"""
input TaskBoardSettings_set_input {
  createdAt: timestamp
  id: Int
  key: String
  taskBoardId: Int
  updatedAt: timestamp
  value: jsonb
}

"""aggregate stddev on columns"""
type TaskBoardSettings_stddev_fields {
  id: Float
  taskBoardId: Float
}

"""
order by stddev() on columns of table "TaskBoardSettings"
"""
input TaskBoardSettings_stddev_order_by {
  id: order_by
  taskBoardId: order_by
}

"""aggregate stddev_pop on columns"""
type TaskBoardSettings_stddev_pop_fields {
  id: Float
  taskBoardId: Float
}

"""
order by stddev_pop() on columns of table "TaskBoardSettings"
"""
input TaskBoardSettings_stddev_pop_order_by {
  id: order_by
  taskBoardId: order_by
}

"""aggregate stddev_samp on columns"""
type TaskBoardSettings_stddev_samp_fields {
  id: Float
  taskBoardId: Float
}

"""
order by stddev_samp() on columns of table "TaskBoardSettings"
"""
input TaskBoardSettings_stddev_samp_order_by {
  id: order_by
  taskBoardId: order_by
}

"""aggregate sum on columns"""
type TaskBoardSettings_sum_fields {
  id: Int
  taskBoardId: Int
}

"""
order by sum() on columns of table "TaskBoardSettings"
"""
input TaskBoardSettings_sum_order_by {
  id: order_by
  taskBoardId: order_by
}

"""
update columns of table "TaskBoardSettings"
"""
enum TaskBoardSettings_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  key

  """column name"""
  taskBoardId

  """column name"""
  updatedAt

  """column name"""
  value
}

input TaskBoardSettings_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: TaskBoardSettings_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: TaskBoardSettings_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: TaskBoardSettings_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: TaskBoardSettings_delete_key_input

  """increments the numeric columns with given value of the filtered values"""
  _inc: TaskBoardSettings_inc_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: TaskBoardSettings_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: TaskBoardSettings_set_input

  """filter the rows which have to be updated"""
  where: TaskBoardSettings_bool_exp!
}

"""aggregate var_pop on columns"""
type TaskBoardSettings_var_pop_fields {
  id: Float
  taskBoardId: Float
}

"""
order by var_pop() on columns of table "TaskBoardSettings"
"""
input TaskBoardSettings_var_pop_order_by {
  id: order_by
  taskBoardId: order_by
}

"""aggregate var_samp on columns"""
type TaskBoardSettings_var_samp_fields {
  id: Float
  taskBoardId: Float
}

"""
order by var_samp() on columns of table "TaskBoardSettings"
"""
input TaskBoardSettings_var_samp_order_by {
  id: order_by
  taskBoardId: order_by
}

"""aggregate variance on columns"""
type TaskBoardSettings_variance_fields {
  id: Float
  taskBoardId: Float
}

"""
order by variance() on columns of table "TaskBoardSettings"
"""
input TaskBoardSettings_variance_order_by {
  id: order_by
  taskBoardId: order_by
}

scalar TaskBoardType

"""
Boolean expression to compare columns of type "TaskBoardType". All fields are combined with logical 'AND'.
"""
input TaskBoardType_comparison_exp {
  _eq: TaskBoardType
  _gt: TaskBoardType
  _gte: TaskBoardType
  _in: [TaskBoardType!]
  _is_null: Boolean
  _lt: TaskBoardType
  _lte: TaskBoardType
  _neq: TaskBoardType
  _nin: [TaskBoardType!]
}

scalar TaskBoardViewType

"""
Boolean expression to compare columns of type "TaskBoardViewType". All fields are combined with logical 'AND'.
"""
input TaskBoardViewType_comparison_exp {
  _eq: TaskBoardViewType
  _gt: TaskBoardViewType
  _gte: TaskBoardViewType
  _in: [TaskBoardViewType!]
  _is_null: Boolean
  _lt: TaskBoardViewType
  _lte: TaskBoardViewType
  _neq: TaskBoardViewType
  _nin: [TaskBoardViewType!]
}

"""
aggregated selection of "TaskBoard"
"""
type TaskBoard_aggregate {
  aggregate: TaskBoard_aggregate_fields
  nodes: [TaskBoard!]!
}

input TaskBoard_aggregate_bool_exp {
  count: TaskBoard_aggregate_bool_exp_count
}

input TaskBoard_aggregate_bool_exp_count {
  arguments: [TaskBoard_select_column!]
  distinct: Boolean
  filter: TaskBoard_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "TaskBoard"
"""
type TaskBoard_aggregate_fields {
  avg: TaskBoard_avg_fields
  count(columns: [TaskBoard_select_column!], distinct: Boolean): Int!
  max: TaskBoard_max_fields
  min: TaskBoard_min_fields
  stddev: TaskBoard_stddev_fields
  stddev_pop: TaskBoard_stddev_pop_fields
  stddev_samp: TaskBoard_stddev_samp_fields
  sum: TaskBoard_sum_fields
  var_pop: TaskBoard_var_pop_fields
  var_samp: TaskBoard_var_samp_fields
  variance: TaskBoard_variance_fields
}

"""
order by aggregate values of table "TaskBoard"
"""
input TaskBoard_aggregate_order_by {
  avg: TaskBoard_avg_order_by
  count: order_by
  max: TaskBoard_max_order_by
  min: TaskBoard_min_order_by
  stddev: TaskBoard_stddev_order_by
  stddev_pop: TaskBoard_stddev_pop_order_by
  stddev_samp: TaskBoard_stddev_samp_order_by
  sum: TaskBoard_sum_order_by
  var_pop: TaskBoard_var_pop_order_by
  var_samp: TaskBoard_var_samp_order_by
  variance: TaskBoard_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input TaskBoard_append_input {
  viewConfig: jsonb
}

"""
input type for inserting array relation for remote table "TaskBoard"
"""
input TaskBoard_arr_rel_insert_input {
  data: [TaskBoard_insert_input!]!

  """upsert condition"""
  on_conflict: TaskBoard_on_conflict
}

"""aggregate avg on columns"""
type TaskBoard_avg_fields {
  id: Float
  organizationId: Float
  projectId: Float
  taskDefinitionId: Float
}

"""
order by avg() on columns of table "TaskBoard"
"""
input TaskBoard_avg_order_by {
  id: order_by
  organizationId: order_by
  projectId: order_by
  taskDefinitionId: order_by
}

"""
Boolean expression to filter rows from the table "TaskBoard". All fields are combined with a logical 'AND'.
"""
input TaskBoard_bool_exp {
  Organization: Organization_bool_exp
  Project: Project_bool_exp
  TaskBoardSettings: TaskBoardSettings_bool_exp
  TaskBoardSettings_aggregate: TaskBoardSettings_aggregate_bool_exp
  TaskDefinition: TaskDefinition_bool_exp
  _and: [TaskBoard_bool_exp!]
  _not: TaskBoard_bool_exp
  _or: [TaskBoard_bool_exp!]
  code: String_comparison_exp
  createdAt: timestamp_comparison_exp
  description: String_comparison_exp
  icon: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  organizationId: Int_comparison_exp
  projectId: Int_comparison_exp
  taskDefinitionId: Int_comparison_exp
  type: TaskBoardType_comparison_exp
  updatedAt: timestamp_comparison_exp
  viewConfig: jsonb_comparison_exp
  viewType: TaskBoardViewType_comparison_exp
  visibility: Visibility_comparison_exp
}

"""
unique or primary key constraints on table "TaskBoard"
"""
enum TaskBoard_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  TaskBoard_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input TaskBoard_delete_at_path_input {
  viewConfig: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input TaskBoard_delete_elem_input {
  viewConfig: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input TaskBoard_delete_key_input {
  viewConfig: String
}

"""
input type for incrementing numeric columns in table "TaskBoard"
"""
input TaskBoard_inc_input {
  id: Int
  organizationId: Int
  projectId: Int
  taskDefinitionId: Int
}

"""
input type for inserting data into table "TaskBoard"
"""
input TaskBoard_insert_input {
  Organization: Organization_obj_rel_insert_input
  Project: Project_obj_rel_insert_input
  TaskBoardSettings: TaskBoardSettings_arr_rel_insert_input
  TaskDefinition: TaskDefinition_obj_rel_insert_input
  code: String
  createdAt: timestamp
  description: String
  icon: String
  id: Int
  name: String
  organizationId: Int
  projectId: Int
  taskDefinitionId: Int
  type: TaskBoardType
  updatedAt: timestamp
  viewConfig: jsonb
  viewType: TaskBoardViewType
  visibility: Visibility
}

"""aggregate max on columns"""
type TaskBoard_max_fields {
  code: String
  createdAt: timestamp
  description: String
  icon: String
  id: Int
  name: String
  organizationId: Int
  projectId: Int
  taskDefinitionId: Int
  type: TaskBoardType
  updatedAt: timestamp
  viewType: TaskBoardViewType
  visibility: Visibility
}

"""
order by max() on columns of table "TaskBoard"
"""
input TaskBoard_max_order_by {
  code: order_by
  createdAt: order_by
  description: order_by
  icon: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  projectId: order_by
  taskDefinitionId: order_by
  type: order_by
  updatedAt: order_by
  viewType: order_by
  visibility: order_by
}

"""aggregate min on columns"""
type TaskBoard_min_fields {
  code: String
  createdAt: timestamp
  description: String
  icon: String
  id: Int
  name: String
  organizationId: Int
  projectId: Int
  taskDefinitionId: Int
  type: TaskBoardType
  updatedAt: timestamp
  viewType: TaskBoardViewType
  visibility: Visibility
}

"""
order by min() on columns of table "TaskBoard"
"""
input TaskBoard_min_order_by {
  code: order_by
  createdAt: order_by
  description: order_by
  icon: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  projectId: order_by
  taskDefinitionId: order_by
  type: order_by
  updatedAt: order_by
  viewType: order_by
  visibility: order_by
}

"""
response of any mutation on the table "TaskBoard"
"""
type TaskBoard_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [TaskBoard!]!
}

"""
input type for inserting object relation for remote table "TaskBoard"
"""
input TaskBoard_obj_rel_insert_input {
  data: TaskBoard_insert_input!

  """upsert condition"""
  on_conflict: TaskBoard_on_conflict
}

"""
on_conflict condition type for table "TaskBoard"
"""
input TaskBoard_on_conflict {
  constraint: TaskBoard_constraint!
  update_columns: [TaskBoard_update_column!]! = []
  where: TaskBoard_bool_exp
}

"""Ordering options when selecting data from "TaskBoard"."""
input TaskBoard_order_by {
  Organization: Organization_order_by
  Project: Project_order_by
  TaskBoardSettings_aggregate: TaskBoardSettings_aggregate_order_by
  TaskDefinition: TaskDefinition_order_by
  code: order_by
  createdAt: order_by
  description: order_by
  icon: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  projectId: order_by
  taskDefinitionId: order_by
  type: order_by
  updatedAt: order_by
  viewConfig: order_by
  viewType: order_by
  visibility: order_by
}

"""primary key columns input for table: TaskBoard"""
input TaskBoard_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input TaskBoard_prepend_input {
  viewConfig: jsonb
}

"""
select columns of table "TaskBoard"
"""
enum TaskBoard_select_column {
  """column name"""
  code

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  icon

  """column name"""
  id

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  projectId

  """column name"""
  taskDefinitionId

  """column name"""
  type

  """column name"""
  updatedAt

  """column name"""
  viewConfig

  """column name"""
  viewType

  """column name"""
  visibility
}

"""
input type for updating data in table "TaskBoard"
"""
input TaskBoard_set_input {
  code: String
  createdAt: timestamp
  description: String
  icon: String
  id: Int
  name: String
  organizationId: Int
  projectId: Int
  taskDefinitionId: Int
  type: TaskBoardType
  updatedAt: timestamp
  viewConfig: jsonb
  viewType: TaskBoardViewType
  visibility: Visibility
}

"""aggregate stddev on columns"""
type TaskBoard_stddev_fields {
  id: Float
  organizationId: Float
  projectId: Float
  taskDefinitionId: Float
}

"""
order by stddev() on columns of table "TaskBoard"
"""
input TaskBoard_stddev_order_by {
  id: order_by
  organizationId: order_by
  projectId: order_by
  taskDefinitionId: order_by
}

"""aggregate stddev_pop on columns"""
type TaskBoard_stddev_pop_fields {
  id: Float
  organizationId: Float
  projectId: Float
  taskDefinitionId: Float
}

"""
order by stddev_pop() on columns of table "TaskBoard"
"""
input TaskBoard_stddev_pop_order_by {
  id: order_by
  organizationId: order_by
  projectId: order_by
  taskDefinitionId: order_by
}

"""aggregate stddev_samp on columns"""
type TaskBoard_stddev_samp_fields {
  id: Float
  organizationId: Float
  projectId: Float
  taskDefinitionId: Float
}

"""
order by stddev_samp() on columns of table "TaskBoard"
"""
input TaskBoard_stddev_samp_order_by {
  id: order_by
  organizationId: order_by
  projectId: order_by
  taskDefinitionId: order_by
}

"""aggregate sum on columns"""
type TaskBoard_sum_fields {
  id: Int
  organizationId: Int
  projectId: Int
  taskDefinitionId: Int
}

"""
order by sum() on columns of table "TaskBoard"
"""
input TaskBoard_sum_order_by {
  id: order_by
  organizationId: order_by
  projectId: order_by
  taskDefinitionId: order_by
}

"""
update columns of table "TaskBoard"
"""
enum TaskBoard_update_column {
  """column name"""
  code

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  icon

  """column name"""
  id

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  projectId

  """column name"""
  taskDefinitionId

  """column name"""
  type

  """column name"""
  updatedAt

  """column name"""
  viewConfig

  """column name"""
  viewType

  """column name"""
  visibility
}

input TaskBoard_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: TaskBoard_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: TaskBoard_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: TaskBoard_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: TaskBoard_delete_key_input

  """increments the numeric columns with given value of the filtered values"""
  _inc: TaskBoard_inc_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: TaskBoard_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: TaskBoard_set_input

  """filter the rows which have to be updated"""
  where: TaskBoard_bool_exp!
}

"""aggregate var_pop on columns"""
type TaskBoard_var_pop_fields {
  id: Float
  organizationId: Float
  projectId: Float
  taskDefinitionId: Float
}

"""
order by var_pop() on columns of table "TaskBoard"
"""
input TaskBoard_var_pop_order_by {
  id: order_by
  organizationId: order_by
  projectId: order_by
  taskDefinitionId: order_by
}

"""aggregate var_samp on columns"""
type TaskBoard_var_samp_fields {
  id: Float
  organizationId: Float
  projectId: Float
  taskDefinitionId: Float
}

"""
order by var_samp() on columns of table "TaskBoard"
"""
input TaskBoard_var_samp_order_by {
  id: order_by
  organizationId: order_by
  projectId: order_by
  taskDefinitionId: order_by
}

"""aggregate variance on columns"""
type TaskBoard_variance_fields {
  id: Float
  organizationId: Float
  projectId: Float
  taskDefinitionId: Float
}

"""
order by variance() on columns of table "TaskBoard"
"""
input TaskBoard_variance_order_by {
  id: order_by
  organizationId: order_by
  projectId: order_by
  taskDefinitionId: order_by
}

"""
A Relay connection object on "Task"
"""
type TaskConnection {
  edges: [TaskEdge!]!
  pageInfo: PageInfo!
}

"""
columns and relationships of "TaskDefinition"
"""
type TaskDefinition implements Node {
  """An object relationship"""
  Form: Form

  """An object relationship"""
  Organization: Organization!

  """An array relationship"""
  Projects(
    """distinct select on columns"""
    distinct_on: [Project_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Project_order_by!]

    """filter the rows returned"""
    where: Project_bool_exp
  ): [Project!]!

  """An aggregate relationship"""
  Projects_aggregate(
    """distinct select on columns"""
    distinct_on: [Project_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Project_order_by!]

    """filter the rows returned"""
    where: Project_bool_exp
  ): Project_aggregate!

  """An array relationship connection"""
  Projects_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Project_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Project_order_by!]

    """filter the rows returned"""
    where: Project_bool_exp
  ): ProjectConnection!

  """An array relationship"""
  TaskBoards(
    """distinct select on columns"""
    distinct_on: [TaskBoard_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskBoard_order_by!]

    """filter the rows returned"""
    where: TaskBoard_bool_exp
  ): [TaskBoard!]!

  """An aggregate relationship"""
  TaskBoards_aggregate(
    """distinct select on columns"""
    distinct_on: [TaskBoard_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskBoard_order_by!]

    """filter the rows returned"""
    where: TaskBoard_bool_exp
  ): TaskBoard_aggregate!

  """An array relationship connection"""
  TaskBoards_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [TaskBoard_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [TaskBoard_order_by!]

    """filter the rows returned"""
    where: TaskBoard_bool_exp
  ): TaskBoardConnection!

  """An object relationship"""
  TaskDefinition: TaskDefinition

  """An array relationship"""
  TaskDefinitionActivityDefinitions(
    """distinct select on columns"""
    distinct_on: [TaskDefinitionActivityDefinition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinitionActivityDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinitionActivityDefinition_bool_exp
  ): [TaskDefinitionActivityDefinition!]!

  """An aggregate relationship"""
  TaskDefinitionActivityDefinitions_aggregate(
    """distinct select on columns"""
    distinct_on: [TaskDefinitionActivityDefinition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinitionActivityDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinitionActivityDefinition_bool_exp
  ): TaskDefinitionActivityDefinition_aggregate!

  """An array relationship connection"""
  TaskDefinitionActivityDefinitions_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [TaskDefinitionActivityDefinition_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinitionActivityDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinitionActivityDefinition_bool_exp
  ): TaskDefinitionActivityDefinitionConnection!

  """An array relationship"""
  TaskDefinitions(
    """distinct select on columns"""
    distinct_on: [TaskDefinition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): [TaskDefinition!]!

  """An aggregate relationship"""
  TaskDefinitions_aggregate(
    """distinct select on columns"""
    distinct_on: [TaskDefinition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): TaskDefinition_aggregate!

  """An array relationship connection"""
  TaskDefinitions_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [TaskDefinition_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): TaskDefinitionConnection!

  """An array relationship"""
  Tasks(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): [Task!]!

  """An aggregate relationship"""
  Tasks_aggregate(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): Task_aggregate!

  """An array relationship connection"""
  Tasks_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Task_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): TaskConnection!
  config(
    """JSON select path"""
    path: String
  ): jsonb
  createdAt: timestamp!
  ctaConfig(
    """JSON select path"""
    path: String
  ): jsonb
  ctaTemplate: String
  description: String!
  descriptionTemplate: String
  formId: Int
  icon: String!
  id: ID!
  keyTemplate: String
  machineConfig(
    """JSON select path"""
    path: String
  ): jsonb
  notificationConfig(
    """JSON select path"""
    path: String
  ): jsonb
  notificationTemplate: String
  organizationId: Int!
  parentId: Int
  processConfig(
    """JSON select path"""
    path: String
  ): jsonb
  stateConfig(
    """JSON select path"""
    path: String
  ): jsonb
  stateTemplate: String
  statusConfig(
    """JSON select path"""
    path: String
  ): jsonb
  statusTemplate: String
  thumbnail: String!
  title: String!
  titleTemplate: String
  triggerConfig(
    """JSON select path"""
    path: String
  ): jsonb
  updatedAt: timestamp!
}

"""
columns and relationships of "TaskDefinitionActivityDefinition"
"""
type TaskDefinitionActivityDefinition implements Node {
  """An object relationship"""
  ActivityDefinition: ActivityDefinition!

  """An object relationship"""
  TaskDefinition: TaskDefinition!
  activityDefinitionId: Int!
  config(
    """JSON select path"""
    path: String
  ): jsonb
  createdAt: timestamp!
  id: ID!
  initialValue(
    """JSON select path"""
    path: String
  ): jsonb
  taskDefinitionId: Int!
  updatedAt: timestamp!
}

"""
A Relay connection object on "TaskDefinitionActivityDefinition"
"""
type TaskDefinitionActivityDefinitionConnection {
  edges: [TaskDefinitionActivityDefinitionEdge!]!
  pageInfo: PageInfo!
}

type TaskDefinitionActivityDefinitionEdge {
  cursor: String!
  node: TaskDefinitionActivityDefinition!
}

"""
aggregated selection of "TaskDefinitionActivityDefinition"
"""
type TaskDefinitionActivityDefinition_aggregate {
  aggregate: TaskDefinitionActivityDefinition_aggregate_fields
  nodes: [TaskDefinitionActivityDefinition!]!
}

input TaskDefinitionActivityDefinition_aggregate_bool_exp {
  count: TaskDefinitionActivityDefinition_aggregate_bool_exp_count
}

input TaskDefinitionActivityDefinition_aggregate_bool_exp_count {
  arguments: [TaskDefinitionActivityDefinition_select_column!]
  distinct: Boolean
  filter: TaskDefinitionActivityDefinition_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "TaskDefinitionActivityDefinition"
"""
type TaskDefinitionActivityDefinition_aggregate_fields {
  avg: TaskDefinitionActivityDefinition_avg_fields
  count(columns: [TaskDefinitionActivityDefinition_select_column!], distinct: Boolean): Int!
  max: TaskDefinitionActivityDefinition_max_fields
  min: TaskDefinitionActivityDefinition_min_fields
  stddev: TaskDefinitionActivityDefinition_stddev_fields
  stddev_pop: TaskDefinitionActivityDefinition_stddev_pop_fields
  stddev_samp: TaskDefinitionActivityDefinition_stddev_samp_fields
  sum: TaskDefinitionActivityDefinition_sum_fields
  var_pop: TaskDefinitionActivityDefinition_var_pop_fields
  var_samp: TaskDefinitionActivityDefinition_var_samp_fields
  variance: TaskDefinitionActivityDefinition_variance_fields
}

"""
order by aggregate values of table "TaskDefinitionActivityDefinition"
"""
input TaskDefinitionActivityDefinition_aggregate_order_by {
  avg: TaskDefinitionActivityDefinition_avg_order_by
  count: order_by
  max: TaskDefinitionActivityDefinition_max_order_by
  min: TaskDefinitionActivityDefinition_min_order_by
  stddev: TaskDefinitionActivityDefinition_stddev_order_by
  stddev_pop: TaskDefinitionActivityDefinition_stddev_pop_order_by
  stddev_samp: TaskDefinitionActivityDefinition_stddev_samp_order_by
  sum: TaskDefinitionActivityDefinition_sum_order_by
  var_pop: TaskDefinitionActivityDefinition_var_pop_order_by
  var_samp: TaskDefinitionActivityDefinition_var_samp_order_by
  variance: TaskDefinitionActivityDefinition_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input TaskDefinitionActivityDefinition_append_input {
  config: jsonb
  initialValue: jsonb
}

"""
input type for inserting array relation for remote table "TaskDefinitionActivityDefinition"
"""
input TaskDefinitionActivityDefinition_arr_rel_insert_input {
  data: [TaskDefinitionActivityDefinition_insert_input!]!

  """upsert condition"""
  on_conflict: TaskDefinitionActivityDefinition_on_conflict
}

"""aggregate avg on columns"""
type TaskDefinitionActivityDefinition_avg_fields {
  activityDefinitionId: Float
  id: Float
  taskDefinitionId: Float
}

"""
order by avg() on columns of table "TaskDefinitionActivityDefinition"
"""
input TaskDefinitionActivityDefinition_avg_order_by {
  activityDefinitionId: order_by
  id: order_by
  taskDefinitionId: order_by
}

"""
Boolean expression to filter rows from the table "TaskDefinitionActivityDefinition". All fields are combined with a logical 'AND'.
"""
input TaskDefinitionActivityDefinition_bool_exp {
  ActivityDefinition: ActivityDefinition_bool_exp
  TaskDefinition: TaskDefinition_bool_exp
  _and: [TaskDefinitionActivityDefinition_bool_exp!]
  _not: TaskDefinitionActivityDefinition_bool_exp
  _or: [TaskDefinitionActivityDefinition_bool_exp!]
  activityDefinitionId: Int_comparison_exp
  config: jsonb_comparison_exp
  createdAt: timestamp_comparison_exp
  id: Int_comparison_exp
  initialValue: jsonb_comparison_exp
  taskDefinitionId: Int_comparison_exp
  updatedAt: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "TaskDefinitionActivityDefinition"
"""
enum TaskDefinitionActivityDefinition_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  TaskDefinitionActivityDefinition_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input TaskDefinitionActivityDefinition_delete_at_path_input {
  config: [String!]
  initialValue: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input TaskDefinitionActivityDefinition_delete_elem_input {
  config: Int
  initialValue: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input TaskDefinitionActivityDefinition_delete_key_input {
  config: String
  initialValue: String
}

"""
input type for incrementing numeric columns in table "TaskDefinitionActivityDefinition"
"""
input TaskDefinitionActivityDefinition_inc_input {
  activityDefinitionId: Int
  id: Int
  taskDefinitionId: Int
}

"""
input type for inserting data into table "TaskDefinitionActivityDefinition"
"""
input TaskDefinitionActivityDefinition_insert_input {
  ActivityDefinition: ActivityDefinition_obj_rel_insert_input
  TaskDefinition: TaskDefinition_obj_rel_insert_input
  activityDefinitionId: Int
  config: jsonb
  createdAt: timestamp
  id: Int
  initialValue: jsonb
  taskDefinitionId: Int
  updatedAt: timestamp
}

"""aggregate max on columns"""
type TaskDefinitionActivityDefinition_max_fields {
  activityDefinitionId: Int
  createdAt: timestamp
  id: Int
  taskDefinitionId: Int
  updatedAt: timestamp
}

"""
order by max() on columns of table "TaskDefinitionActivityDefinition"
"""
input TaskDefinitionActivityDefinition_max_order_by {
  activityDefinitionId: order_by
  createdAt: order_by
  id: order_by
  taskDefinitionId: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type TaskDefinitionActivityDefinition_min_fields {
  activityDefinitionId: Int
  createdAt: timestamp
  id: Int
  taskDefinitionId: Int
  updatedAt: timestamp
}

"""
order by min() on columns of table "TaskDefinitionActivityDefinition"
"""
input TaskDefinitionActivityDefinition_min_order_by {
  activityDefinitionId: order_by
  createdAt: order_by
  id: order_by
  taskDefinitionId: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "TaskDefinitionActivityDefinition"
"""
type TaskDefinitionActivityDefinition_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [TaskDefinitionActivityDefinition!]!
}

"""
on_conflict condition type for table "TaskDefinitionActivityDefinition"
"""
input TaskDefinitionActivityDefinition_on_conflict {
  constraint: TaskDefinitionActivityDefinition_constraint!
  update_columns: [TaskDefinitionActivityDefinition_update_column!]! = []
  where: TaskDefinitionActivityDefinition_bool_exp
}

"""
Ordering options when selecting data from "TaskDefinitionActivityDefinition".
"""
input TaskDefinitionActivityDefinition_order_by {
  ActivityDefinition: ActivityDefinition_order_by
  TaskDefinition: TaskDefinition_order_by
  activityDefinitionId: order_by
  config: order_by
  createdAt: order_by
  id: order_by
  initialValue: order_by
  taskDefinitionId: order_by
  updatedAt: order_by
}

"""primary key columns input for table: TaskDefinitionActivityDefinition"""
input TaskDefinitionActivityDefinition_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input TaskDefinitionActivityDefinition_prepend_input {
  config: jsonb
  initialValue: jsonb
}

"""
select columns of table "TaskDefinitionActivityDefinition"
"""
enum TaskDefinitionActivityDefinition_select_column {
  """column name"""
  activityDefinitionId

  """column name"""
  config

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  initialValue

  """column name"""
  taskDefinitionId

  """column name"""
  updatedAt
}

"""
input type for updating data in table "TaskDefinitionActivityDefinition"
"""
input TaskDefinitionActivityDefinition_set_input {
  activityDefinitionId: Int
  config: jsonb
  createdAt: timestamp
  id: Int
  initialValue: jsonb
  taskDefinitionId: Int
  updatedAt: timestamp
}

"""aggregate stddev on columns"""
type TaskDefinitionActivityDefinition_stddev_fields {
  activityDefinitionId: Float
  id: Float
  taskDefinitionId: Float
}

"""
order by stddev() on columns of table "TaskDefinitionActivityDefinition"
"""
input TaskDefinitionActivityDefinition_stddev_order_by {
  activityDefinitionId: order_by
  id: order_by
  taskDefinitionId: order_by
}

"""aggregate stddev_pop on columns"""
type TaskDefinitionActivityDefinition_stddev_pop_fields {
  activityDefinitionId: Float
  id: Float
  taskDefinitionId: Float
}

"""
order by stddev_pop() on columns of table "TaskDefinitionActivityDefinition"
"""
input TaskDefinitionActivityDefinition_stddev_pop_order_by {
  activityDefinitionId: order_by
  id: order_by
  taskDefinitionId: order_by
}

"""aggregate stddev_samp on columns"""
type TaskDefinitionActivityDefinition_stddev_samp_fields {
  activityDefinitionId: Float
  id: Float
  taskDefinitionId: Float
}

"""
order by stddev_samp() on columns of table "TaskDefinitionActivityDefinition"
"""
input TaskDefinitionActivityDefinition_stddev_samp_order_by {
  activityDefinitionId: order_by
  id: order_by
  taskDefinitionId: order_by
}

"""aggregate sum on columns"""
type TaskDefinitionActivityDefinition_sum_fields {
  activityDefinitionId: Int
  id: Int
  taskDefinitionId: Int
}

"""
order by sum() on columns of table "TaskDefinitionActivityDefinition"
"""
input TaskDefinitionActivityDefinition_sum_order_by {
  activityDefinitionId: order_by
  id: order_by
  taskDefinitionId: order_by
}

"""
update columns of table "TaskDefinitionActivityDefinition"
"""
enum TaskDefinitionActivityDefinition_update_column {
  """column name"""
  activityDefinitionId

  """column name"""
  config

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  initialValue

  """column name"""
  taskDefinitionId

  """column name"""
  updatedAt
}

input TaskDefinitionActivityDefinition_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: TaskDefinitionActivityDefinition_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: TaskDefinitionActivityDefinition_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: TaskDefinitionActivityDefinition_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: TaskDefinitionActivityDefinition_delete_key_input

  """increments the numeric columns with given value of the filtered values"""
  _inc: TaskDefinitionActivityDefinition_inc_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: TaskDefinitionActivityDefinition_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: TaskDefinitionActivityDefinition_set_input

  """filter the rows which have to be updated"""
  where: TaskDefinitionActivityDefinition_bool_exp!
}

"""aggregate var_pop on columns"""
type TaskDefinitionActivityDefinition_var_pop_fields {
  activityDefinitionId: Float
  id: Float
  taskDefinitionId: Float
}

"""
order by var_pop() on columns of table "TaskDefinitionActivityDefinition"
"""
input TaskDefinitionActivityDefinition_var_pop_order_by {
  activityDefinitionId: order_by
  id: order_by
  taskDefinitionId: order_by
}

"""aggregate var_samp on columns"""
type TaskDefinitionActivityDefinition_var_samp_fields {
  activityDefinitionId: Float
  id: Float
  taskDefinitionId: Float
}

"""
order by var_samp() on columns of table "TaskDefinitionActivityDefinition"
"""
input TaskDefinitionActivityDefinition_var_samp_order_by {
  activityDefinitionId: order_by
  id: order_by
  taskDefinitionId: order_by
}

"""aggregate variance on columns"""
type TaskDefinitionActivityDefinition_variance_fields {
  activityDefinitionId: Float
  id: Float
  taskDefinitionId: Float
}

"""
order by variance() on columns of table "TaskDefinitionActivityDefinition"
"""
input TaskDefinitionActivityDefinition_variance_order_by {
  activityDefinitionId: order_by
  id: order_by
  taskDefinitionId: order_by
}

"""
A Relay connection object on "TaskDefinition"
"""
type TaskDefinitionConnection {
  edges: [TaskDefinitionEdge!]!
  pageInfo: PageInfo!
}

type TaskDefinitionEdge {
  cursor: String!
  node: TaskDefinition!
}

"""
aggregated selection of "TaskDefinition"
"""
type TaskDefinition_aggregate {
  aggregate: TaskDefinition_aggregate_fields
  nodes: [TaskDefinition!]!
}

input TaskDefinition_aggregate_bool_exp {
  count: TaskDefinition_aggregate_bool_exp_count
}

input TaskDefinition_aggregate_bool_exp_count {
  arguments: [TaskDefinition_select_column!]
  distinct: Boolean
  filter: TaskDefinition_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "TaskDefinition"
"""
type TaskDefinition_aggregate_fields {
  avg: TaskDefinition_avg_fields
  count(columns: [TaskDefinition_select_column!], distinct: Boolean): Int!
  max: TaskDefinition_max_fields
  min: TaskDefinition_min_fields
  stddev: TaskDefinition_stddev_fields
  stddev_pop: TaskDefinition_stddev_pop_fields
  stddev_samp: TaskDefinition_stddev_samp_fields
  sum: TaskDefinition_sum_fields
  var_pop: TaskDefinition_var_pop_fields
  var_samp: TaskDefinition_var_samp_fields
  variance: TaskDefinition_variance_fields
}

"""
order by aggregate values of table "TaskDefinition"
"""
input TaskDefinition_aggregate_order_by {
  avg: TaskDefinition_avg_order_by
  count: order_by
  max: TaskDefinition_max_order_by
  min: TaskDefinition_min_order_by
  stddev: TaskDefinition_stddev_order_by
  stddev_pop: TaskDefinition_stddev_pop_order_by
  stddev_samp: TaskDefinition_stddev_samp_order_by
  sum: TaskDefinition_sum_order_by
  var_pop: TaskDefinition_var_pop_order_by
  var_samp: TaskDefinition_var_samp_order_by
  variance: TaskDefinition_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input TaskDefinition_append_input {
  config: jsonb
  ctaConfig: jsonb
  machineConfig: jsonb
  notificationConfig: jsonb
  processConfig: jsonb
  stateConfig: jsonb
  statusConfig: jsonb
  triggerConfig: jsonb
}

"""
input type for inserting array relation for remote table "TaskDefinition"
"""
input TaskDefinition_arr_rel_insert_input {
  data: [TaskDefinition_insert_input!]!

  """upsert condition"""
  on_conflict: TaskDefinition_on_conflict
}

"""aggregate avg on columns"""
type TaskDefinition_avg_fields {
  formId: Float
  id: Float
  organizationId: Float
  parentId: Float
}

"""
order by avg() on columns of table "TaskDefinition"
"""
input TaskDefinition_avg_order_by {
  formId: order_by
  id: order_by
  organizationId: order_by
  parentId: order_by
}

"""
Boolean expression to filter rows from the table "TaskDefinition". All fields are combined with a logical 'AND'.
"""
input TaskDefinition_bool_exp {
  Form: Form_bool_exp
  Organization: Organization_bool_exp
  Projects: Project_bool_exp
  Projects_aggregate: Project_aggregate_bool_exp
  TaskBoards: TaskBoard_bool_exp
  TaskBoards_aggregate: TaskBoard_aggregate_bool_exp
  TaskDefinition: TaskDefinition_bool_exp
  TaskDefinitionActivityDefinitions: TaskDefinitionActivityDefinition_bool_exp
  TaskDefinitionActivityDefinitions_aggregate: TaskDefinitionActivityDefinition_aggregate_bool_exp
  TaskDefinitions: TaskDefinition_bool_exp
  TaskDefinitions_aggregate: TaskDefinition_aggregate_bool_exp
  Tasks: Task_bool_exp
  Tasks_aggregate: Task_aggregate_bool_exp
  _and: [TaskDefinition_bool_exp!]
  _not: TaskDefinition_bool_exp
  _or: [TaskDefinition_bool_exp!]
  config: jsonb_comparison_exp
  createdAt: timestamp_comparison_exp
  ctaConfig: jsonb_comparison_exp
  ctaTemplate: String_comparison_exp
  description: String_comparison_exp
  descriptionTemplate: String_comparison_exp
  formId: Int_comparison_exp
  icon: String_comparison_exp
  id: Int_comparison_exp
  keyTemplate: String_comparison_exp
  machineConfig: jsonb_comparison_exp
  notificationConfig: jsonb_comparison_exp
  notificationTemplate: String_comparison_exp
  organizationId: Int_comparison_exp
  parentId: Int_comparison_exp
  processConfig: jsonb_comparison_exp
  stateConfig: jsonb_comparison_exp
  stateTemplate: String_comparison_exp
  statusConfig: jsonb_comparison_exp
  statusTemplate: String_comparison_exp
  thumbnail: String_comparison_exp
  title: String_comparison_exp
  titleTemplate: String_comparison_exp
  triggerConfig: jsonb_comparison_exp
  updatedAt: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "TaskDefinition"
"""
enum TaskDefinition_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  TaskDefinition_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input TaskDefinition_delete_at_path_input {
  config: [String!]
  ctaConfig: [String!]
  machineConfig: [String!]
  notificationConfig: [String!]
  processConfig: [String!]
  stateConfig: [String!]
  statusConfig: [String!]
  triggerConfig: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input TaskDefinition_delete_elem_input {
  config: Int
  ctaConfig: Int
  machineConfig: Int
  notificationConfig: Int
  processConfig: Int
  stateConfig: Int
  statusConfig: Int
  triggerConfig: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input TaskDefinition_delete_key_input {
  config: String
  ctaConfig: String
  machineConfig: String
  notificationConfig: String
  processConfig: String
  stateConfig: String
  statusConfig: String
  triggerConfig: String
}

"""
input type for incrementing numeric columns in table "TaskDefinition"
"""
input TaskDefinition_inc_input {
  formId: Int
  id: Int
  organizationId: Int
  parentId: Int
}

"""
input type for inserting data into table "TaskDefinition"
"""
input TaskDefinition_insert_input {
  Form: Form_obj_rel_insert_input
  Organization: Organization_obj_rel_insert_input
  Projects: Project_arr_rel_insert_input
  TaskBoards: TaskBoard_arr_rel_insert_input
  TaskDefinition: TaskDefinition_obj_rel_insert_input
  TaskDefinitionActivityDefinitions: TaskDefinitionActivityDefinition_arr_rel_insert_input
  TaskDefinitions: TaskDefinition_arr_rel_insert_input
  Tasks: Task_arr_rel_insert_input
  config: jsonb
  createdAt: timestamp
  ctaConfig: jsonb
  ctaTemplate: String
  description: String
  descriptionTemplate: String
  formId: Int
  icon: String
  id: Int
  keyTemplate: String
  machineConfig: jsonb
  notificationConfig: jsonb
  notificationTemplate: String
  organizationId: Int
  parentId: Int
  processConfig: jsonb
  stateConfig: jsonb
  stateTemplate: String
  statusConfig: jsonb
  statusTemplate: String
  thumbnail: String
  title: String
  titleTemplate: String
  triggerConfig: jsonb
  updatedAt: timestamp
}

"""aggregate max on columns"""
type TaskDefinition_max_fields {
  createdAt: timestamp
  ctaTemplate: String
  description: String
  descriptionTemplate: String
  formId: Int
  icon: String
  id: Int
  keyTemplate: String
  notificationTemplate: String
  organizationId: Int
  parentId: Int
  stateTemplate: String
  statusTemplate: String
  thumbnail: String
  title: String
  titleTemplate: String
  updatedAt: timestamp
}

"""
order by max() on columns of table "TaskDefinition"
"""
input TaskDefinition_max_order_by {
  createdAt: order_by
  ctaTemplate: order_by
  description: order_by
  descriptionTemplate: order_by
  formId: order_by
  icon: order_by
  id: order_by
  keyTemplate: order_by
  notificationTemplate: order_by
  organizationId: order_by
  parentId: order_by
  stateTemplate: order_by
  statusTemplate: order_by
  thumbnail: order_by
  title: order_by
  titleTemplate: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type TaskDefinition_min_fields {
  createdAt: timestamp
  ctaTemplate: String
  description: String
  descriptionTemplate: String
  formId: Int
  icon: String
  id: Int
  keyTemplate: String
  notificationTemplate: String
  organizationId: Int
  parentId: Int
  stateTemplate: String
  statusTemplate: String
  thumbnail: String
  title: String
  titleTemplate: String
  updatedAt: timestamp
}

"""
order by min() on columns of table "TaskDefinition"
"""
input TaskDefinition_min_order_by {
  createdAt: order_by
  ctaTemplate: order_by
  description: order_by
  descriptionTemplate: order_by
  formId: order_by
  icon: order_by
  id: order_by
  keyTemplate: order_by
  notificationTemplate: order_by
  organizationId: order_by
  parentId: order_by
  stateTemplate: order_by
  statusTemplate: order_by
  thumbnail: order_by
  title: order_by
  titleTemplate: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "TaskDefinition"
"""
type TaskDefinition_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [TaskDefinition!]!
}

"""
input type for inserting object relation for remote table "TaskDefinition"
"""
input TaskDefinition_obj_rel_insert_input {
  data: TaskDefinition_insert_input!

  """upsert condition"""
  on_conflict: TaskDefinition_on_conflict
}

"""
on_conflict condition type for table "TaskDefinition"
"""
input TaskDefinition_on_conflict {
  constraint: TaskDefinition_constraint!
  update_columns: [TaskDefinition_update_column!]! = []
  where: TaskDefinition_bool_exp
}

"""Ordering options when selecting data from "TaskDefinition"."""
input TaskDefinition_order_by {
  Form: Form_order_by
  Organization: Organization_order_by
  Projects_aggregate: Project_aggregate_order_by
  TaskBoards_aggregate: TaskBoard_aggregate_order_by
  TaskDefinition: TaskDefinition_order_by
  TaskDefinitionActivityDefinitions_aggregate: TaskDefinitionActivityDefinition_aggregate_order_by
  TaskDefinitions_aggregate: TaskDefinition_aggregate_order_by
  Tasks_aggregate: Task_aggregate_order_by
  config: order_by
  createdAt: order_by
  ctaConfig: order_by
  ctaTemplate: order_by
  description: order_by
  descriptionTemplate: order_by
  formId: order_by
  icon: order_by
  id: order_by
  keyTemplate: order_by
  machineConfig: order_by
  notificationConfig: order_by
  notificationTemplate: order_by
  organizationId: order_by
  parentId: order_by
  processConfig: order_by
  stateConfig: order_by
  stateTemplate: order_by
  statusConfig: order_by
  statusTemplate: order_by
  thumbnail: order_by
  title: order_by
  titleTemplate: order_by
  triggerConfig: order_by
  updatedAt: order_by
}

"""primary key columns input for table: TaskDefinition"""
input TaskDefinition_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input TaskDefinition_prepend_input {
  config: jsonb
  ctaConfig: jsonb
  machineConfig: jsonb
  notificationConfig: jsonb
  processConfig: jsonb
  stateConfig: jsonb
  statusConfig: jsonb
  triggerConfig: jsonb
}

"""
select columns of table "TaskDefinition"
"""
enum TaskDefinition_select_column {
  """column name"""
  config

  """column name"""
  createdAt

  """column name"""
  ctaConfig

  """column name"""
  ctaTemplate

  """column name"""
  description

  """column name"""
  descriptionTemplate

  """column name"""
  formId

  """column name"""
  icon

  """column name"""
  id

  """column name"""
  keyTemplate

  """column name"""
  machineConfig

  """column name"""
  notificationConfig

  """column name"""
  notificationTemplate

  """column name"""
  organizationId

  """column name"""
  parentId

  """column name"""
  processConfig

  """column name"""
  stateConfig

  """column name"""
  stateTemplate

  """column name"""
  statusConfig

  """column name"""
  statusTemplate

  """column name"""
  thumbnail

  """column name"""
  title

  """column name"""
  titleTemplate

  """column name"""
  triggerConfig

  """column name"""
  updatedAt
}

"""
input type for updating data in table "TaskDefinition"
"""
input TaskDefinition_set_input {
  config: jsonb
  createdAt: timestamp
  ctaConfig: jsonb
  ctaTemplate: String
  description: String
  descriptionTemplate: String
  formId: Int
  icon: String
  id: Int
  keyTemplate: String
  machineConfig: jsonb
  notificationConfig: jsonb
  notificationTemplate: String
  organizationId: Int
  parentId: Int
  processConfig: jsonb
  stateConfig: jsonb
  stateTemplate: String
  statusConfig: jsonb
  statusTemplate: String
  thumbnail: String
  title: String
  titleTemplate: String
  triggerConfig: jsonb
  updatedAt: timestamp
}

"""aggregate stddev on columns"""
type TaskDefinition_stddev_fields {
  formId: Float
  id: Float
  organizationId: Float
  parentId: Float
}

"""
order by stddev() on columns of table "TaskDefinition"
"""
input TaskDefinition_stddev_order_by {
  formId: order_by
  id: order_by
  organizationId: order_by
  parentId: order_by
}

"""aggregate stddev_pop on columns"""
type TaskDefinition_stddev_pop_fields {
  formId: Float
  id: Float
  organizationId: Float
  parentId: Float
}

"""
order by stddev_pop() on columns of table "TaskDefinition"
"""
input TaskDefinition_stddev_pop_order_by {
  formId: order_by
  id: order_by
  organizationId: order_by
  parentId: order_by
}

"""aggregate stddev_samp on columns"""
type TaskDefinition_stddev_samp_fields {
  formId: Float
  id: Float
  organizationId: Float
  parentId: Float
}

"""
order by stddev_samp() on columns of table "TaskDefinition"
"""
input TaskDefinition_stddev_samp_order_by {
  formId: order_by
  id: order_by
  organizationId: order_by
  parentId: order_by
}

"""aggregate sum on columns"""
type TaskDefinition_sum_fields {
  formId: Int
  id: Int
  organizationId: Int
  parentId: Int
}

"""
order by sum() on columns of table "TaskDefinition"
"""
input TaskDefinition_sum_order_by {
  formId: order_by
  id: order_by
  organizationId: order_by
  parentId: order_by
}

"""
update columns of table "TaskDefinition"
"""
enum TaskDefinition_update_column {
  """column name"""
  config

  """column name"""
  createdAt

  """column name"""
  ctaConfig

  """column name"""
  ctaTemplate

  """column name"""
  description

  """column name"""
  descriptionTemplate

  """column name"""
  formId

  """column name"""
  icon

  """column name"""
  id

  """column name"""
  keyTemplate

  """column name"""
  machineConfig

  """column name"""
  notificationConfig

  """column name"""
  notificationTemplate

  """column name"""
  organizationId

  """column name"""
  parentId

  """column name"""
  processConfig

  """column name"""
  stateConfig

  """column name"""
  stateTemplate

  """column name"""
  statusConfig

  """column name"""
  statusTemplate

  """column name"""
  thumbnail

  """column name"""
  title

  """column name"""
  titleTemplate

  """column name"""
  triggerConfig

  """column name"""
  updatedAt
}

input TaskDefinition_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: TaskDefinition_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: TaskDefinition_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: TaskDefinition_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: TaskDefinition_delete_key_input

  """increments the numeric columns with given value of the filtered values"""
  _inc: TaskDefinition_inc_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: TaskDefinition_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: TaskDefinition_set_input

  """filter the rows which have to be updated"""
  where: TaskDefinition_bool_exp!
}

"""aggregate var_pop on columns"""
type TaskDefinition_var_pop_fields {
  formId: Float
  id: Float
  organizationId: Float
  parentId: Float
}

"""
order by var_pop() on columns of table "TaskDefinition"
"""
input TaskDefinition_var_pop_order_by {
  formId: order_by
  id: order_by
  organizationId: order_by
  parentId: order_by
}

"""aggregate var_samp on columns"""
type TaskDefinition_var_samp_fields {
  formId: Float
  id: Float
  organizationId: Float
  parentId: Float
}

"""
order by var_samp() on columns of table "TaskDefinition"
"""
input TaskDefinition_var_samp_order_by {
  formId: order_by
  id: order_by
  organizationId: order_by
  parentId: order_by
}

"""aggregate variance on columns"""
type TaskDefinition_variance_fields {
  formId: Float
  id: Float
  organizationId: Float
  parentId: Float
}

"""
order by variance() on columns of table "TaskDefinition"
"""
input TaskDefinition_variance_order_by {
  formId: order_by
  id: order_by
  organizationId: order_by
  parentId: order_by
}

type TaskEdge {
  cursor: String!
  node: Task!
}

scalar TaskPriority

"""
Boolean expression to compare columns of type "TaskPriority". All fields are combined with logical 'AND'.
"""
input TaskPriority_comparison_exp {
  _eq: TaskPriority
  _gt: TaskPriority
  _gte: TaskPriority
  _in: [TaskPriority!]
  _is_null: Boolean
  _lt: TaskPriority
  _lte: TaskPriority
  _neq: TaskPriority
  _nin: [TaskPriority!]
}

"""
aggregated selection of "Task"
"""
type Task_aggregate {
  aggregate: Task_aggregate_fields
  nodes: [Task!]!
}

input Task_aggregate_bool_exp {
  bool_and: Task_aggregate_bool_exp_bool_and
  bool_or: Task_aggregate_bool_exp_bool_or
  count: Task_aggregate_bool_exp_count
}

input Task_aggregate_bool_exp_bool_and {
  arguments: Task_select_column_Task_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: Task_bool_exp
  predicate: Boolean_comparison_exp!
}

input Task_aggregate_bool_exp_bool_or {
  arguments: Task_select_column_Task_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: Task_bool_exp
  predicate: Boolean_comparison_exp!
}

input Task_aggregate_bool_exp_count {
  arguments: [Task_select_column!]
  distinct: Boolean
  filter: Task_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "Task"
"""
type Task_aggregate_fields {
  avg: Task_avg_fields
  count(columns: [Task_select_column!], distinct: Boolean): Int!
  max: Task_max_fields
  min: Task_min_fields
  stddev: Task_stddev_fields
  stddev_pop: Task_stddev_pop_fields
  stddev_samp: Task_stddev_samp_fields
  sum: Task_sum_fields
  var_pop: Task_var_pop_fields
  var_samp: Task_var_samp_fields
  variance: Task_variance_fields
}

"""
order by aggregate values of table "Task"
"""
input Task_aggregate_order_by {
  avg: Task_avg_order_by
  count: order_by
  max: Task_max_order_by
  min: Task_min_order_by
  stddev: Task_stddev_order_by
  stddev_pop: Task_stddev_pop_order_by
  stddev_samp: Task_stddev_samp_order_by
  sum: Task_sum_order_by
  var_pop: Task_var_pop_order_by
  var_samp: Task_var_samp_order_by
  variance: Task_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input Task_append_input {
  config: jsonb
  ctaConfig: jsonb
  formConfig: jsonb
  machineConfig: jsonb
  notificationConfig: jsonb
  processConfig: jsonb
  properties: jsonb
  stateConfig: jsonb
  statusConfig: jsonb
  triggerConfig: jsonb
  values: jsonb
}

"""
input type for inserting array relation for remote table "Task"
"""
input Task_arr_rel_insert_input {
  data: [Task_insert_input!]!

  """upsert condition"""
  on_conflict: Task_on_conflict
}

"""aggregate avg on columns"""
type Task_avg_fields {
  assigneeId: Float
  creatorId: Float
  definitionId: Float
  formId: Float
  id: Float
  organizationId: Float
  parentId: Float
  projectId: Float
  reporterId: Float
  teamId: Float
}

"""
order by avg() on columns of table "Task"
"""
input Task_avg_order_by {
  assigneeId: order_by
  creatorId: order_by
  definitionId: order_by
  formId: order_by
  id: order_by
  organizationId: order_by
  parentId: order_by
  projectId: order_by
  reporterId: order_by
  teamId: order_by
}

"""
Boolean expression to filter rows from the table "Task". All fields are combined with a logical 'AND'.
"""
input Task_bool_exp {
  Comments: Comment_bool_exp
  Comments_aggregate: Comment_aggregate_bool_exp
  EventLogs: EventLog_bool_exp
  EventLogs_aggregate: EventLog_aggregate_bool_exp
  Form: Form_bool_exp
  Organization: Organization_bool_exp
  Project: Project_bool_exp
  Task: Task_bool_exp
  TaskDefinition: TaskDefinition_bool_exp
  Tasks: Task_bool_exp
  Tasks_aggregate: Task_aggregate_bool_exp
  Team: Team_bool_exp
  Triggers: Trigger_bool_exp
  Triggers_aggregate: Trigger_aggregate_bool_exp
  User: User_bool_exp
  _and: [Task_bool_exp!]
  _not: Task_bool_exp
  _or: [Task_bool_exp!]
  assigneeId: Int_comparison_exp
  config: jsonb_comparison_exp
  createdAt: timestamp_comparison_exp
  creatorId: Int_comparison_exp
  cta: String_comparison_exp
  ctaConfig: jsonb_comparison_exp
  ctaName: String_comparison_exp
  ctaTemplate: String_comparison_exp
  definitionId: Int_comparison_exp
  description: String_comparison_exp
  descriptionTemplate: String_comparison_exp
  dueDate: timestamp_comparison_exp
  formConfig: jsonb_comparison_exp
  formId: Int_comparison_exp
  id: Int_comparison_exp
  isActive: Boolean_comparison_exp
  key: String_comparison_exp
  machineConfig: jsonb_comparison_exp
  notificationConfig: jsonb_comparison_exp
  notificationTemplate: String_comparison_exp
  organizationId: Int_comparison_exp
  parentId: Int_comparison_exp
  priority: TaskPriority_comparison_exp
  processConfig: jsonb_comparison_exp
  projectId: Int_comparison_exp
  properties: jsonb_comparison_exp
  reporterId: Int_comparison_exp
  state: String_comparison_exp
  stateConfig: jsonb_comparison_exp
  stateName: String_comparison_exp
  stateTemplate: String_comparison_exp
  stateValues: String_comparison_exp
  status: String_comparison_exp
  statusConfig: jsonb_comparison_exp
  statusName: String_comparison_exp
  statusTemplate: String_comparison_exp
  teamId: Int_comparison_exp
  title: String_comparison_exp
  titleTemplate: String_comparison_exp
  triggerConfig: jsonb_comparison_exp
  type: String_comparison_exp
  typeName: String_comparison_exp
  updatedAt: timestamp_comparison_exp
  userByCreatorid: User_bool_exp
  userByReporterid: User_bool_exp
  values: jsonb_comparison_exp
}

"""
unique or primary key constraints on table "Task"
"""
enum Task_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Task_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input Task_delete_at_path_input {
  config: [String!]
  ctaConfig: [String!]
  formConfig: [String!]
  machineConfig: [String!]
  notificationConfig: [String!]
  processConfig: [String!]
  properties: [String!]
  stateConfig: [String!]
  statusConfig: [String!]
  triggerConfig: [String!]
  values: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input Task_delete_elem_input {
  config: Int
  ctaConfig: Int
  formConfig: Int
  machineConfig: Int
  notificationConfig: Int
  processConfig: Int
  properties: Int
  stateConfig: Int
  statusConfig: Int
  triggerConfig: Int
  values: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input Task_delete_key_input {
  config: String
  ctaConfig: String
  formConfig: String
  machineConfig: String
  notificationConfig: String
  processConfig: String
  properties: String
  stateConfig: String
  statusConfig: String
  triggerConfig: String
  values: String
}

"""
input type for incrementing numeric columns in table "Task"
"""
input Task_inc_input {
  assigneeId: Int
  creatorId: Int
  definitionId: Int
  formId: Int
  id: Int
  organizationId: Int
  parentId: Int
  projectId: Int
  reporterId: Int
  teamId: Int
}

"""
input type for inserting data into table "Task"
"""
input Task_insert_input {
  Comments: Comment_arr_rel_insert_input
  EventLogs: EventLog_arr_rel_insert_input
  Form: Form_obj_rel_insert_input
  Organization: Organization_obj_rel_insert_input
  Project: Project_obj_rel_insert_input
  Task: Task_obj_rel_insert_input
  TaskDefinition: TaskDefinition_obj_rel_insert_input
  Tasks: Task_arr_rel_insert_input
  Team: Team_obj_rel_insert_input
  Triggers: Trigger_arr_rel_insert_input
  User: User_obj_rel_insert_input
  assigneeId: Int
  config: jsonb
  createdAt: timestamp
  creatorId: Int
  cta: String
  ctaConfig: jsonb
  ctaName: String
  ctaTemplate: String
  definitionId: Int
  description: String
  descriptionTemplate: String
  dueDate: timestamp
  formConfig: jsonb
  formId: Int
  id: Int
  isActive: Boolean
  key: String
  machineConfig: jsonb
  notificationConfig: jsonb
  notificationTemplate: String
  organizationId: Int
  parentId: Int
  priority: TaskPriority
  processConfig: jsonb
  projectId: Int
  properties: jsonb
  reporterId: Int
  state: String
  stateConfig: jsonb
  stateName: String
  stateTemplate: String
  stateValues: String
  status: String
  statusConfig: jsonb
  statusName: String
  statusTemplate: String
  teamId: Int
  title: String
  titleTemplate: String
  triggerConfig: jsonb
  type: String
  typeName: String
  updatedAt: timestamp
  userByCreatorid: User_obj_rel_insert_input
  userByReporterid: User_obj_rel_insert_input
  values: jsonb
}

"""aggregate max on columns"""
type Task_max_fields {
  assigneeId: Int
  createdAt: timestamp
  creatorId: Int
  cta: String
  ctaName: String
  ctaTemplate: String
  definitionId: Int
  description: String
  descriptionTemplate: String
  dueDate: timestamp
  formId: Int
  id: Int
  key: String
  notificationTemplate: String
  organizationId: Int
  parentId: Int
  priority: TaskPriority
  projectId: Int
  reporterId: Int
  state: String
  stateName: String
  stateTemplate: String
  stateValues: String
  status: String
  statusName: String
  statusTemplate: String
  teamId: Int
  title: String
  titleTemplate: String
  type: String
  typeName: String
  updatedAt: timestamp
}

"""
order by max() on columns of table "Task"
"""
input Task_max_order_by {
  assigneeId: order_by
  createdAt: order_by
  creatorId: order_by
  cta: order_by
  ctaName: order_by
  ctaTemplate: order_by
  definitionId: order_by
  description: order_by
  descriptionTemplate: order_by
  dueDate: order_by
  formId: order_by
  id: order_by
  key: order_by
  notificationTemplate: order_by
  organizationId: order_by
  parentId: order_by
  priority: order_by
  projectId: order_by
  reporterId: order_by
  state: order_by
  stateName: order_by
  stateTemplate: order_by
  stateValues: order_by
  status: order_by
  statusName: order_by
  statusTemplate: order_by
  teamId: order_by
  title: order_by
  titleTemplate: order_by
  type: order_by
  typeName: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type Task_min_fields {
  assigneeId: Int
  createdAt: timestamp
  creatorId: Int
  cta: String
  ctaName: String
  ctaTemplate: String
  definitionId: Int
  description: String
  descriptionTemplate: String
  dueDate: timestamp
  formId: Int
  id: Int
  key: String
  notificationTemplate: String
  organizationId: Int
  parentId: Int
  priority: TaskPriority
  projectId: Int
  reporterId: Int
  state: String
  stateName: String
  stateTemplate: String
  stateValues: String
  status: String
  statusName: String
  statusTemplate: String
  teamId: Int
  title: String
  titleTemplate: String
  type: String
  typeName: String
  updatedAt: timestamp
}

"""
order by min() on columns of table "Task"
"""
input Task_min_order_by {
  assigneeId: order_by
  createdAt: order_by
  creatorId: order_by
  cta: order_by
  ctaName: order_by
  ctaTemplate: order_by
  definitionId: order_by
  description: order_by
  descriptionTemplate: order_by
  dueDate: order_by
  formId: order_by
  id: order_by
  key: order_by
  notificationTemplate: order_by
  organizationId: order_by
  parentId: order_by
  priority: order_by
  projectId: order_by
  reporterId: order_by
  state: order_by
  stateName: order_by
  stateTemplate: order_by
  stateValues: order_by
  status: order_by
  statusName: order_by
  statusTemplate: order_by
  teamId: order_by
  title: order_by
  titleTemplate: order_by
  type: order_by
  typeName: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "Task"
"""
type Task_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Task!]!
}

"""
input type for inserting object relation for remote table "Task"
"""
input Task_obj_rel_insert_input {
  data: Task_insert_input!

  """upsert condition"""
  on_conflict: Task_on_conflict
}

"""
on_conflict condition type for table "Task"
"""
input Task_on_conflict {
  constraint: Task_constraint!
  update_columns: [Task_update_column!]! = []
  where: Task_bool_exp
}

"""Ordering options when selecting data from "Task"."""
input Task_order_by {
  Comments_aggregate: Comment_aggregate_order_by
  EventLogs_aggregate: EventLog_aggregate_order_by
  Form: Form_order_by
  Organization: Organization_order_by
  Project: Project_order_by
  Task: Task_order_by
  TaskDefinition: TaskDefinition_order_by
  Tasks_aggregate: Task_aggregate_order_by
  Team: Team_order_by
  Triggers_aggregate: Trigger_aggregate_order_by
  User: User_order_by
  assigneeId: order_by
  config: order_by
  createdAt: order_by
  creatorId: order_by
  cta: order_by
  ctaConfig: order_by
  ctaName: order_by
  ctaTemplate: order_by
  definitionId: order_by
  description: order_by
  descriptionTemplate: order_by
  dueDate: order_by
  formConfig: order_by
  formId: order_by
  id: order_by
  isActive: order_by
  key: order_by
  machineConfig: order_by
  notificationConfig: order_by
  notificationTemplate: order_by
  organizationId: order_by
  parentId: order_by
  priority: order_by
  processConfig: order_by
  projectId: order_by
  properties: order_by
  reporterId: order_by
  state: order_by
  stateConfig: order_by
  stateName: order_by
  stateTemplate: order_by
  stateValues: order_by
  status: order_by
  statusConfig: order_by
  statusName: order_by
  statusTemplate: order_by
  teamId: order_by
  title: order_by
  titleTemplate: order_by
  triggerConfig: order_by
  type: order_by
  typeName: order_by
  updatedAt: order_by
  userByCreatorid: User_order_by
  userByReporterid: User_order_by
  values: order_by
}

"""primary key columns input for table: Task"""
input Task_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input Task_prepend_input {
  config: jsonb
  ctaConfig: jsonb
  formConfig: jsonb
  machineConfig: jsonb
  notificationConfig: jsonb
  processConfig: jsonb
  properties: jsonb
  stateConfig: jsonb
  statusConfig: jsonb
  triggerConfig: jsonb
  values: jsonb
}

"""
select columns of table "Task"
"""
enum Task_select_column {
  """column name"""
  assigneeId

  """column name"""
  config

  """column name"""
  createdAt

  """column name"""
  creatorId

  """column name"""
  cta

  """column name"""
  ctaConfig

  """column name"""
  ctaName

  """column name"""
  ctaTemplate

  """column name"""
  definitionId

  """column name"""
  description

  """column name"""
  descriptionTemplate

  """column name"""
  dueDate

  """column name"""
  formConfig

  """column name"""
  formId

  """column name"""
  id

  """column name"""
  isActive

  """column name"""
  key

  """column name"""
  machineConfig

  """column name"""
  notificationConfig

  """column name"""
  notificationTemplate

  """column name"""
  organizationId

  """column name"""
  parentId

  """column name"""
  priority

  """column name"""
  processConfig

  """column name"""
  projectId

  """column name"""
  properties

  """column name"""
  reporterId

  """column name"""
  state

  """column name"""
  stateConfig

  """column name"""
  stateName

  """column name"""
  stateTemplate

  """column name"""
  stateValues

  """column name"""
  status

  """column name"""
  statusConfig

  """column name"""
  statusName

  """column name"""
  statusTemplate

  """column name"""
  teamId

  """column name"""
  title

  """column name"""
  titleTemplate

  """column name"""
  triggerConfig

  """column name"""
  type

  """column name"""
  typeName

  """column name"""
  updatedAt

  """column name"""
  values
}

"""
select "Task_aggregate_bool_exp_bool_and_arguments_columns" columns of table "Task"
"""
enum Task_select_column_Task_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  isActive
}

"""
select "Task_aggregate_bool_exp_bool_or_arguments_columns" columns of table "Task"
"""
enum Task_select_column_Task_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  isActive
}

"""
input type for updating data in table "Task"
"""
input Task_set_input {
  assigneeId: Int
  config: jsonb
  createdAt: timestamp
  creatorId: Int
  cta: String
  ctaConfig: jsonb
  ctaName: String
  ctaTemplate: String
  definitionId: Int
  description: String
  descriptionTemplate: String
  dueDate: timestamp
  formConfig: jsonb
  formId: Int
  id: Int
  isActive: Boolean
  key: String
  machineConfig: jsonb
  notificationConfig: jsonb
  notificationTemplate: String
  organizationId: Int
  parentId: Int
  priority: TaskPriority
  processConfig: jsonb
  projectId: Int
  properties: jsonb
  reporterId: Int
  state: String
  stateConfig: jsonb
  stateName: String
  stateTemplate: String
  stateValues: String
  status: String
  statusConfig: jsonb
  statusName: String
  statusTemplate: String
  teamId: Int
  title: String
  titleTemplate: String
  triggerConfig: jsonb
  type: String
  typeName: String
  updatedAt: timestamp
  values: jsonb
}

"""aggregate stddev on columns"""
type Task_stddev_fields {
  assigneeId: Float
  creatorId: Float
  definitionId: Float
  formId: Float
  id: Float
  organizationId: Float
  parentId: Float
  projectId: Float
  reporterId: Float
  teamId: Float
}

"""
order by stddev() on columns of table "Task"
"""
input Task_stddev_order_by {
  assigneeId: order_by
  creatorId: order_by
  definitionId: order_by
  formId: order_by
  id: order_by
  organizationId: order_by
  parentId: order_by
  projectId: order_by
  reporterId: order_by
  teamId: order_by
}

"""aggregate stddev_pop on columns"""
type Task_stddev_pop_fields {
  assigneeId: Float
  creatorId: Float
  definitionId: Float
  formId: Float
  id: Float
  organizationId: Float
  parentId: Float
  projectId: Float
  reporterId: Float
  teamId: Float
}

"""
order by stddev_pop() on columns of table "Task"
"""
input Task_stddev_pop_order_by {
  assigneeId: order_by
  creatorId: order_by
  definitionId: order_by
  formId: order_by
  id: order_by
  organizationId: order_by
  parentId: order_by
  projectId: order_by
  reporterId: order_by
  teamId: order_by
}

"""aggregate stddev_samp on columns"""
type Task_stddev_samp_fields {
  assigneeId: Float
  creatorId: Float
  definitionId: Float
  formId: Float
  id: Float
  organizationId: Float
  parentId: Float
  projectId: Float
  reporterId: Float
  teamId: Float
}

"""
order by stddev_samp() on columns of table "Task"
"""
input Task_stddev_samp_order_by {
  assigneeId: order_by
  creatorId: order_by
  definitionId: order_by
  formId: order_by
  id: order_by
  organizationId: order_by
  parentId: order_by
  projectId: order_by
  reporterId: order_by
  teamId: order_by
}

"""aggregate sum on columns"""
type Task_sum_fields {
  assigneeId: Int
  creatorId: Int
  definitionId: Int
  formId: Int
  id: Int
  organizationId: Int
  parentId: Int
  projectId: Int
  reporterId: Int
  teamId: Int
}

"""
order by sum() on columns of table "Task"
"""
input Task_sum_order_by {
  assigneeId: order_by
  creatorId: order_by
  definitionId: order_by
  formId: order_by
  id: order_by
  organizationId: order_by
  parentId: order_by
  projectId: order_by
  reporterId: order_by
  teamId: order_by
}

"""
update columns of table "Task"
"""
enum Task_update_column {
  """column name"""
  assigneeId

  """column name"""
  config

  """column name"""
  createdAt

  """column name"""
  creatorId

  """column name"""
  cta

  """column name"""
  ctaConfig

  """column name"""
  ctaName

  """column name"""
  ctaTemplate

  """column name"""
  definitionId

  """column name"""
  description

  """column name"""
  descriptionTemplate

  """column name"""
  dueDate

  """column name"""
  formConfig

  """column name"""
  formId

  """column name"""
  id

  """column name"""
  isActive

  """column name"""
  key

  """column name"""
  machineConfig

  """column name"""
  notificationConfig

  """column name"""
  notificationTemplate

  """column name"""
  organizationId

  """column name"""
  parentId

  """column name"""
  priority

  """column name"""
  processConfig

  """column name"""
  projectId

  """column name"""
  properties

  """column name"""
  reporterId

  """column name"""
  state

  """column name"""
  stateConfig

  """column name"""
  stateName

  """column name"""
  stateTemplate

  """column name"""
  stateValues

  """column name"""
  status

  """column name"""
  statusConfig

  """column name"""
  statusName

  """column name"""
  statusTemplate

  """column name"""
  teamId

  """column name"""
  title

  """column name"""
  titleTemplate

  """column name"""
  triggerConfig

  """column name"""
  type

  """column name"""
  typeName

  """column name"""
  updatedAt

  """column name"""
  values
}

input Task_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: Task_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: Task_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: Task_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: Task_delete_key_input

  """increments the numeric columns with given value of the filtered values"""
  _inc: Task_inc_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: Task_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: Task_set_input

  """filter the rows which have to be updated"""
  where: Task_bool_exp!
}

"""aggregate var_pop on columns"""
type Task_var_pop_fields {
  assigneeId: Float
  creatorId: Float
  definitionId: Float
  formId: Float
  id: Float
  organizationId: Float
  parentId: Float
  projectId: Float
  reporterId: Float
  teamId: Float
}

"""
order by var_pop() on columns of table "Task"
"""
input Task_var_pop_order_by {
  assigneeId: order_by
  creatorId: order_by
  definitionId: order_by
  formId: order_by
  id: order_by
  organizationId: order_by
  parentId: order_by
  projectId: order_by
  reporterId: order_by
  teamId: order_by
}

"""aggregate var_samp on columns"""
type Task_var_samp_fields {
  assigneeId: Float
  creatorId: Float
  definitionId: Float
  formId: Float
  id: Float
  organizationId: Float
  parentId: Float
  projectId: Float
  reporterId: Float
  teamId: Float
}

"""
order by var_samp() on columns of table "Task"
"""
input Task_var_samp_order_by {
  assigneeId: order_by
  creatorId: order_by
  definitionId: order_by
  formId: order_by
  id: order_by
  organizationId: order_by
  parentId: order_by
  projectId: order_by
  reporterId: order_by
  teamId: order_by
}

"""aggregate variance on columns"""
type Task_variance_fields {
  assigneeId: Float
  creatorId: Float
  definitionId: Float
  formId: Float
  id: Float
  organizationId: Float
  parentId: Float
  projectId: Float
  reporterId: Float
  teamId: Float
}

"""
order by variance() on columns of table "Task"
"""
input Task_variance_order_by {
  assigneeId: order_by
  creatorId: order_by
  definitionId: order_by
  formId: order_by
  id: order_by
  organizationId: order_by
  parentId: order_by
  projectId: order_by
  reporterId: order_by
  teamId: order_by
}

"""
columns and relationships of "Team"
"""
type Team implements Node {
  """An array relationship"""
  MemberOnTeams(
    """distinct select on columns"""
    distinct_on: [MemberOnTeams_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnTeams_order_by!]

    """filter the rows returned"""
    where: MemberOnTeams_bool_exp
  ): [MemberOnTeams!]!

  """An aggregate relationship"""
  MemberOnTeams_aggregate(
    """distinct select on columns"""
    distinct_on: [MemberOnTeams_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnTeams_order_by!]

    """filter the rows returned"""
    where: MemberOnTeams_bool_exp
  ): MemberOnTeams_aggregate!

  """An array relationship connection"""
  MemberOnTeams_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [MemberOnTeams_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnTeams_order_by!]

    """filter the rows returned"""
    where: MemberOnTeams_bool_exp
  ): MemberOnTeamsConnection!

  """An object relationship"""
  Organization: Organization!

  """An array relationship"""
  Tasks(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): [Task!]!

  """An aggregate relationship"""
  Tasks_aggregate(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): Task_aggregate!

  """An array relationship connection"""
  Tasks_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Task_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): TaskConnection!

  """An object relationship"""
  User: User!
  bio: String!
  createdAt: timestamp!
  creatorId: Int!
  description: String!
  id: ID!
  managerId: Int!
  name: String!
  organizationId: Int!
  updatedAt: timestamp!

  """An object relationship"""
  userByManagerid: User!
}

"""
A Relay connection object on "Team"
"""
type TeamConnection {
  edges: [TeamEdge!]!
  pageInfo: PageInfo!
}

type TeamEdge {
  cursor: String!
  node: Team!
}

"""
aggregated selection of "Team"
"""
type Team_aggregate {
  aggregate: Team_aggregate_fields
  nodes: [Team!]!
}

input Team_aggregate_bool_exp {
  count: Team_aggregate_bool_exp_count
}

input Team_aggregate_bool_exp_count {
  arguments: [Team_select_column!]
  distinct: Boolean
  filter: Team_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "Team"
"""
type Team_aggregate_fields {
  avg: Team_avg_fields
  count(columns: [Team_select_column!], distinct: Boolean): Int!
  max: Team_max_fields
  min: Team_min_fields
  stddev: Team_stddev_fields
  stddev_pop: Team_stddev_pop_fields
  stddev_samp: Team_stddev_samp_fields
  sum: Team_sum_fields
  var_pop: Team_var_pop_fields
  var_samp: Team_var_samp_fields
  variance: Team_variance_fields
}

"""
order by aggregate values of table "Team"
"""
input Team_aggregate_order_by {
  avg: Team_avg_order_by
  count: order_by
  max: Team_max_order_by
  min: Team_min_order_by
  stddev: Team_stddev_order_by
  stddev_pop: Team_stddev_pop_order_by
  stddev_samp: Team_stddev_samp_order_by
  sum: Team_sum_order_by
  var_pop: Team_var_pop_order_by
  var_samp: Team_var_samp_order_by
  variance: Team_variance_order_by
}

"""
input type for inserting array relation for remote table "Team"
"""
input Team_arr_rel_insert_input {
  data: [Team_insert_input!]!

  """upsert condition"""
  on_conflict: Team_on_conflict
}

"""aggregate avg on columns"""
type Team_avg_fields {
  creatorId: Float
  id: Float
  managerId: Float
  organizationId: Float
}

"""
order by avg() on columns of table "Team"
"""
input Team_avg_order_by {
  creatorId: order_by
  id: order_by
  managerId: order_by
  organizationId: order_by
}

"""
Boolean expression to filter rows from the table "Team". All fields are combined with a logical 'AND'.
"""
input Team_bool_exp {
  MemberOnTeams: MemberOnTeams_bool_exp
  MemberOnTeams_aggregate: MemberOnTeams_aggregate_bool_exp
  Organization: Organization_bool_exp
  Tasks: Task_bool_exp
  Tasks_aggregate: Task_aggregate_bool_exp
  User: User_bool_exp
  _and: [Team_bool_exp!]
  _not: Team_bool_exp
  _or: [Team_bool_exp!]
  bio: String_comparison_exp
  createdAt: timestamp_comparison_exp
  creatorId: Int_comparison_exp
  description: String_comparison_exp
  id: Int_comparison_exp
  managerId: Int_comparison_exp
  name: String_comparison_exp
  organizationId: Int_comparison_exp
  updatedAt: timestamp_comparison_exp
  userByManagerid: User_bool_exp
}

"""
unique or primary key constraints on table "Team"
"""
enum Team_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Team_pkey
}

"""
input type for incrementing numeric columns in table "Team"
"""
input Team_inc_input {
  creatorId: Int
  id: Int
  managerId: Int
  organizationId: Int
}

"""
input type for inserting data into table "Team"
"""
input Team_insert_input {
  MemberOnTeams: MemberOnTeams_arr_rel_insert_input
  Organization: Organization_obj_rel_insert_input
  Tasks: Task_arr_rel_insert_input
  User: User_obj_rel_insert_input
  bio: String
  createdAt: timestamp
  creatorId: Int
  description: String
  id: Int
  managerId: Int
  name: String
  organizationId: Int
  updatedAt: timestamp
  userByManagerid: User_obj_rel_insert_input
}

"""aggregate max on columns"""
type Team_max_fields {
  bio: String
  createdAt: timestamp
  creatorId: Int
  description: String
  id: Int
  managerId: Int
  name: String
  organizationId: Int
  updatedAt: timestamp
}

"""
order by max() on columns of table "Team"
"""
input Team_max_order_by {
  bio: order_by
  createdAt: order_by
  creatorId: order_by
  description: order_by
  id: order_by
  managerId: order_by
  name: order_by
  organizationId: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type Team_min_fields {
  bio: String
  createdAt: timestamp
  creatorId: Int
  description: String
  id: Int
  managerId: Int
  name: String
  organizationId: Int
  updatedAt: timestamp
}

"""
order by min() on columns of table "Team"
"""
input Team_min_order_by {
  bio: order_by
  createdAt: order_by
  creatorId: order_by
  description: order_by
  id: order_by
  managerId: order_by
  name: order_by
  organizationId: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "Team"
"""
type Team_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Team!]!
}

"""
input type for inserting object relation for remote table "Team"
"""
input Team_obj_rel_insert_input {
  data: Team_insert_input!

  """upsert condition"""
  on_conflict: Team_on_conflict
}

"""
on_conflict condition type for table "Team"
"""
input Team_on_conflict {
  constraint: Team_constraint!
  update_columns: [Team_update_column!]! = []
  where: Team_bool_exp
}

"""Ordering options when selecting data from "Team"."""
input Team_order_by {
  MemberOnTeams_aggregate: MemberOnTeams_aggregate_order_by
  Organization: Organization_order_by
  Tasks_aggregate: Task_aggregate_order_by
  User: User_order_by
  bio: order_by
  createdAt: order_by
  creatorId: order_by
  description: order_by
  id: order_by
  managerId: order_by
  name: order_by
  organizationId: order_by
  updatedAt: order_by
  userByManagerid: User_order_by
}

"""primary key columns input for table: Team"""
input Team_pk_columns_input {
  id: Int!
}

"""
select columns of table "Team"
"""
enum Team_select_column {
  """column name"""
  bio

  """column name"""
  createdAt

  """column name"""
  creatorId

  """column name"""
  description

  """column name"""
  id

  """column name"""
  managerId

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  updatedAt
}

"""
input type for updating data in table "Team"
"""
input Team_set_input {
  bio: String
  createdAt: timestamp
  creatorId: Int
  description: String
  id: Int
  managerId: Int
  name: String
  organizationId: Int
  updatedAt: timestamp
}

"""aggregate stddev on columns"""
type Team_stddev_fields {
  creatorId: Float
  id: Float
  managerId: Float
  organizationId: Float
}

"""
order by stddev() on columns of table "Team"
"""
input Team_stddev_order_by {
  creatorId: order_by
  id: order_by
  managerId: order_by
  organizationId: order_by
}

"""aggregate stddev_pop on columns"""
type Team_stddev_pop_fields {
  creatorId: Float
  id: Float
  managerId: Float
  organizationId: Float
}

"""
order by stddev_pop() on columns of table "Team"
"""
input Team_stddev_pop_order_by {
  creatorId: order_by
  id: order_by
  managerId: order_by
  organizationId: order_by
}

"""aggregate stddev_samp on columns"""
type Team_stddev_samp_fields {
  creatorId: Float
  id: Float
  managerId: Float
  organizationId: Float
}

"""
order by stddev_samp() on columns of table "Team"
"""
input Team_stddev_samp_order_by {
  creatorId: order_by
  id: order_by
  managerId: order_by
  organizationId: order_by
}

"""aggregate sum on columns"""
type Team_sum_fields {
  creatorId: Int
  id: Int
  managerId: Int
  organizationId: Int
}

"""
order by sum() on columns of table "Team"
"""
input Team_sum_order_by {
  creatorId: order_by
  id: order_by
  managerId: order_by
  organizationId: order_by
}

"""
update columns of table "Team"
"""
enum Team_update_column {
  """column name"""
  bio

  """column name"""
  createdAt

  """column name"""
  creatorId

  """column name"""
  description

  """column name"""
  id

  """column name"""
  managerId

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  updatedAt
}

input Team_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: Team_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: Team_set_input

  """filter the rows which have to be updated"""
  where: Team_bool_exp!
}

"""aggregate var_pop on columns"""
type Team_var_pop_fields {
  creatorId: Float
  id: Float
  managerId: Float
  organizationId: Float
}

"""
order by var_pop() on columns of table "Team"
"""
input Team_var_pop_order_by {
  creatorId: order_by
  id: order_by
  managerId: order_by
  organizationId: order_by
}

"""aggregate var_samp on columns"""
type Team_var_samp_fields {
  creatorId: Float
  id: Float
  managerId: Float
  organizationId: Float
}

"""
order by var_samp() on columns of table "Team"
"""
input Team_var_samp_order_by {
  creatorId: order_by
  id: order_by
  managerId: order_by
  organizationId: order_by
}

"""aggregate variance on columns"""
type Team_variance_fields {
  creatorId: Float
  id: Float
  managerId: Float
  organizationId: Float
}

"""
order by variance() on columns of table "Team"
"""
input Team_variance_order_by {
  creatorId: order_by
  id: order_by
  managerId: order_by
  organizationId: order_by
}

"""
columns and relationships of "Trigger"
"""
type Trigger implements Node {
  """An object relationship"""
  Task: Task
  createdAt: timestamp!
  description: String
  id: ID!
  key: String!
  name: String
  status: TriggerStatus!
  taskId: Int
  type: TriggerType!
  updatedAt: timestamp!
  value(
    """JSON select path"""
    path: String
  ): jsonb
}

"""
A Relay connection object on "Trigger"
"""
type TriggerConnection {
  edges: [TriggerEdge!]!
  pageInfo: PageInfo!
}

type TriggerEdge {
  cursor: String!
  node: Trigger!
}

scalar TriggerStatus

"""
Boolean expression to compare columns of type "TriggerStatus". All fields are combined with logical 'AND'.
"""
input TriggerStatus_comparison_exp {
  _eq: TriggerStatus
  _gt: TriggerStatus
  _gte: TriggerStatus
  _in: [TriggerStatus!]
  _is_null: Boolean
  _lt: TriggerStatus
  _lte: TriggerStatus
  _neq: TriggerStatus
  _nin: [TriggerStatus!]
}

scalar TriggerType

"""
Boolean expression to compare columns of type "TriggerType". All fields are combined with logical 'AND'.
"""
input TriggerType_comparison_exp {
  _eq: TriggerType
  _gt: TriggerType
  _gte: TriggerType
  _in: [TriggerType!]
  _is_null: Boolean
  _lt: TriggerType
  _lte: TriggerType
  _neq: TriggerType
  _nin: [TriggerType!]
}

"""
aggregated selection of "Trigger"
"""
type Trigger_aggregate {
  aggregate: Trigger_aggregate_fields
  nodes: [Trigger!]!
}

input Trigger_aggregate_bool_exp {
  count: Trigger_aggregate_bool_exp_count
}

input Trigger_aggregate_bool_exp_count {
  arguments: [Trigger_select_column!]
  distinct: Boolean
  filter: Trigger_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "Trigger"
"""
type Trigger_aggregate_fields {
  avg: Trigger_avg_fields
  count(columns: [Trigger_select_column!], distinct: Boolean): Int!
  max: Trigger_max_fields
  min: Trigger_min_fields
  stddev: Trigger_stddev_fields
  stddev_pop: Trigger_stddev_pop_fields
  stddev_samp: Trigger_stddev_samp_fields
  sum: Trigger_sum_fields
  var_pop: Trigger_var_pop_fields
  var_samp: Trigger_var_samp_fields
  variance: Trigger_variance_fields
}

"""
order by aggregate values of table "Trigger"
"""
input Trigger_aggregate_order_by {
  avg: Trigger_avg_order_by
  count: order_by
  max: Trigger_max_order_by
  min: Trigger_min_order_by
  stddev: Trigger_stddev_order_by
  stddev_pop: Trigger_stddev_pop_order_by
  stddev_samp: Trigger_stddev_samp_order_by
  sum: Trigger_sum_order_by
  var_pop: Trigger_var_pop_order_by
  var_samp: Trigger_var_samp_order_by
  variance: Trigger_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input Trigger_append_input {
  value: jsonb
}

"""
input type for inserting array relation for remote table "Trigger"
"""
input Trigger_arr_rel_insert_input {
  data: [Trigger_insert_input!]!

  """upsert condition"""
  on_conflict: Trigger_on_conflict
}

"""aggregate avg on columns"""
type Trigger_avg_fields {
  id: Float
  taskId: Float
}

"""
order by avg() on columns of table "Trigger"
"""
input Trigger_avg_order_by {
  id: order_by
  taskId: order_by
}

"""
Boolean expression to filter rows from the table "Trigger". All fields are combined with a logical 'AND'.
"""
input Trigger_bool_exp {
  Task: Task_bool_exp
  _and: [Trigger_bool_exp!]
  _not: Trigger_bool_exp
  _or: [Trigger_bool_exp!]
  createdAt: timestamp_comparison_exp
  description: String_comparison_exp
  id: Int_comparison_exp
  key: String_comparison_exp
  name: String_comparison_exp
  status: TriggerStatus_comparison_exp
  taskId: Int_comparison_exp
  type: TriggerType_comparison_exp
  updatedAt: timestamp_comparison_exp
  value: jsonb_comparison_exp
}

"""
unique or primary key constraints on table "Trigger"
"""
enum Trigger_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Trigger_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input Trigger_delete_at_path_input {
  value: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input Trigger_delete_elem_input {
  value: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input Trigger_delete_key_input {
  value: String
}

"""
input type for incrementing numeric columns in table "Trigger"
"""
input Trigger_inc_input {
  id: Int
  taskId: Int
}

"""
input type for inserting data into table "Trigger"
"""
input Trigger_insert_input {
  Task: Task_obj_rel_insert_input
  createdAt: timestamp
  description: String
  id: Int
  key: String
  name: String
  status: TriggerStatus
  taskId: Int
  type: TriggerType
  updatedAt: timestamp
  value: jsonb
}

"""aggregate max on columns"""
type Trigger_max_fields {
  createdAt: timestamp
  description: String
  id: Int
  key: String
  name: String
  status: TriggerStatus
  taskId: Int
  type: TriggerType
  updatedAt: timestamp
}

"""
order by max() on columns of table "Trigger"
"""
input Trigger_max_order_by {
  createdAt: order_by
  description: order_by
  id: order_by
  key: order_by
  name: order_by
  status: order_by
  taskId: order_by
  type: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type Trigger_min_fields {
  createdAt: timestamp
  description: String
  id: Int
  key: String
  name: String
  status: TriggerStatus
  taskId: Int
  type: TriggerType
  updatedAt: timestamp
}

"""
order by min() on columns of table "Trigger"
"""
input Trigger_min_order_by {
  createdAt: order_by
  description: order_by
  id: order_by
  key: order_by
  name: order_by
  status: order_by
  taskId: order_by
  type: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "Trigger"
"""
type Trigger_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Trigger!]!
}

"""
on_conflict condition type for table "Trigger"
"""
input Trigger_on_conflict {
  constraint: Trigger_constraint!
  update_columns: [Trigger_update_column!]! = []
  where: Trigger_bool_exp
}

"""Ordering options when selecting data from "Trigger"."""
input Trigger_order_by {
  Task: Task_order_by
  createdAt: order_by
  description: order_by
  id: order_by
  key: order_by
  name: order_by
  status: order_by
  taskId: order_by
  type: order_by
  updatedAt: order_by
  value: order_by
}

"""primary key columns input for table: Trigger"""
input Trigger_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input Trigger_prepend_input {
  value: jsonb
}

"""
select columns of table "Trigger"
"""
enum Trigger_select_column {
  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  key

  """column name"""
  name

  """column name"""
  status

  """column name"""
  taskId

  """column name"""
  type

  """column name"""
  updatedAt

  """column name"""
  value
}

"""
input type for updating data in table "Trigger"
"""
input Trigger_set_input {
  createdAt: timestamp
  description: String
  id: Int
  key: String
  name: String
  status: TriggerStatus
  taskId: Int
  type: TriggerType
  updatedAt: timestamp
  value: jsonb
}

"""aggregate stddev on columns"""
type Trigger_stddev_fields {
  id: Float
  taskId: Float
}

"""
order by stddev() on columns of table "Trigger"
"""
input Trigger_stddev_order_by {
  id: order_by
  taskId: order_by
}

"""aggregate stddev_pop on columns"""
type Trigger_stddev_pop_fields {
  id: Float
  taskId: Float
}

"""
order by stddev_pop() on columns of table "Trigger"
"""
input Trigger_stddev_pop_order_by {
  id: order_by
  taskId: order_by
}

"""aggregate stddev_samp on columns"""
type Trigger_stddev_samp_fields {
  id: Float
  taskId: Float
}

"""
order by stddev_samp() on columns of table "Trigger"
"""
input Trigger_stddev_samp_order_by {
  id: order_by
  taskId: order_by
}

"""aggregate sum on columns"""
type Trigger_sum_fields {
  id: Int
  taskId: Int
}

"""
order by sum() on columns of table "Trigger"
"""
input Trigger_sum_order_by {
  id: order_by
  taskId: order_by
}

"""
update columns of table "Trigger"
"""
enum Trigger_update_column {
  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  key

  """column name"""
  name

  """column name"""
  status

  """column name"""
  taskId

  """column name"""
  type

  """column name"""
  updatedAt

  """column name"""
  value
}

input Trigger_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: Trigger_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: Trigger_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: Trigger_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: Trigger_delete_key_input

  """increments the numeric columns with given value of the filtered values"""
  _inc: Trigger_inc_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: Trigger_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: Trigger_set_input

  """filter the rows which have to be updated"""
  where: Trigger_bool_exp!
}

"""aggregate var_pop on columns"""
type Trigger_var_pop_fields {
  id: Float
  taskId: Float
}

"""
order by var_pop() on columns of table "Trigger"
"""
input Trigger_var_pop_order_by {
  id: order_by
  taskId: order_by
}

"""aggregate var_samp on columns"""
type Trigger_var_samp_fields {
  id: Float
  taskId: Float
}

"""
order by var_samp() on columns of table "Trigger"
"""
input Trigger_var_samp_order_by {
  id: order_by
  taskId: order_by
}

"""aggregate variance on columns"""
type Trigger_variance_fields {
  id: Float
  taskId: Float
}

"""
order by variance() on columns of table "Trigger"
"""
input Trigger_variance_order_by {
  id: order_by
  taskId: order_by
}

"""
columns and relationships of "User"
"""
type User implements Node {
  """An array relationship"""
  Comments(
    """distinct select on columns"""
    distinct_on: [Comment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Comment_order_by!]

    """filter the rows returned"""
    where: Comment_bool_exp
  ): [Comment!]!

  """An aggregate relationship"""
  Comments_aggregate(
    """distinct select on columns"""
    distinct_on: [Comment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Comment_order_by!]

    """filter the rows returned"""
    where: Comment_bool_exp
  ): Comment_aggregate!

  """An array relationship connection"""
  Comments_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Comment_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Comment_order_by!]

    """filter the rows returned"""
    where: Comment_bool_exp
  ): CommentConnection!

  """An array relationship"""
  EventLogs(
    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): [EventLog!]!

  """An aggregate relationship"""
  EventLogs_aggregate(
    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): EventLog_aggregate!

  """An array relationship connection"""
  EventLogs_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): EventLogConnection!

  """An object relationship"""
  File: File

  """An array relationship"""
  MemberOnProjects(
    """distinct select on columns"""
    distinct_on: [MemberOnProjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnProjects_order_by!]

    """filter the rows returned"""
    where: MemberOnProjects_bool_exp
  ): [MemberOnProjects!]!

  """An aggregate relationship"""
  MemberOnProjects_aggregate(
    """distinct select on columns"""
    distinct_on: [MemberOnProjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnProjects_order_by!]

    """filter the rows returned"""
    where: MemberOnProjects_bool_exp
  ): MemberOnProjects_aggregate!

  """An array relationship connection"""
  MemberOnProjects_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [MemberOnProjects_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnProjects_order_by!]

    """filter the rows returned"""
    where: MemberOnProjects_bool_exp
  ): MemberOnProjectsConnection!

  """An array relationship"""
  MemberOnTeams(
    """distinct select on columns"""
    distinct_on: [MemberOnTeams_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnTeams_order_by!]

    """filter the rows returned"""
    where: MemberOnTeams_bool_exp
  ): [MemberOnTeams!]!

  """An aggregate relationship"""
  MemberOnTeams_aggregate(
    """distinct select on columns"""
    distinct_on: [MemberOnTeams_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnTeams_order_by!]

    """filter the rows returned"""
    where: MemberOnTeams_bool_exp
  ): MemberOnTeams_aggregate!

  """An array relationship connection"""
  MemberOnTeams_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [MemberOnTeams_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnTeams_order_by!]

    """filter the rows returned"""
    where: MemberOnTeams_bool_exp
  ): MemberOnTeamsConnection!

  """An object relationship"""
  Organization: Organization!

  """An array relationship"""
  Posts(
    """distinct select on columns"""
    distinct_on: [Post_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Post_order_by!]

    """filter the rows returned"""
    where: Post_bool_exp
  ): [Post!]!

  """An aggregate relationship"""
  Posts_aggregate(
    """distinct select on columns"""
    distinct_on: [Post_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Post_order_by!]

    """filter the rows returned"""
    where: Post_bool_exp
  ): Post_aggregate!

  """An array relationship connection"""
  Posts_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Post_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Post_order_by!]

    """filter the rows returned"""
    where: Post_bool_exp
  ): PostConnection!

  """An array relationship"""
  Projects(
    """distinct select on columns"""
    distinct_on: [Project_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Project_order_by!]

    """filter the rows returned"""
    where: Project_bool_exp
  ): [Project!]!

  """An aggregate relationship"""
  Projects_aggregate(
    """distinct select on columns"""
    distinct_on: [Project_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Project_order_by!]

    """filter the rows returned"""
    where: Project_bool_exp
  ): Project_aggregate!

  """An array relationship connection"""
  Projects_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Project_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Project_order_by!]

    """filter the rows returned"""
    where: Project_bool_exp
  ): ProjectConnection!

  """An array relationship"""
  Tasks(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): [Task!]!

  """An aggregate relationship"""
  Tasks_aggregate(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): Task_aggregate!

  """An array relationship connection"""
  Tasks_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Task_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): TaskConnection!

  """An array relationship"""
  Teams(
    """distinct select on columns"""
    distinct_on: [Team_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Team_order_by!]

    """filter the rows returned"""
    where: Team_bool_exp
  ): [Team!]!

  """An aggregate relationship"""
  Teams_aggregate(
    """distinct select on columns"""
    distinct_on: [Team_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Team_order_by!]

    """filter the rows returned"""
    where: Team_bool_exp
  ): Team_aggregate!

  """An array relationship connection"""
  Teams_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Team_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Team_order_by!]

    """filter the rows returned"""
    where: Team_bool_exp
  ): TeamConnection!

  """An array relationship"""
  UserPermissions(
    """distinct select on columns"""
    distinct_on: [UserPermission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [UserPermission_order_by!]

    """filter the rows returned"""
    where: UserPermission_bool_exp
  ): [UserPermission!]!

  """An aggregate relationship"""
  UserPermissions_aggregate(
    """distinct select on columns"""
    distinct_on: [UserPermission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [UserPermission_order_by!]

    """filter the rows returned"""
    where: UserPermission_bool_exp
  ): UserPermission_aggregate!

  """An array relationship connection"""
  UserPermissions_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [UserPermission_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [UserPermission_order_by!]

    """filter the rows returned"""
    where: UserPermission_bool_exp
  ): UserPermissionConnection!

  """An array relationship"""
  UserSettings(
    """distinct select on columns"""
    distinct_on: [UserSetting_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [UserSetting_order_by!]

    """filter the rows returned"""
    where: UserSetting_bool_exp
  ): [UserSetting!]!

  """An aggregate relationship"""
  UserSettings_aggregate(
    """distinct select on columns"""
    distinct_on: [UserSetting_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [UserSetting_order_by!]

    """filter the rows returned"""
    where: UserSetting_bool_exp
  ): UserSetting_aggregate!

  """An array relationship connection"""
  UserSettings_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [UserSetting_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [UserSetting_order_by!]

    """filter the rows returned"""
    where: UserSetting_bool_exp
  ): UserSettingConnection!
  avatarId: Int
  createdAt: timestamp!
  email: String!
  firstname: String
  id: ID!
  lastname: String
  organizationId: Int!
  password: String!

  """An array relationship"""
  projectsByManagerid(
    """distinct select on columns"""
    distinct_on: [Project_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Project_order_by!]

    """filter the rows returned"""
    where: Project_bool_exp
  ): [Project!]!

  """An aggregate relationship"""
  projectsByManagerid_aggregate(
    """distinct select on columns"""
    distinct_on: [Project_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Project_order_by!]

    """filter the rows returned"""
    where: Project_bool_exp
  ): Project_aggregate!

  """An array relationship connection"""
  projectsByManagerid_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Project_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Project_order_by!]

    """filter the rows returned"""
    where: Project_bool_exp
  ): ProjectConnection!

  """An array relationship"""
  projectsByReporterid(
    """distinct select on columns"""
    distinct_on: [Project_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Project_order_by!]

    """filter the rows returned"""
    where: Project_bool_exp
  ): [Project!]!

  """An aggregate relationship"""
  projectsByReporterid_aggregate(
    """distinct select on columns"""
    distinct_on: [Project_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Project_order_by!]

    """filter the rows returned"""
    where: Project_bool_exp
  ): Project_aggregate!

  """An array relationship connection"""
  projectsByReporterid_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Project_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Project_order_by!]

    """filter the rows returned"""
    where: Project_bool_exp
  ): ProjectConnection!
  role: Role!

  """An array relationship"""
  tasksByCreatorid(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): [Task!]!

  """An aggregate relationship"""
  tasksByCreatorid_aggregate(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): Task_aggregate!

  """An array relationship connection"""
  tasksByCreatorid_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Task_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): TaskConnection!

  """An array relationship"""
  tasksByReporterid(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): [Task!]!

  """An aggregate relationship"""
  tasksByReporterid_aggregate(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): Task_aggregate!

  """An array relationship connection"""
  tasksByReporterid_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Task_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): TaskConnection!

  """An array relationship"""
  teamsByManagerid(
    """distinct select on columns"""
    distinct_on: [Team_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Team_order_by!]

    """filter the rows returned"""
    where: Team_bool_exp
  ): [Team!]!

  """An aggregate relationship"""
  teamsByManagerid_aggregate(
    """distinct select on columns"""
    distinct_on: [Team_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Team_order_by!]

    """filter the rows returned"""
    where: Team_bool_exp
  ): Team_aggregate!

  """An array relationship connection"""
  teamsByManagerid_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Team_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Team_order_by!]

    """filter the rows returned"""
    where: Team_bool_exp
  ): TeamConnection!
  updatedAt: timestamp!
}

"""
A Relay connection object on "User"
"""
type UserConnection {
  edges: [UserEdge!]!
  pageInfo: PageInfo!
}

type UserEdge {
  cursor: String!
  node: User!
}

"""
columns and relationships of "UserPermission"
"""
type UserPermission implements Node {
  """An object relationship"""
  Permission: Permission!

  """An object relationship"""
  User: User!
  createdAt: timestamp!
  id: ID!
  permissionId: Int!
  userId: Int!
}

"""
A Relay connection object on "UserPermission"
"""
type UserPermissionConnection {
  edges: [UserPermissionEdge!]!
  pageInfo: PageInfo!
}

type UserPermissionEdge {
  cursor: String!
  node: UserPermission!
}

"""
aggregated selection of "UserPermission"
"""
type UserPermission_aggregate {
  aggregate: UserPermission_aggregate_fields
  nodes: [UserPermission!]!
}

input UserPermission_aggregate_bool_exp {
  count: UserPermission_aggregate_bool_exp_count
}

input UserPermission_aggregate_bool_exp_count {
  arguments: [UserPermission_select_column!]
  distinct: Boolean
  filter: UserPermission_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "UserPermission"
"""
type UserPermission_aggregate_fields {
  avg: UserPermission_avg_fields
  count(columns: [UserPermission_select_column!], distinct: Boolean): Int!
  max: UserPermission_max_fields
  min: UserPermission_min_fields
  stddev: UserPermission_stddev_fields
  stddev_pop: UserPermission_stddev_pop_fields
  stddev_samp: UserPermission_stddev_samp_fields
  sum: UserPermission_sum_fields
  var_pop: UserPermission_var_pop_fields
  var_samp: UserPermission_var_samp_fields
  variance: UserPermission_variance_fields
}

"""
order by aggregate values of table "UserPermission"
"""
input UserPermission_aggregate_order_by {
  avg: UserPermission_avg_order_by
  count: order_by
  max: UserPermission_max_order_by
  min: UserPermission_min_order_by
  stddev: UserPermission_stddev_order_by
  stddev_pop: UserPermission_stddev_pop_order_by
  stddev_samp: UserPermission_stddev_samp_order_by
  sum: UserPermission_sum_order_by
  var_pop: UserPermission_var_pop_order_by
  var_samp: UserPermission_var_samp_order_by
  variance: UserPermission_variance_order_by
}

"""
input type for inserting array relation for remote table "UserPermission"
"""
input UserPermission_arr_rel_insert_input {
  data: [UserPermission_insert_input!]!

  """upsert condition"""
  on_conflict: UserPermission_on_conflict
}

"""aggregate avg on columns"""
type UserPermission_avg_fields {
  id: Float
  permissionId: Float
  userId: Float
}

"""
order by avg() on columns of table "UserPermission"
"""
input UserPermission_avg_order_by {
  id: order_by
  permissionId: order_by
  userId: order_by
}

"""
Boolean expression to filter rows from the table "UserPermission". All fields are combined with a logical 'AND'.
"""
input UserPermission_bool_exp {
  Permission: Permission_bool_exp
  User: User_bool_exp
  _and: [UserPermission_bool_exp!]
  _not: UserPermission_bool_exp
  _or: [UserPermission_bool_exp!]
  createdAt: timestamp_comparison_exp
  id: Int_comparison_exp
  permissionId: Int_comparison_exp
  userId: Int_comparison_exp
}

"""
unique or primary key constraints on table "UserPermission"
"""
enum UserPermission_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  UserPermission_pkey
}

"""
input type for incrementing numeric columns in table "UserPermission"
"""
input UserPermission_inc_input {
  id: Int
  permissionId: Int
  userId: Int
}

"""
input type for inserting data into table "UserPermission"
"""
input UserPermission_insert_input {
  Permission: Permission_obj_rel_insert_input
  User: User_obj_rel_insert_input
  createdAt: timestamp
  id: Int
  permissionId: Int
  userId: Int
}

"""aggregate max on columns"""
type UserPermission_max_fields {
  createdAt: timestamp
  id: Int
  permissionId: Int
  userId: Int
}

"""
order by max() on columns of table "UserPermission"
"""
input UserPermission_max_order_by {
  createdAt: order_by
  id: order_by
  permissionId: order_by
  userId: order_by
}

"""aggregate min on columns"""
type UserPermission_min_fields {
  createdAt: timestamp
  id: Int
  permissionId: Int
  userId: Int
}

"""
order by min() on columns of table "UserPermission"
"""
input UserPermission_min_order_by {
  createdAt: order_by
  id: order_by
  permissionId: order_by
  userId: order_by
}

"""
response of any mutation on the table "UserPermission"
"""
type UserPermission_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [UserPermission!]!
}

"""
on_conflict condition type for table "UserPermission"
"""
input UserPermission_on_conflict {
  constraint: UserPermission_constraint!
  update_columns: [UserPermission_update_column!]! = []
  where: UserPermission_bool_exp
}

"""Ordering options when selecting data from "UserPermission"."""
input UserPermission_order_by {
  Permission: Permission_order_by
  User: User_order_by
  createdAt: order_by
  id: order_by
  permissionId: order_by
  userId: order_by
}

"""primary key columns input for table: UserPermission"""
input UserPermission_pk_columns_input {
  id: Int!
}

"""
select columns of table "UserPermission"
"""
enum UserPermission_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  permissionId

  """column name"""
  userId
}

"""
input type for updating data in table "UserPermission"
"""
input UserPermission_set_input {
  createdAt: timestamp
  id: Int
  permissionId: Int
  userId: Int
}

"""aggregate stddev on columns"""
type UserPermission_stddev_fields {
  id: Float
  permissionId: Float
  userId: Float
}

"""
order by stddev() on columns of table "UserPermission"
"""
input UserPermission_stddev_order_by {
  id: order_by
  permissionId: order_by
  userId: order_by
}

"""aggregate stddev_pop on columns"""
type UserPermission_stddev_pop_fields {
  id: Float
  permissionId: Float
  userId: Float
}

"""
order by stddev_pop() on columns of table "UserPermission"
"""
input UserPermission_stddev_pop_order_by {
  id: order_by
  permissionId: order_by
  userId: order_by
}

"""aggregate stddev_samp on columns"""
type UserPermission_stddev_samp_fields {
  id: Float
  permissionId: Float
  userId: Float
}

"""
order by stddev_samp() on columns of table "UserPermission"
"""
input UserPermission_stddev_samp_order_by {
  id: order_by
  permissionId: order_by
  userId: order_by
}

"""aggregate sum on columns"""
type UserPermission_sum_fields {
  id: Int
  permissionId: Int
  userId: Int
}

"""
order by sum() on columns of table "UserPermission"
"""
input UserPermission_sum_order_by {
  id: order_by
  permissionId: order_by
  userId: order_by
}

"""
update columns of table "UserPermission"
"""
enum UserPermission_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  permissionId

  """column name"""
  userId
}

input UserPermission_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: UserPermission_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: UserPermission_set_input

  """filter the rows which have to be updated"""
  where: UserPermission_bool_exp!
}

"""aggregate var_pop on columns"""
type UserPermission_var_pop_fields {
  id: Float
  permissionId: Float
  userId: Float
}

"""
order by var_pop() on columns of table "UserPermission"
"""
input UserPermission_var_pop_order_by {
  id: order_by
  permissionId: order_by
  userId: order_by
}

"""aggregate var_samp on columns"""
type UserPermission_var_samp_fields {
  id: Float
  permissionId: Float
  userId: Float
}

"""
order by var_samp() on columns of table "UserPermission"
"""
input UserPermission_var_samp_order_by {
  id: order_by
  permissionId: order_by
  userId: order_by
}

"""aggregate variance on columns"""
type UserPermission_variance_fields {
  id: Float
  permissionId: Float
  userId: Float
}

"""
order by variance() on columns of table "UserPermission"
"""
input UserPermission_variance_order_by {
  id: order_by
  permissionId: order_by
  userId: order_by
}

"""
columns and relationships of "UserSetting"
"""
type UserSetting implements Node {
  """An object relationship"""
  User: User!
  createdAt: timestamp!
  id: ID!
  key: String!
  updatedAt: timestamp!
  userId: Int!
  value(
    """JSON select path"""
    path: String
  ): jsonb!
}

"""
A Relay connection object on "UserSetting"
"""
type UserSettingConnection {
  edges: [UserSettingEdge!]!
  pageInfo: PageInfo!
}

type UserSettingEdge {
  cursor: String!
  node: UserSetting!
}

"""
aggregated selection of "UserSetting"
"""
type UserSetting_aggregate {
  aggregate: UserSetting_aggregate_fields
  nodes: [UserSetting!]!
}

input UserSetting_aggregate_bool_exp {
  count: UserSetting_aggregate_bool_exp_count
}

input UserSetting_aggregate_bool_exp_count {
  arguments: [UserSetting_select_column!]
  distinct: Boolean
  filter: UserSetting_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "UserSetting"
"""
type UserSetting_aggregate_fields {
  avg: UserSetting_avg_fields
  count(columns: [UserSetting_select_column!], distinct: Boolean): Int!
  max: UserSetting_max_fields
  min: UserSetting_min_fields
  stddev: UserSetting_stddev_fields
  stddev_pop: UserSetting_stddev_pop_fields
  stddev_samp: UserSetting_stddev_samp_fields
  sum: UserSetting_sum_fields
  var_pop: UserSetting_var_pop_fields
  var_samp: UserSetting_var_samp_fields
  variance: UserSetting_variance_fields
}

"""
order by aggregate values of table "UserSetting"
"""
input UserSetting_aggregate_order_by {
  avg: UserSetting_avg_order_by
  count: order_by
  max: UserSetting_max_order_by
  min: UserSetting_min_order_by
  stddev: UserSetting_stddev_order_by
  stddev_pop: UserSetting_stddev_pop_order_by
  stddev_samp: UserSetting_stddev_samp_order_by
  sum: UserSetting_sum_order_by
  var_pop: UserSetting_var_pop_order_by
  var_samp: UserSetting_var_samp_order_by
  variance: UserSetting_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input UserSetting_append_input {
  value: jsonb
}

"""
input type for inserting array relation for remote table "UserSetting"
"""
input UserSetting_arr_rel_insert_input {
  data: [UserSetting_insert_input!]!

  """upsert condition"""
  on_conflict: UserSetting_on_conflict
}

"""aggregate avg on columns"""
type UserSetting_avg_fields {
  id: Float
  userId: Float
}

"""
order by avg() on columns of table "UserSetting"
"""
input UserSetting_avg_order_by {
  id: order_by
  userId: order_by
}

"""
Boolean expression to filter rows from the table "UserSetting". All fields are combined with a logical 'AND'.
"""
input UserSetting_bool_exp {
  User: User_bool_exp
  _and: [UserSetting_bool_exp!]
  _not: UserSetting_bool_exp
  _or: [UserSetting_bool_exp!]
  createdAt: timestamp_comparison_exp
  id: Int_comparison_exp
  key: String_comparison_exp
  updatedAt: timestamp_comparison_exp
  userId: Int_comparison_exp
  value: jsonb_comparison_exp
}

"""
unique or primary key constraints on table "UserSetting"
"""
enum UserSetting_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  UserSetting_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input UserSetting_delete_at_path_input {
  value: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input UserSetting_delete_elem_input {
  value: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input UserSetting_delete_key_input {
  value: String
}

"""
input type for incrementing numeric columns in table "UserSetting"
"""
input UserSetting_inc_input {
  id: Int
  userId: Int
}

"""
input type for inserting data into table "UserSetting"
"""
input UserSetting_insert_input {
  User: User_obj_rel_insert_input
  createdAt: timestamp
  id: Int
  key: String
  updatedAt: timestamp
  userId: Int
  value: jsonb
}

"""aggregate max on columns"""
type UserSetting_max_fields {
  createdAt: timestamp
  id: Int
  key: String
  updatedAt: timestamp
  userId: Int
}

"""
order by max() on columns of table "UserSetting"
"""
input UserSetting_max_order_by {
  createdAt: order_by
  id: order_by
  key: order_by
  updatedAt: order_by
  userId: order_by
}

"""aggregate min on columns"""
type UserSetting_min_fields {
  createdAt: timestamp
  id: Int
  key: String
  updatedAt: timestamp
  userId: Int
}

"""
order by min() on columns of table "UserSetting"
"""
input UserSetting_min_order_by {
  createdAt: order_by
  id: order_by
  key: order_by
  updatedAt: order_by
  userId: order_by
}

"""
response of any mutation on the table "UserSetting"
"""
type UserSetting_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [UserSetting!]!
}

"""
on_conflict condition type for table "UserSetting"
"""
input UserSetting_on_conflict {
  constraint: UserSetting_constraint!
  update_columns: [UserSetting_update_column!]! = []
  where: UserSetting_bool_exp
}

"""Ordering options when selecting data from "UserSetting"."""
input UserSetting_order_by {
  User: User_order_by
  createdAt: order_by
  id: order_by
  key: order_by
  updatedAt: order_by
  userId: order_by
  value: order_by
}

"""primary key columns input for table: UserSetting"""
input UserSetting_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input UserSetting_prepend_input {
  value: jsonb
}

"""
select columns of table "UserSetting"
"""
enum UserSetting_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  key

  """column name"""
  updatedAt

  """column name"""
  userId

  """column name"""
  value
}

"""
input type for updating data in table "UserSetting"
"""
input UserSetting_set_input {
  createdAt: timestamp
  id: Int
  key: String
  updatedAt: timestamp
  userId: Int
  value: jsonb
}

"""aggregate stddev on columns"""
type UserSetting_stddev_fields {
  id: Float
  userId: Float
}

"""
order by stddev() on columns of table "UserSetting"
"""
input UserSetting_stddev_order_by {
  id: order_by
  userId: order_by
}

"""aggregate stddev_pop on columns"""
type UserSetting_stddev_pop_fields {
  id: Float
  userId: Float
}

"""
order by stddev_pop() on columns of table "UserSetting"
"""
input UserSetting_stddev_pop_order_by {
  id: order_by
  userId: order_by
}

"""aggregate stddev_samp on columns"""
type UserSetting_stddev_samp_fields {
  id: Float
  userId: Float
}

"""
order by stddev_samp() on columns of table "UserSetting"
"""
input UserSetting_stddev_samp_order_by {
  id: order_by
  userId: order_by
}

"""aggregate sum on columns"""
type UserSetting_sum_fields {
  id: Int
  userId: Int
}

"""
order by sum() on columns of table "UserSetting"
"""
input UserSetting_sum_order_by {
  id: order_by
  userId: order_by
}

"""
update columns of table "UserSetting"
"""
enum UserSetting_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  key

  """column name"""
  updatedAt

  """column name"""
  userId

  """column name"""
  value
}

input UserSetting_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: UserSetting_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: UserSetting_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: UserSetting_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: UserSetting_delete_key_input

  """increments the numeric columns with given value of the filtered values"""
  _inc: UserSetting_inc_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: UserSetting_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: UserSetting_set_input

  """filter the rows which have to be updated"""
  where: UserSetting_bool_exp!
}

"""aggregate var_pop on columns"""
type UserSetting_var_pop_fields {
  id: Float
  userId: Float
}

"""
order by var_pop() on columns of table "UserSetting"
"""
input UserSetting_var_pop_order_by {
  id: order_by
  userId: order_by
}

"""aggregate var_samp on columns"""
type UserSetting_var_samp_fields {
  id: Float
  userId: Float
}

"""
order by var_samp() on columns of table "UserSetting"
"""
input UserSetting_var_samp_order_by {
  id: order_by
  userId: order_by
}

"""aggregate variance on columns"""
type UserSetting_variance_fields {
  id: Float
  userId: Float
}

"""
order by variance() on columns of table "UserSetting"
"""
input UserSetting_variance_order_by {
  id: order_by
  userId: order_by
}

"""
aggregated selection of "User"
"""
type User_aggregate {
  aggregate: User_aggregate_fields
  nodes: [User!]!
}

input User_aggregate_bool_exp {
  count: User_aggregate_bool_exp_count
}

input User_aggregate_bool_exp_count {
  arguments: [User_select_column!]
  distinct: Boolean
  filter: User_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "User"
"""
type User_aggregate_fields {
  avg: User_avg_fields
  count(columns: [User_select_column!], distinct: Boolean): Int!
  max: User_max_fields
  min: User_min_fields
  stddev: User_stddev_fields
  stddev_pop: User_stddev_pop_fields
  stddev_samp: User_stddev_samp_fields
  sum: User_sum_fields
  var_pop: User_var_pop_fields
  var_samp: User_var_samp_fields
  variance: User_variance_fields
}

"""
order by aggregate values of table "User"
"""
input User_aggregate_order_by {
  avg: User_avg_order_by
  count: order_by
  max: User_max_order_by
  min: User_min_order_by
  stddev: User_stddev_order_by
  stddev_pop: User_stddev_pop_order_by
  stddev_samp: User_stddev_samp_order_by
  sum: User_sum_order_by
  var_pop: User_var_pop_order_by
  var_samp: User_var_samp_order_by
  variance: User_variance_order_by
}

"""
input type for inserting array relation for remote table "User"
"""
input User_arr_rel_insert_input {
  data: [User_insert_input!]!

  """upsert condition"""
  on_conflict: User_on_conflict
}

"""aggregate avg on columns"""
type User_avg_fields {
  avatarId: Float
  id: Float
  organizationId: Float
}

"""
order by avg() on columns of table "User"
"""
input User_avg_order_by {
  avatarId: order_by
  id: order_by
  organizationId: order_by
}

"""
Boolean expression to filter rows from the table "User". All fields are combined with a logical 'AND'.
"""
input User_bool_exp {
  Comments: Comment_bool_exp
  Comments_aggregate: Comment_aggregate_bool_exp
  EventLogs: EventLog_bool_exp
  EventLogs_aggregate: EventLog_aggregate_bool_exp
  File: File_bool_exp
  MemberOnProjects: MemberOnProjects_bool_exp
  MemberOnProjects_aggregate: MemberOnProjects_aggregate_bool_exp
  MemberOnTeams: MemberOnTeams_bool_exp
  MemberOnTeams_aggregate: MemberOnTeams_aggregate_bool_exp
  Organization: Organization_bool_exp
  Posts: Post_bool_exp
  Posts_aggregate: Post_aggregate_bool_exp
  Projects: Project_bool_exp
  Projects_aggregate: Project_aggregate_bool_exp
  Tasks: Task_bool_exp
  Tasks_aggregate: Task_aggregate_bool_exp
  Teams: Team_bool_exp
  Teams_aggregate: Team_aggregate_bool_exp
  UserPermissions: UserPermission_bool_exp
  UserPermissions_aggregate: UserPermission_aggregate_bool_exp
  UserSettings: UserSetting_bool_exp
  UserSettings_aggregate: UserSetting_aggregate_bool_exp
  _and: [User_bool_exp!]
  _not: User_bool_exp
  _or: [User_bool_exp!]
  avatarId: Int_comparison_exp
  createdAt: timestamp_comparison_exp
  email: String_comparison_exp
  firstname: String_comparison_exp
  id: Int_comparison_exp
  lastname: String_comparison_exp
  organizationId: Int_comparison_exp
  password: String_comparison_exp
  projectsByManagerid: Project_bool_exp
  projectsByManagerid_aggregate: Project_aggregate_bool_exp
  projectsByReporterid: Project_bool_exp
  projectsByReporterid_aggregate: Project_aggregate_bool_exp
  role: Role_comparison_exp
  tasksByCreatorid: Task_bool_exp
  tasksByCreatorid_aggregate: Task_aggregate_bool_exp
  tasksByReporterid: Task_bool_exp
  tasksByReporterid_aggregate: Task_aggregate_bool_exp
  teamsByManagerid: Team_bool_exp
  teamsByManagerid_aggregate: Team_aggregate_bool_exp
  updatedAt: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "User"
"""
enum User_constraint {
  """
  unique or primary key constraint on columns "email"
  """
  User_email_key

  """
  unique or primary key constraint on columns "id"
  """
  User_pkey
}

"""
input type for incrementing numeric columns in table "User"
"""
input User_inc_input {
  avatarId: Int
  id: Int
  organizationId: Int
}

"""
input type for inserting data into table "User"
"""
input User_insert_input {
  Comments: Comment_arr_rel_insert_input
  EventLogs: EventLog_arr_rel_insert_input
  File: File_obj_rel_insert_input
  MemberOnProjects: MemberOnProjects_arr_rel_insert_input
  MemberOnTeams: MemberOnTeams_arr_rel_insert_input
  Organization: Organization_obj_rel_insert_input
  Posts: Post_arr_rel_insert_input
  Projects: Project_arr_rel_insert_input
  Tasks: Task_arr_rel_insert_input
  Teams: Team_arr_rel_insert_input
  UserPermissions: UserPermission_arr_rel_insert_input
  UserSettings: UserSetting_arr_rel_insert_input
  avatarId: Int
  createdAt: timestamp
  email: String
  firstname: String
  id: Int
  lastname: String
  organizationId: Int
  password: String
  projectsByManagerid: Project_arr_rel_insert_input
  projectsByReporterid: Project_arr_rel_insert_input
  role: Role
  tasksByCreatorid: Task_arr_rel_insert_input
  tasksByReporterid: Task_arr_rel_insert_input
  teamsByManagerid: Team_arr_rel_insert_input
  updatedAt: timestamp
}

"""aggregate max on columns"""
type User_max_fields {
  avatarId: Int
  createdAt: timestamp
  email: String
  firstname: String
  id: Int
  lastname: String
  organizationId: Int
  password: String
  role: Role
  updatedAt: timestamp
}

"""
order by max() on columns of table "User"
"""
input User_max_order_by {
  avatarId: order_by
  createdAt: order_by
  email: order_by
  firstname: order_by
  id: order_by
  lastname: order_by
  organizationId: order_by
  password: order_by
  role: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type User_min_fields {
  avatarId: Int
  createdAt: timestamp
  email: String
  firstname: String
  id: Int
  lastname: String
  organizationId: Int
  password: String
  role: Role
  updatedAt: timestamp
}

"""
order by min() on columns of table "User"
"""
input User_min_order_by {
  avatarId: order_by
  createdAt: order_by
  email: order_by
  firstname: order_by
  id: order_by
  lastname: order_by
  organizationId: order_by
  password: order_by
  role: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "User"
"""
type User_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [User!]!
}

"""
input type for inserting object relation for remote table "User"
"""
input User_obj_rel_insert_input {
  data: User_insert_input!

  """upsert condition"""
  on_conflict: User_on_conflict
}

"""
on_conflict condition type for table "User"
"""
input User_on_conflict {
  constraint: User_constraint!
  update_columns: [User_update_column!]! = []
  where: User_bool_exp
}

"""Ordering options when selecting data from "User"."""
input User_order_by {
  Comments_aggregate: Comment_aggregate_order_by
  EventLogs_aggregate: EventLog_aggregate_order_by
  File: File_order_by
  MemberOnProjects_aggregate: MemberOnProjects_aggregate_order_by
  MemberOnTeams_aggregate: MemberOnTeams_aggregate_order_by
  Organization: Organization_order_by
  Posts_aggregate: Post_aggregate_order_by
  Projects_aggregate: Project_aggregate_order_by
  Tasks_aggregate: Task_aggregate_order_by
  Teams_aggregate: Team_aggregate_order_by
  UserPermissions_aggregate: UserPermission_aggregate_order_by
  UserSettings_aggregate: UserSetting_aggregate_order_by
  avatarId: order_by
  createdAt: order_by
  email: order_by
  firstname: order_by
  id: order_by
  lastname: order_by
  organizationId: order_by
  password: order_by
  projectsByManagerid_aggregate: Project_aggregate_order_by
  projectsByReporterid_aggregate: Project_aggregate_order_by
  role: order_by
  tasksByCreatorid_aggregate: Task_aggregate_order_by
  tasksByReporterid_aggregate: Task_aggregate_order_by
  teamsByManagerid_aggregate: Team_aggregate_order_by
  updatedAt: order_by
}

"""primary key columns input for table: User"""
input User_pk_columns_input {
  id: Int!
}

"""
select columns of table "User"
"""
enum User_select_column {
  """column name"""
  avatarId

  """column name"""
  createdAt

  """column name"""
  email

  """column name"""
  firstname

  """column name"""
  id

  """column name"""
  lastname

  """column name"""
  organizationId

  """column name"""
  password

  """column name"""
  role

  """column name"""
  updatedAt
}

"""
input type for updating data in table "User"
"""
input User_set_input {
  avatarId: Int
  createdAt: timestamp
  email: String
  firstname: String
  id: Int
  lastname: String
  organizationId: Int
  password: String
  role: Role
  updatedAt: timestamp
}

"""aggregate stddev on columns"""
type User_stddev_fields {
  avatarId: Float
  id: Float
  organizationId: Float
}

"""
order by stddev() on columns of table "User"
"""
input User_stddev_order_by {
  avatarId: order_by
  id: order_by
  organizationId: order_by
}

"""aggregate stddev_pop on columns"""
type User_stddev_pop_fields {
  avatarId: Float
  id: Float
  organizationId: Float
}

"""
order by stddev_pop() on columns of table "User"
"""
input User_stddev_pop_order_by {
  avatarId: order_by
  id: order_by
  organizationId: order_by
}

"""aggregate stddev_samp on columns"""
type User_stddev_samp_fields {
  avatarId: Float
  id: Float
  organizationId: Float
}

"""
order by stddev_samp() on columns of table "User"
"""
input User_stddev_samp_order_by {
  avatarId: order_by
  id: order_by
  organizationId: order_by
}

"""aggregate sum on columns"""
type User_sum_fields {
  avatarId: Int
  id: Int
  organizationId: Int
}

"""
order by sum() on columns of table "User"
"""
input User_sum_order_by {
  avatarId: order_by
  id: order_by
  organizationId: order_by
}

"""
update columns of table "User"
"""
enum User_update_column {
  """column name"""
  avatarId

  """column name"""
  createdAt

  """column name"""
  email

  """column name"""
  firstname

  """column name"""
  id

  """column name"""
  lastname

  """column name"""
  organizationId

  """column name"""
  password

  """column name"""
  role

  """column name"""
  updatedAt
}

input User_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: User_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: User_set_input

  """filter the rows which have to be updated"""
  where: User_bool_exp!
}

"""aggregate var_pop on columns"""
type User_var_pop_fields {
  avatarId: Float
  id: Float
  organizationId: Float
}

"""
order by var_pop() on columns of table "User"
"""
input User_var_pop_order_by {
  avatarId: order_by
  id: order_by
  organizationId: order_by
}

"""aggregate var_samp on columns"""
type User_var_samp_fields {
  avatarId: Float
  id: Float
  organizationId: Float
}

"""
order by var_samp() on columns of table "User"
"""
input User_var_samp_order_by {
  avatarId: order_by
  id: order_by
  organizationId: order_by
}

"""aggregate variance on columns"""
type User_variance_fields {
  avatarId: Float
  id: Float
  organizationId: Float
}

"""
order by variance() on columns of table "User"
"""
input User_variance_order_by {
  avatarId: order_by
  id: order_by
  organizationId: order_by
}

scalar Visibility

"""
Boolean expression to compare columns of type "Visibility". All fields are combined with logical 'AND'.
"""
input Visibility_comparison_exp {
  _eq: Visibility
  _gt: Visibility
  _gte: Visibility
  _in: [Visibility!]
  _is_null: Boolean
  _lt: Visibility
  _lte: Visibility
  _neq: Visibility
  _nin: [Visibility!]
}

"""
columns and relationships of "_prisma_migrations"
"""
type _prisma_migrations implements Node {
  applied_steps_count: Int!
  checksum: String!
  finished_at: timestamptz
  id: ID!
  logs: String
  migration_name: String!
  rolled_back_at: timestamptz
  started_at: timestamptz!
}

"""
A Relay connection object on "_prisma_migrations"
"""
type _prisma_migrationsConnection {
  edges: [_prisma_migrationsEdge!]!
  pageInfo: PageInfo!
}

type _prisma_migrationsEdge {
  cursor: String!
  node: _prisma_migrations!
}

"""
Boolean expression to filter rows from the table "_prisma_migrations". All fields are combined with a logical 'AND'.
"""
input _prisma_migrations_bool_exp {
  _and: [_prisma_migrations_bool_exp!]
  _not: _prisma_migrations_bool_exp
  _or: [_prisma_migrations_bool_exp!]
  applied_steps_count: Int_comparison_exp
  checksum: String_comparison_exp
  finished_at: timestamptz_comparison_exp
  id: String_comparison_exp
  logs: String_comparison_exp
  migration_name: String_comparison_exp
  rolled_back_at: timestamptz_comparison_exp
  started_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "_prisma_migrations"
"""
enum _prisma_migrations_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  _prisma_migrations_pkey
}

"""
input type for incrementing numeric columns in table "_prisma_migrations"
"""
input _prisma_migrations_inc_input {
  applied_steps_count: Int
}

"""
input type for inserting data into table "_prisma_migrations"
"""
input _prisma_migrations_insert_input {
  applied_steps_count: Int
  checksum: String
  finished_at: timestamptz
  id: String
  logs: String
  migration_name: String
  rolled_back_at: timestamptz
  started_at: timestamptz
}

"""
response of any mutation on the table "_prisma_migrations"
"""
type _prisma_migrations_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [_prisma_migrations!]!
}

"""
on_conflict condition type for table "_prisma_migrations"
"""
input _prisma_migrations_on_conflict {
  constraint: _prisma_migrations_constraint!
  update_columns: [_prisma_migrations_update_column!]! = []
  where: _prisma_migrations_bool_exp
}

"""Ordering options when selecting data from "_prisma_migrations"."""
input _prisma_migrations_order_by {
  applied_steps_count: order_by
  checksum: order_by
  finished_at: order_by
  id: order_by
  logs: order_by
  migration_name: order_by
  rolled_back_at: order_by
  started_at: order_by
}

"""primary key columns input for table: _prisma_migrations"""
input _prisma_migrations_pk_columns_input {
  id: String!
}

"""
select columns of table "_prisma_migrations"
"""
enum _prisma_migrations_select_column {
  """column name"""
  applied_steps_count

  """column name"""
  checksum

  """column name"""
  finished_at

  """column name"""
  id

  """column name"""
  logs

  """column name"""
  migration_name

  """column name"""
  rolled_back_at

  """column name"""
  started_at
}

"""
input type for updating data in table "_prisma_migrations"
"""
input _prisma_migrations_set_input {
  applied_steps_count: Int
  checksum: String
  finished_at: timestamptz
  id: String
  logs: String
  migration_name: String
  rolled_back_at: timestamptz
  started_at: timestamptz
}

"""
update columns of table "_prisma_migrations"
"""
enum _prisma_migrations_update_column {
  """column name"""
  applied_steps_count

  """column name"""
  checksum

  """column name"""
  finished_at

  """column name"""
  id

  """column name"""
  logs

  """column name"""
  migration_name

  """column name"""
  rolled_back_at

  """column name"""
  started_at
}

input _prisma_migrations_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: _prisma_migrations_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: _prisma_migrations_set_input

  """filter the rows which have to be updated"""
  where: _prisma_migrations_bool_exp!
}

scalar jsonb

input jsonb_cast_exp {
  String: String_comparison_exp
}

"""
Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'.
"""
input jsonb_comparison_exp {
  _cast: jsonb_cast_exp

  """is the column contained in the given json value"""
  _contained_in: jsonb

  """does the column contain the given json value at the top level"""
  _contains: jsonb
  _eq: jsonb
  _gt: jsonb
  _gte: jsonb

  """does the string exist as a top-level key in the column"""
  _has_key: String

  """do all of these strings exist as top-level keys in the column"""
  _has_keys_all: [String!]

  """do any of these strings exist as top-level keys in the column"""
  _has_keys_any: [String!]
  _in: [jsonb!]
  _is_null: Boolean
  _lt: jsonb
  _lte: jsonb
  _neq: jsonb
  _nin: [jsonb!]
}

"""mutation root"""
type mutation_root {
  """
  delete data from the table: "Action"
  """
  delete_Action(
    """filter the rows which have to be deleted"""
    where: Action_bool_exp!
  ): Action_mutation_response

  """
  delete single row from the table: "Action"
  """
  delete_Action_by_pk(id: Int!): Action

  """
  delete data from the table: "ActivityDefinition"
  """
  delete_ActivityDefinition(
    """filter the rows which have to be deleted"""
    where: ActivityDefinition_bool_exp!
  ): ActivityDefinition_mutation_response

  """
  delete single row from the table: "ActivityDefinition"
  """
  delete_ActivityDefinition_by_pk(id: Int!): ActivityDefinition

  """
  delete data from the table: "Comment"
  """
  delete_Comment(
    """filter the rows which have to be deleted"""
    where: Comment_bool_exp!
  ): Comment_mutation_response

  """
  delete single row from the table: "Comment"
  """
  delete_Comment_by_pk(id: Int!): Comment

  """
  delete data from the table: "EventLog"
  """
  delete_EventLog(
    """filter the rows which have to be deleted"""
    where: EventLog_bool_exp!
  ): EventLog_mutation_response

  """
  delete single row from the table: "EventLog"
  """
  delete_EventLog_by_pk(id: Int!): EventLog

  """
  delete data from the table: "File"
  """
  delete_File(
    """filter the rows which have to be deleted"""
    where: File_bool_exp!
  ): File_mutation_response

  """
  delete single row from the table: "File"
  """
  delete_File_by_pk(id: Int!): File

  """
  delete data from the table: "Form"
  """
  delete_Form(
    """filter the rows which have to be deleted"""
    where: Form_bool_exp!
  ): Form_mutation_response

  """
  delete single row from the table: "Form"
  """
  delete_Form_by_pk(id: Int!): Form

  """
  delete data from the table: "MemberOnProjects"
  """
  delete_MemberOnProjects(
    """filter the rows which have to be deleted"""
    where: MemberOnProjects_bool_exp!
  ): MemberOnProjects_mutation_response

  """
  delete single row from the table: "MemberOnProjects"
  """
  delete_MemberOnProjects_by_pk(projectId: Int!, userId: Int!): MemberOnProjects

  """
  delete data from the table: "MemberOnTeams"
  """
  delete_MemberOnTeams(
    """filter the rows which have to be deleted"""
    where: MemberOnTeams_bool_exp!
  ): MemberOnTeams_mutation_response

  """
  delete single row from the table: "MemberOnTeams"
  """
  delete_MemberOnTeams_by_pk(teamId: Int!, userId: Int!): MemberOnTeams

  """
  delete data from the table: "Organization"
  """
  delete_Organization(
    """filter the rows which have to be deleted"""
    where: Organization_bool_exp!
  ): Organization_mutation_response

  """
  delete single row from the table: "Organization"
  """
  delete_Organization_by_pk(id: Int!): Organization

  """
  delete data from the table: "Permission"
  """
  delete_Permission(
    """filter the rows which have to be deleted"""
    where: Permission_bool_exp!
  ): Permission_mutation_response

  """
  delete data from the table: "PermissionGroup"
  """
  delete_PermissionGroup(
    """filter the rows which have to be deleted"""
    where: PermissionGroup_bool_exp!
  ): PermissionGroup_mutation_response

  """
  delete single row from the table: "PermissionGroup"
  """
  delete_PermissionGroup_by_pk(id: Int!): PermissionGroup

  """
  delete single row from the table: "Permission"
  """
  delete_Permission_by_pk(id: Int!): Permission

  """
  delete data from the table: "Post"
  """
  delete_Post(
    """filter the rows which have to be deleted"""
    where: Post_bool_exp!
  ): Post_mutation_response

  """
  delete single row from the table: "Post"
  """
  delete_Post_by_pk(id: Int!): Post

  """
  delete data from the table: "Project"
  """
  delete_Project(
    """filter the rows which have to be deleted"""
    where: Project_bool_exp!
  ): Project_mutation_response

  """
  delete data from the table: "ProjectSettings"
  """
  delete_ProjectSettings(
    """filter the rows which have to be deleted"""
    where: ProjectSettings_bool_exp!
  ): ProjectSettings_mutation_response

  """
  delete single row from the table: "ProjectSettings"
  """
  delete_ProjectSettings_by_pk(id: Int!): ProjectSettings

  """
  delete single row from the table: "Project"
  """
  delete_Project_by_pk(id: Int!): Project

  """
  delete data from the table: "Resource"
  """
  delete_Resource(
    """filter the rows which have to be deleted"""
    where: Resource_bool_exp!
  ): Resource_mutation_response

  """
  delete data from the table: "ResourceItem"
  """
  delete_ResourceItem(
    """filter the rows which have to be deleted"""
    where: ResourceItem_bool_exp!
  ): ResourceItem_mutation_response

  """
  delete single row from the table: "ResourceItem"
  """
  delete_ResourceItem_by_pk(id: Int!): ResourceItem

  """
  delete single row from the table: "Resource"
  """
  delete_Resource_by_pk(id: Int!): Resource

  """
  delete data from the table: "Settings"
  """
  delete_Settings(
    """filter the rows which have to be deleted"""
    where: Settings_bool_exp!
  ): Settings_mutation_response

  """
  delete single row from the table: "Settings"
  """
  delete_Settings_by_pk(id: Int!): Settings

  """
  delete data from the table: "Task"
  """
  delete_Task(
    """filter the rows which have to be deleted"""
    where: Task_bool_exp!
  ): Task_mutation_response

  """
  delete data from the table: "TaskBoard"
  """
  delete_TaskBoard(
    """filter the rows which have to be deleted"""
    where: TaskBoard_bool_exp!
  ): TaskBoard_mutation_response

  """
  delete data from the table: "TaskBoardSettings"
  """
  delete_TaskBoardSettings(
    """filter the rows which have to be deleted"""
    where: TaskBoardSettings_bool_exp!
  ): TaskBoardSettings_mutation_response

  """
  delete single row from the table: "TaskBoardSettings"
  """
  delete_TaskBoardSettings_by_pk(id: Int!): TaskBoardSettings

  """
  delete single row from the table: "TaskBoard"
  """
  delete_TaskBoard_by_pk(id: Int!): TaskBoard

  """
  delete data from the table: "TaskDefinition"
  """
  delete_TaskDefinition(
    """filter the rows which have to be deleted"""
    where: TaskDefinition_bool_exp!
  ): TaskDefinition_mutation_response

  """
  delete data from the table: "TaskDefinitionActivityDefinition"
  """
  delete_TaskDefinitionActivityDefinition(
    """filter the rows which have to be deleted"""
    where: TaskDefinitionActivityDefinition_bool_exp!
  ): TaskDefinitionActivityDefinition_mutation_response

  """
  delete single row from the table: "TaskDefinitionActivityDefinition"
  """
  delete_TaskDefinitionActivityDefinition_by_pk(id: Int!): TaskDefinitionActivityDefinition

  """
  delete single row from the table: "TaskDefinition"
  """
  delete_TaskDefinition_by_pk(id: Int!): TaskDefinition

  """
  delete single row from the table: "Task"
  """
  delete_Task_by_pk(id: Int!): Task

  """
  delete data from the table: "Team"
  """
  delete_Team(
    """filter the rows which have to be deleted"""
    where: Team_bool_exp!
  ): Team_mutation_response

  """
  delete single row from the table: "Team"
  """
  delete_Team_by_pk(id: Int!): Team

  """
  delete data from the table: "Trigger"
  """
  delete_Trigger(
    """filter the rows which have to be deleted"""
    where: Trigger_bool_exp!
  ): Trigger_mutation_response

  """
  delete single row from the table: "Trigger"
  """
  delete_Trigger_by_pk(id: Int!): Trigger

  """
  delete data from the table: "User"
  """
  delete_User(
    """filter the rows which have to be deleted"""
    where: User_bool_exp!
  ): User_mutation_response

  """
  delete data from the table: "UserPermission"
  """
  delete_UserPermission(
    """filter the rows which have to be deleted"""
    where: UserPermission_bool_exp!
  ): UserPermission_mutation_response

  """
  delete single row from the table: "UserPermission"
  """
  delete_UserPermission_by_pk(id: Int!): UserPermission

  """
  delete data from the table: "UserSetting"
  """
  delete_UserSetting(
    """filter the rows which have to be deleted"""
    where: UserSetting_bool_exp!
  ): UserSetting_mutation_response

  """
  delete single row from the table: "UserSetting"
  """
  delete_UserSetting_by_pk(id: Int!): UserSetting

  """
  delete single row from the table: "User"
  """
  delete_User_by_pk(id: Int!): User

  """
  delete data from the table: "_prisma_migrations"
  """
  delete__prisma_migrations(
    """filter the rows which have to be deleted"""
    where: _prisma_migrations_bool_exp!
  ): _prisma_migrations_mutation_response

  """
  delete single row from the table: "_prisma_migrations"
  """
  delete__prisma_migrations_by_pk(id: String!): _prisma_migrations

  """
  insert data into the table: "Action"
  """
  insert_Action(
    """the rows to be inserted"""
    objects: [Action_insert_input!]!

    """upsert condition"""
    on_conflict: Action_on_conflict
  ): Action_mutation_response

  """
  insert a single row into the table: "Action"
  """
  insert_Action_one(
    """the row to be inserted"""
    object: Action_insert_input!

    """upsert condition"""
    on_conflict: Action_on_conflict
  ): Action

  """
  insert data into the table: "ActivityDefinition"
  """
  insert_ActivityDefinition(
    """the rows to be inserted"""
    objects: [ActivityDefinition_insert_input!]!

    """upsert condition"""
    on_conflict: ActivityDefinition_on_conflict
  ): ActivityDefinition_mutation_response

  """
  insert a single row into the table: "ActivityDefinition"
  """
  insert_ActivityDefinition_one(
    """the row to be inserted"""
    object: ActivityDefinition_insert_input!

    """upsert condition"""
    on_conflict: ActivityDefinition_on_conflict
  ): ActivityDefinition

  """
  insert data into the table: "Comment"
  """
  insert_Comment(
    """the rows to be inserted"""
    objects: [Comment_insert_input!]!

    """upsert condition"""
    on_conflict: Comment_on_conflict
  ): Comment_mutation_response

  """
  insert a single row into the table: "Comment"
  """
  insert_Comment_one(
    """the row to be inserted"""
    object: Comment_insert_input!

    """upsert condition"""
    on_conflict: Comment_on_conflict
  ): Comment

  """
  insert data into the table: "EventLog"
  """
  insert_EventLog(
    """the rows to be inserted"""
    objects: [EventLog_insert_input!]!

    """upsert condition"""
    on_conflict: EventLog_on_conflict
  ): EventLog_mutation_response

  """
  insert a single row into the table: "EventLog"
  """
  insert_EventLog_one(
    """the row to be inserted"""
    object: EventLog_insert_input!

    """upsert condition"""
    on_conflict: EventLog_on_conflict
  ): EventLog

  """
  insert data into the table: "File"
  """
  insert_File(
    """the rows to be inserted"""
    objects: [File_insert_input!]!

    """upsert condition"""
    on_conflict: File_on_conflict
  ): File_mutation_response

  """
  insert a single row into the table: "File"
  """
  insert_File_one(
    """the row to be inserted"""
    object: File_insert_input!

    """upsert condition"""
    on_conflict: File_on_conflict
  ): File

  """
  insert data into the table: "Form"
  """
  insert_Form(
    """the rows to be inserted"""
    objects: [Form_insert_input!]!

    """upsert condition"""
    on_conflict: Form_on_conflict
  ): Form_mutation_response

  """
  insert a single row into the table: "Form"
  """
  insert_Form_one(
    """the row to be inserted"""
    object: Form_insert_input!

    """upsert condition"""
    on_conflict: Form_on_conflict
  ): Form

  """
  insert data into the table: "MemberOnProjects"
  """
  insert_MemberOnProjects(
    """the rows to be inserted"""
    objects: [MemberOnProjects_insert_input!]!

    """upsert condition"""
    on_conflict: MemberOnProjects_on_conflict
  ): MemberOnProjects_mutation_response

  """
  insert a single row into the table: "MemberOnProjects"
  """
  insert_MemberOnProjects_one(
    """the row to be inserted"""
    object: MemberOnProjects_insert_input!

    """upsert condition"""
    on_conflict: MemberOnProjects_on_conflict
  ): MemberOnProjects

  """
  insert data into the table: "MemberOnTeams"
  """
  insert_MemberOnTeams(
    """the rows to be inserted"""
    objects: [MemberOnTeams_insert_input!]!

    """upsert condition"""
    on_conflict: MemberOnTeams_on_conflict
  ): MemberOnTeams_mutation_response

  """
  insert a single row into the table: "MemberOnTeams"
  """
  insert_MemberOnTeams_one(
    """the row to be inserted"""
    object: MemberOnTeams_insert_input!

    """upsert condition"""
    on_conflict: MemberOnTeams_on_conflict
  ): MemberOnTeams

  """
  insert data into the table: "Organization"
  """
  insert_Organization(
    """the rows to be inserted"""
    objects: [Organization_insert_input!]!

    """upsert condition"""
    on_conflict: Organization_on_conflict
  ): Organization_mutation_response

  """
  insert a single row into the table: "Organization"
  """
  insert_Organization_one(
    """the row to be inserted"""
    object: Organization_insert_input!

    """upsert condition"""
    on_conflict: Organization_on_conflict
  ): Organization

  """
  insert data into the table: "Permission"
  """
  insert_Permission(
    """the rows to be inserted"""
    objects: [Permission_insert_input!]!

    """upsert condition"""
    on_conflict: Permission_on_conflict
  ): Permission_mutation_response

  """
  insert data into the table: "PermissionGroup"
  """
  insert_PermissionGroup(
    """the rows to be inserted"""
    objects: [PermissionGroup_insert_input!]!

    """upsert condition"""
    on_conflict: PermissionGroup_on_conflict
  ): PermissionGroup_mutation_response

  """
  insert a single row into the table: "PermissionGroup"
  """
  insert_PermissionGroup_one(
    """the row to be inserted"""
    object: PermissionGroup_insert_input!

    """upsert condition"""
    on_conflict: PermissionGroup_on_conflict
  ): PermissionGroup

  """
  insert a single row into the table: "Permission"
  """
  insert_Permission_one(
    """the row to be inserted"""
    object: Permission_insert_input!

    """upsert condition"""
    on_conflict: Permission_on_conflict
  ): Permission

  """
  insert data into the table: "Post"
  """
  insert_Post(
    """the rows to be inserted"""
    objects: [Post_insert_input!]!

    """upsert condition"""
    on_conflict: Post_on_conflict
  ): Post_mutation_response

  """
  insert a single row into the table: "Post"
  """
  insert_Post_one(
    """the row to be inserted"""
    object: Post_insert_input!

    """upsert condition"""
    on_conflict: Post_on_conflict
  ): Post

  """
  insert data into the table: "Project"
  """
  insert_Project(
    """the rows to be inserted"""
    objects: [Project_insert_input!]!

    """upsert condition"""
    on_conflict: Project_on_conflict
  ): Project_mutation_response

  """
  insert data into the table: "ProjectSettings"
  """
  insert_ProjectSettings(
    """the rows to be inserted"""
    objects: [ProjectSettings_insert_input!]!

    """upsert condition"""
    on_conflict: ProjectSettings_on_conflict
  ): ProjectSettings_mutation_response

  """
  insert a single row into the table: "ProjectSettings"
  """
  insert_ProjectSettings_one(
    """the row to be inserted"""
    object: ProjectSettings_insert_input!

    """upsert condition"""
    on_conflict: ProjectSettings_on_conflict
  ): ProjectSettings

  """
  insert a single row into the table: "Project"
  """
  insert_Project_one(
    """the row to be inserted"""
    object: Project_insert_input!

    """upsert condition"""
    on_conflict: Project_on_conflict
  ): Project

  """
  insert data into the table: "Resource"
  """
  insert_Resource(
    """the rows to be inserted"""
    objects: [Resource_insert_input!]!

    """upsert condition"""
    on_conflict: Resource_on_conflict
  ): Resource_mutation_response

  """
  insert data into the table: "ResourceItem"
  """
  insert_ResourceItem(
    """the rows to be inserted"""
    objects: [ResourceItem_insert_input!]!

    """upsert condition"""
    on_conflict: ResourceItem_on_conflict
  ): ResourceItem_mutation_response

  """
  insert a single row into the table: "ResourceItem"
  """
  insert_ResourceItem_one(
    """the row to be inserted"""
    object: ResourceItem_insert_input!

    """upsert condition"""
    on_conflict: ResourceItem_on_conflict
  ): ResourceItem

  """
  insert a single row into the table: "Resource"
  """
  insert_Resource_one(
    """the row to be inserted"""
    object: Resource_insert_input!

    """upsert condition"""
    on_conflict: Resource_on_conflict
  ): Resource

  """
  insert data into the table: "Settings"
  """
  insert_Settings(
    """the rows to be inserted"""
    objects: [Settings_insert_input!]!

    """upsert condition"""
    on_conflict: Settings_on_conflict
  ): Settings_mutation_response

  """
  insert a single row into the table: "Settings"
  """
  insert_Settings_one(
    """the row to be inserted"""
    object: Settings_insert_input!

    """upsert condition"""
    on_conflict: Settings_on_conflict
  ): Settings

  """
  insert data into the table: "Task"
  """
  insert_Task(
    """the rows to be inserted"""
    objects: [Task_insert_input!]!

    """upsert condition"""
    on_conflict: Task_on_conflict
  ): Task_mutation_response

  """
  insert data into the table: "TaskBoard"
  """
  insert_TaskBoard(
    """the rows to be inserted"""
    objects: [TaskBoard_insert_input!]!

    """upsert condition"""
    on_conflict: TaskBoard_on_conflict
  ): TaskBoard_mutation_response

  """
  insert data into the table: "TaskBoardSettings"
  """
  insert_TaskBoardSettings(
    """the rows to be inserted"""
    objects: [TaskBoardSettings_insert_input!]!

    """upsert condition"""
    on_conflict: TaskBoardSettings_on_conflict
  ): TaskBoardSettings_mutation_response

  """
  insert a single row into the table: "TaskBoardSettings"
  """
  insert_TaskBoardSettings_one(
    """the row to be inserted"""
    object: TaskBoardSettings_insert_input!

    """upsert condition"""
    on_conflict: TaskBoardSettings_on_conflict
  ): TaskBoardSettings

  """
  insert a single row into the table: "TaskBoard"
  """
  insert_TaskBoard_one(
    """the row to be inserted"""
    object: TaskBoard_insert_input!

    """upsert condition"""
    on_conflict: TaskBoard_on_conflict
  ): TaskBoard

  """
  insert data into the table: "TaskDefinition"
  """
  insert_TaskDefinition(
    """the rows to be inserted"""
    objects: [TaskDefinition_insert_input!]!

    """upsert condition"""
    on_conflict: TaskDefinition_on_conflict
  ): TaskDefinition_mutation_response

  """
  insert data into the table: "TaskDefinitionActivityDefinition"
  """
  insert_TaskDefinitionActivityDefinition(
    """the rows to be inserted"""
    objects: [TaskDefinitionActivityDefinition_insert_input!]!

    """upsert condition"""
    on_conflict: TaskDefinitionActivityDefinition_on_conflict
  ): TaskDefinitionActivityDefinition_mutation_response

  """
  insert a single row into the table: "TaskDefinitionActivityDefinition"
  """
  insert_TaskDefinitionActivityDefinition_one(
    """the row to be inserted"""
    object: TaskDefinitionActivityDefinition_insert_input!

    """upsert condition"""
    on_conflict: TaskDefinitionActivityDefinition_on_conflict
  ): TaskDefinitionActivityDefinition

  """
  insert a single row into the table: "TaskDefinition"
  """
  insert_TaskDefinition_one(
    """the row to be inserted"""
    object: TaskDefinition_insert_input!

    """upsert condition"""
    on_conflict: TaskDefinition_on_conflict
  ): TaskDefinition

  """
  insert a single row into the table: "Task"
  """
  insert_Task_one(
    """the row to be inserted"""
    object: Task_insert_input!

    """upsert condition"""
    on_conflict: Task_on_conflict
  ): Task

  """
  insert data into the table: "Team"
  """
  insert_Team(
    """the rows to be inserted"""
    objects: [Team_insert_input!]!

    """upsert condition"""
    on_conflict: Team_on_conflict
  ): Team_mutation_response

  """
  insert a single row into the table: "Team"
  """
  insert_Team_one(
    """the row to be inserted"""
    object: Team_insert_input!

    """upsert condition"""
    on_conflict: Team_on_conflict
  ): Team

  """
  insert data into the table: "Trigger"
  """
  insert_Trigger(
    """the rows to be inserted"""
    objects: [Trigger_insert_input!]!

    """upsert condition"""
    on_conflict: Trigger_on_conflict
  ): Trigger_mutation_response

  """
  insert a single row into the table: "Trigger"
  """
  insert_Trigger_one(
    """the row to be inserted"""
    object: Trigger_insert_input!

    """upsert condition"""
    on_conflict: Trigger_on_conflict
  ): Trigger

  """
  insert data into the table: "User"
  """
  insert_User(
    """the rows to be inserted"""
    objects: [User_insert_input!]!

    """upsert condition"""
    on_conflict: User_on_conflict
  ): User_mutation_response

  """
  insert data into the table: "UserPermission"
  """
  insert_UserPermission(
    """the rows to be inserted"""
    objects: [UserPermission_insert_input!]!

    """upsert condition"""
    on_conflict: UserPermission_on_conflict
  ): UserPermission_mutation_response

  """
  insert a single row into the table: "UserPermission"
  """
  insert_UserPermission_one(
    """the row to be inserted"""
    object: UserPermission_insert_input!

    """upsert condition"""
    on_conflict: UserPermission_on_conflict
  ): UserPermission

  """
  insert data into the table: "UserSetting"
  """
  insert_UserSetting(
    """the rows to be inserted"""
    objects: [UserSetting_insert_input!]!

    """upsert condition"""
    on_conflict: UserSetting_on_conflict
  ): UserSetting_mutation_response

  """
  insert a single row into the table: "UserSetting"
  """
  insert_UserSetting_one(
    """the row to be inserted"""
    object: UserSetting_insert_input!

    """upsert condition"""
    on_conflict: UserSetting_on_conflict
  ): UserSetting

  """
  insert a single row into the table: "User"
  """
  insert_User_one(
    """the row to be inserted"""
    object: User_insert_input!

    """upsert condition"""
    on_conflict: User_on_conflict
  ): User

  """
  insert data into the table: "_prisma_migrations"
  """
  insert__prisma_migrations(
    """the rows to be inserted"""
    objects: [_prisma_migrations_insert_input!]!

    """upsert condition"""
    on_conflict: _prisma_migrations_on_conflict
  ): _prisma_migrations_mutation_response

  """
  insert a single row into the table: "_prisma_migrations"
  """
  insert__prisma_migrations_one(
    """the row to be inserted"""
    object: _prisma_migrations_insert_input!

    """upsert condition"""
    on_conflict: _prisma_migrations_on_conflict
  ): _prisma_migrations
  signin(data: LoginInput!): LoginAuth!
  submitTask(input: FormTriggerInput!): SubmitTaskOutput!

  """
  update data of the table: "Action"
  """
  update_Action(
    """increments the numeric columns with given value of the filtered values"""
    _inc: Action_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: Action_set_input

    """filter the rows which have to be updated"""
    where: Action_bool_exp!
  ): Action_mutation_response

  """
  update single row of the table: "Action"
  """
  update_Action_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: Action_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: Action_set_input
    pk_columns: Action_pk_columns_input!
  ): Action

  """
  update multiples rows of table: "Action"
  """
  update_Action_many(
    """updates to execute, in order"""
    updates: [Action_updates!]!
  ): [Action_mutation_response]

  """
  update data of the table: "ActivityDefinition"
  """
  update_ActivityDefinition(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ActivityDefinition_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ActivityDefinition_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ActivityDefinition_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ActivityDefinition_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: ActivityDefinition_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ActivityDefinition_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ActivityDefinition_set_input

    """filter the rows which have to be updated"""
    where: ActivityDefinition_bool_exp!
  ): ActivityDefinition_mutation_response

  """
  update single row of the table: "ActivityDefinition"
  """
  update_ActivityDefinition_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ActivityDefinition_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ActivityDefinition_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ActivityDefinition_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ActivityDefinition_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: ActivityDefinition_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ActivityDefinition_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ActivityDefinition_set_input
    pk_columns: ActivityDefinition_pk_columns_input!
  ): ActivityDefinition

  """
  update multiples rows of table: "ActivityDefinition"
  """
  update_ActivityDefinition_many(
    """updates to execute, in order"""
    updates: [ActivityDefinition_updates!]!
  ): [ActivityDefinition_mutation_response]

  """
  update data of the table: "Comment"
  """
  update_Comment(
    """increments the numeric columns with given value of the filtered values"""
    _inc: Comment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: Comment_set_input

    """filter the rows which have to be updated"""
    where: Comment_bool_exp!
  ): Comment_mutation_response

  """
  update single row of the table: "Comment"
  """
  update_Comment_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: Comment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: Comment_set_input
    pk_columns: Comment_pk_columns_input!
  ): Comment

  """
  update multiples rows of table: "Comment"
  """
  update_Comment_many(
    """updates to execute, in order"""
    updates: [Comment_updates!]!
  ): [Comment_mutation_response]

  """
  update data of the table: "EventLog"
  """
  update_EventLog(
    """increments the numeric columns with given value of the filtered values"""
    _inc: EventLog_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: EventLog_set_input

    """filter the rows which have to be updated"""
    where: EventLog_bool_exp!
  ): EventLog_mutation_response

  """
  update single row of the table: "EventLog"
  """
  update_EventLog_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: EventLog_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: EventLog_set_input
    pk_columns: EventLog_pk_columns_input!
  ): EventLog

  """
  update multiples rows of table: "EventLog"
  """
  update_EventLog_many(
    """updates to execute, in order"""
    updates: [EventLog_updates!]!
  ): [EventLog_mutation_response]

  """
  update data of the table: "File"
  """
  update_File(
    """increments the numeric columns with given value of the filtered values"""
    _inc: File_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: File_set_input

    """filter the rows which have to be updated"""
    where: File_bool_exp!
  ): File_mutation_response

  """
  update single row of the table: "File"
  """
  update_File_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: File_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: File_set_input
    pk_columns: File_pk_columns_input!
  ): File

  """
  update multiples rows of table: "File"
  """
  update_File_many(
    """updates to execute, in order"""
    updates: [File_updates!]!
  ): [File_mutation_response]

  """
  update data of the table: "Form"
  """
  update_Form(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: Form_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: Form_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: Form_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: Form_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: Form_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: Form_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: Form_set_input

    """filter the rows which have to be updated"""
    where: Form_bool_exp!
  ): Form_mutation_response

  """
  update single row of the table: "Form"
  """
  update_Form_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: Form_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: Form_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: Form_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: Form_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: Form_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: Form_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: Form_set_input
    pk_columns: Form_pk_columns_input!
  ): Form

  """
  update multiples rows of table: "Form"
  """
  update_Form_many(
    """updates to execute, in order"""
    updates: [Form_updates!]!
  ): [Form_mutation_response]

  """
  update data of the table: "MemberOnProjects"
  """
  update_MemberOnProjects(
    """increments the numeric columns with given value of the filtered values"""
    _inc: MemberOnProjects_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: MemberOnProjects_set_input

    """filter the rows which have to be updated"""
    where: MemberOnProjects_bool_exp!
  ): MemberOnProjects_mutation_response

  """
  update single row of the table: "MemberOnProjects"
  """
  update_MemberOnProjects_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: MemberOnProjects_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: MemberOnProjects_set_input
    pk_columns: MemberOnProjects_pk_columns_input!
  ): MemberOnProjects

  """
  update multiples rows of table: "MemberOnProjects"
  """
  update_MemberOnProjects_many(
    """updates to execute, in order"""
    updates: [MemberOnProjects_updates!]!
  ): [MemberOnProjects_mutation_response]

  """
  update data of the table: "MemberOnTeams"
  """
  update_MemberOnTeams(
    """increments the numeric columns with given value of the filtered values"""
    _inc: MemberOnTeams_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: MemberOnTeams_set_input

    """filter the rows which have to be updated"""
    where: MemberOnTeams_bool_exp!
  ): MemberOnTeams_mutation_response

  """
  update single row of the table: "MemberOnTeams"
  """
  update_MemberOnTeams_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: MemberOnTeams_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: MemberOnTeams_set_input
    pk_columns: MemberOnTeams_pk_columns_input!
  ): MemberOnTeams

  """
  update multiples rows of table: "MemberOnTeams"
  """
  update_MemberOnTeams_many(
    """updates to execute, in order"""
    updates: [MemberOnTeams_updates!]!
  ): [MemberOnTeams_mutation_response]

  """
  update data of the table: "Organization"
  """
  update_Organization(
    """increments the numeric columns with given value of the filtered values"""
    _inc: Organization_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: Organization_set_input

    """filter the rows which have to be updated"""
    where: Organization_bool_exp!
  ): Organization_mutation_response

  """
  update single row of the table: "Organization"
  """
  update_Organization_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: Organization_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: Organization_set_input
    pk_columns: Organization_pk_columns_input!
  ): Organization

  """
  update multiples rows of table: "Organization"
  """
  update_Organization_many(
    """updates to execute, in order"""
    updates: [Organization_updates!]!
  ): [Organization_mutation_response]

  """
  update data of the table: "Permission"
  """
  update_Permission(
    """increments the numeric columns with given value of the filtered values"""
    _inc: Permission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: Permission_set_input

    """filter the rows which have to be updated"""
    where: Permission_bool_exp!
  ): Permission_mutation_response

  """
  update data of the table: "PermissionGroup"
  """
  update_PermissionGroup(
    """increments the numeric columns with given value of the filtered values"""
    _inc: PermissionGroup_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: PermissionGroup_set_input

    """filter the rows which have to be updated"""
    where: PermissionGroup_bool_exp!
  ): PermissionGroup_mutation_response

  """
  update single row of the table: "PermissionGroup"
  """
  update_PermissionGroup_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: PermissionGroup_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: PermissionGroup_set_input
    pk_columns: PermissionGroup_pk_columns_input!
  ): PermissionGroup

  """
  update multiples rows of table: "PermissionGroup"
  """
  update_PermissionGroup_many(
    """updates to execute, in order"""
    updates: [PermissionGroup_updates!]!
  ): [PermissionGroup_mutation_response]

  """
  update single row of the table: "Permission"
  """
  update_Permission_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: Permission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: Permission_set_input
    pk_columns: Permission_pk_columns_input!
  ): Permission

  """
  update multiples rows of table: "Permission"
  """
  update_Permission_many(
    """updates to execute, in order"""
    updates: [Permission_updates!]!
  ): [Permission_mutation_response]

  """
  update data of the table: "Post"
  """
  update_Post(
    """increments the numeric columns with given value of the filtered values"""
    _inc: Post_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: Post_set_input

    """filter the rows which have to be updated"""
    where: Post_bool_exp!
  ): Post_mutation_response

  """
  update single row of the table: "Post"
  """
  update_Post_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: Post_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: Post_set_input
    pk_columns: Post_pk_columns_input!
  ): Post

  """
  update multiples rows of table: "Post"
  """
  update_Post_many(
    """updates to execute, in order"""
    updates: [Post_updates!]!
  ): [Post_mutation_response]

  """
  update data of the table: "Project"
  """
  update_Project(
    """increments the numeric columns with given value of the filtered values"""
    _inc: Project_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: Project_set_input

    """filter the rows which have to be updated"""
    where: Project_bool_exp!
  ): Project_mutation_response

  """
  update data of the table: "ProjectSettings"
  """
  update_ProjectSettings(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ProjectSettings_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ProjectSettings_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ProjectSettings_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ProjectSettings_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: ProjectSettings_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ProjectSettings_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ProjectSettings_set_input

    """filter the rows which have to be updated"""
    where: ProjectSettings_bool_exp!
  ): ProjectSettings_mutation_response

  """
  update single row of the table: "ProjectSettings"
  """
  update_ProjectSettings_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ProjectSettings_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ProjectSettings_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ProjectSettings_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ProjectSettings_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: ProjectSettings_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ProjectSettings_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ProjectSettings_set_input
    pk_columns: ProjectSettings_pk_columns_input!
  ): ProjectSettings

  """
  update multiples rows of table: "ProjectSettings"
  """
  update_ProjectSettings_many(
    """updates to execute, in order"""
    updates: [ProjectSettings_updates!]!
  ): [ProjectSettings_mutation_response]

  """
  update single row of the table: "Project"
  """
  update_Project_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: Project_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: Project_set_input
    pk_columns: Project_pk_columns_input!
  ): Project

  """
  update multiples rows of table: "Project"
  """
  update_Project_many(
    """updates to execute, in order"""
    updates: [Project_updates!]!
  ): [Project_mutation_response]

  """
  update data of the table: "Resource"
  """
  update_Resource(
    """increments the numeric columns with given value of the filtered values"""
    _inc: Resource_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: Resource_set_input

    """filter the rows which have to be updated"""
    where: Resource_bool_exp!
  ): Resource_mutation_response

  """
  update data of the table: "ResourceItem"
  """
  update_ResourceItem(
    """increments the numeric columns with given value of the filtered values"""
    _inc: ResourceItem_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: ResourceItem_set_input

    """filter the rows which have to be updated"""
    where: ResourceItem_bool_exp!
  ): ResourceItem_mutation_response

  """
  update single row of the table: "ResourceItem"
  """
  update_ResourceItem_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: ResourceItem_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: ResourceItem_set_input
    pk_columns: ResourceItem_pk_columns_input!
  ): ResourceItem

  """
  update multiples rows of table: "ResourceItem"
  """
  update_ResourceItem_many(
    """updates to execute, in order"""
    updates: [ResourceItem_updates!]!
  ): [ResourceItem_mutation_response]

  """
  update single row of the table: "Resource"
  """
  update_Resource_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: Resource_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: Resource_set_input
    pk_columns: Resource_pk_columns_input!
  ): Resource

  """
  update multiples rows of table: "Resource"
  """
  update_Resource_many(
    """updates to execute, in order"""
    updates: [Resource_updates!]!
  ): [Resource_mutation_response]

  """
  update data of the table: "Settings"
  """
  update_Settings(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: Settings_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: Settings_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: Settings_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: Settings_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: Settings_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: Settings_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: Settings_set_input

    """filter the rows which have to be updated"""
    where: Settings_bool_exp!
  ): Settings_mutation_response

  """
  update single row of the table: "Settings"
  """
  update_Settings_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: Settings_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: Settings_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: Settings_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: Settings_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: Settings_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: Settings_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: Settings_set_input
    pk_columns: Settings_pk_columns_input!
  ): Settings

  """
  update multiples rows of table: "Settings"
  """
  update_Settings_many(
    """updates to execute, in order"""
    updates: [Settings_updates!]!
  ): [Settings_mutation_response]

  """
  update data of the table: "Task"
  """
  update_Task(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: Task_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: Task_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: Task_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: Task_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: Task_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: Task_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: Task_set_input

    """filter the rows which have to be updated"""
    where: Task_bool_exp!
  ): Task_mutation_response

  """
  update data of the table: "TaskBoard"
  """
  update_TaskBoard(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: TaskBoard_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: TaskBoard_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: TaskBoard_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: TaskBoard_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: TaskBoard_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: TaskBoard_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: TaskBoard_set_input

    """filter the rows which have to be updated"""
    where: TaskBoard_bool_exp!
  ): TaskBoard_mutation_response

  """
  update data of the table: "TaskBoardSettings"
  """
  update_TaskBoardSettings(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: TaskBoardSettings_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: TaskBoardSettings_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: TaskBoardSettings_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: TaskBoardSettings_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: TaskBoardSettings_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: TaskBoardSettings_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: TaskBoardSettings_set_input

    """filter the rows which have to be updated"""
    where: TaskBoardSettings_bool_exp!
  ): TaskBoardSettings_mutation_response

  """
  update single row of the table: "TaskBoardSettings"
  """
  update_TaskBoardSettings_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: TaskBoardSettings_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: TaskBoardSettings_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: TaskBoardSettings_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: TaskBoardSettings_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: TaskBoardSettings_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: TaskBoardSettings_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: TaskBoardSettings_set_input
    pk_columns: TaskBoardSettings_pk_columns_input!
  ): TaskBoardSettings

  """
  update multiples rows of table: "TaskBoardSettings"
  """
  update_TaskBoardSettings_many(
    """updates to execute, in order"""
    updates: [TaskBoardSettings_updates!]!
  ): [TaskBoardSettings_mutation_response]

  """
  update single row of the table: "TaskBoard"
  """
  update_TaskBoard_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: TaskBoard_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: TaskBoard_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: TaskBoard_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: TaskBoard_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: TaskBoard_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: TaskBoard_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: TaskBoard_set_input
    pk_columns: TaskBoard_pk_columns_input!
  ): TaskBoard

  """
  update multiples rows of table: "TaskBoard"
  """
  update_TaskBoard_many(
    """updates to execute, in order"""
    updates: [TaskBoard_updates!]!
  ): [TaskBoard_mutation_response]

  """
  update data of the table: "TaskDefinition"
  """
  update_TaskDefinition(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: TaskDefinition_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: TaskDefinition_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: TaskDefinition_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: TaskDefinition_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: TaskDefinition_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: TaskDefinition_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: TaskDefinition_set_input

    """filter the rows which have to be updated"""
    where: TaskDefinition_bool_exp!
  ): TaskDefinition_mutation_response

  """
  update data of the table: "TaskDefinitionActivityDefinition"
  """
  update_TaskDefinitionActivityDefinition(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: TaskDefinitionActivityDefinition_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: TaskDefinitionActivityDefinition_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: TaskDefinitionActivityDefinition_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: TaskDefinitionActivityDefinition_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: TaskDefinitionActivityDefinition_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: TaskDefinitionActivityDefinition_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: TaskDefinitionActivityDefinition_set_input

    """filter the rows which have to be updated"""
    where: TaskDefinitionActivityDefinition_bool_exp!
  ): TaskDefinitionActivityDefinition_mutation_response

  """
  update single row of the table: "TaskDefinitionActivityDefinition"
  """
  update_TaskDefinitionActivityDefinition_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: TaskDefinitionActivityDefinition_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: TaskDefinitionActivityDefinition_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: TaskDefinitionActivityDefinition_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: TaskDefinitionActivityDefinition_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: TaskDefinitionActivityDefinition_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: TaskDefinitionActivityDefinition_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: TaskDefinitionActivityDefinition_set_input
    pk_columns: TaskDefinitionActivityDefinition_pk_columns_input!
  ): TaskDefinitionActivityDefinition

  """
  update multiples rows of table: "TaskDefinitionActivityDefinition"
  """
  update_TaskDefinitionActivityDefinition_many(
    """updates to execute, in order"""
    updates: [TaskDefinitionActivityDefinition_updates!]!
  ): [TaskDefinitionActivityDefinition_mutation_response]

  """
  update single row of the table: "TaskDefinition"
  """
  update_TaskDefinition_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: TaskDefinition_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: TaskDefinition_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: TaskDefinition_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: TaskDefinition_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: TaskDefinition_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: TaskDefinition_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: TaskDefinition_set_input
    pk_columns: TaskDefinition_pk_columns_input!
  ): TaskDefinition

  """
  update multiples rows of table: "TaskDefinition"
  """
  update_TaskDefinition_many(
    """updates to execute, in order"""
    updates: [TaskDefinition_updates!]!
  ): [TaskDefinition_mutation_response]

  """
  update single row of the table: "Task"
  """
  update_Task_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: Task_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: Task_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: Task_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: Task_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: Task_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: Task_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: Task_set_input
    pk_columns: Task_pk_columns_input!
  ): Task

  """
  update multiples rows of table: "Task"
  """
  update_Task_many(
    """updates to execute, in order"""
    updates: [Task_updates!]!
  ): [Task_mutation_response]

  """
  update data of the table: "Team"
  """
  update_Team(
    """increments the numeric columns with given value of the filtered values"""
    _inc: Team_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: Team_set_input

    """filter the rows which have to be updated"""
    where: Team_bool_exp!
  ): Team_mutation_response

  """
  update single row of the table: "Team"
  """
  update_Team_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: Team_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: Team_set_input
    pk_columns: Team_pk_columns_input!
  ): Team

  """
  update multiples rows of table: "Team"
  """
  update_Team_many(
    """updates to execute, in order"""
    updates: [Team_updates!]!
  ): [Team_mutation_response]

  """
  update data of the table: "Trigger"
  """
  update_Trigger(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: Trigger_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: Trigger_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: Trigger_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: Trigger_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: Trigger_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: Trigger_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: Trigger_set_input

    """filter the rows which have to be updated"""
    where: Trigger_bool_exp!
  ): Trigger_mutation_response

  """
  update single row of the table: "Trigger"
  """
  update_Trigger_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: Trigger_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: Trigger_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: Trigger_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: Trigger_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: Trigger_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: Trigger_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: Trigger_set_input
    pk_columns: Trigger_pk_columns_input!
  ): Trigger

  """
  update multiples rows of table: "Trigger"
  """
  update_Trigger_many(
    """updates to execute, in order"""
    updates: [Trigger_updates!]!
  ): [Trigger_mutation_response]

  """
  update data of the table: "User"
  """
  update_User(
    """increments the numeric columns with given value of the filtered values"""
    _inc: User_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: User_set_input

    """filter the rows which have to be updated"""
    where: User_bool_exp!
  ): User_mutation_response

  """
  update data of the table: "UserPermission"
  """
  update_UserPermission(
    """increments the numeric columns with given value of the filtered values"""
    _inc: UserPermission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: UserPermission_set_input

    """filter the rows which have to be updated"""
    where: UserPermission_bool_exp!
  ): UserPermission_mutation_response

  """
  update single row of the table: "UserPermission"
  """
  update_UserPermission_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: UserPermission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: UserPermission_set_input
    pk_columns: UserPermission_pk_columns_input!
  ): UserPermission

  """
  update multiples rows of table: "UserPermission"
  """
  update_UserPermission_many(
    """updates to execute, in order"""
    updates: [UserPermission_updates!]!
  ): [UserPermission_mutation_response]

  """
  update data of the table: "UserSetting"
  """
  update_UserSetting(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: UserSetting_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: UserSetting_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: UserSetting_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: UserSetting_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: UserSetting_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: UserSetting_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: UserSetting_set_input

    """filter the rows which have to be updated"""
    where: UserSetting_bool_exp!
  ): UserSetting_mutation_response

  """
  update single row of the table: "UserSetting"
  """
  update_UserSetting_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: UserSetting_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: UserSetting_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: UserSetting_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: UserSetting_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: UserSetting_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: UserSetting_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: UserSetting_set_input
    pk_columns: UserSetting_pk_columns_input!
  ): UserSetting

  """
  update multiples rows of table: "UserSetting"
  """
  update_UserSetting_many(
    """updates to execute, in order"""
    updates: [UserSetting_updates!]!
  ): [UserSetting_mutation_response]

  """
  update single row of the table: "User"
  """
  update_User_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: User_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: User_set_input
    pk_columns: User_pk_columns_input!
  ): User

  """
  update multiples rows of table: "User"
  """
  update_User_many(
    """updates to execute, in order"""
    updates: [User_updates!]!
  ): [User_mutation_response]

  """
  update data of the table: "_prisma_migrations"
  """
  update__prisma_migrations(
    """increments the numeric columns with given value of the filtered values"""
    _inc: _prisma_migrations_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: _prisma_migrations_set_input

    """filter the rows which have to be updated"""
    where: _prisma_migrations_bool_exp!
  ): _prisma_migrations_mutation_response

  """
  update single row of the table: "_prisma_migrations"
  """
  update__prisma_migrations_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: _prisma_migrations_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: _prisma_migrations_set_input
    pk_columns: _prisma_migrations_pk_columns_input!
  ): _prisma_migrations

  """
  update multiples rows of table: "_prisma_migrations"
  """
  update__prisma_migrations_many(
    """updates to execute, in order"""
    updates: [_prisma_migrations_updates!]!
  ): [_prisma_migrations_mutation_response]
}

"""column ordering options"""
enum order_by {
  """in ascending order, nulls last"""
  asc

  """in ascending order, nulls first"""
  asc_nulls_first

  """in ascending order, nulls last"""
  asc_nulls_last

  """in descending order, nulls first"""
  desc

  """in descending order, nulls first"""
  desc_nulls_first

  """in descending order, nulls last"""
  desc_nulls_last
}

type query_root {
  """
  fetch data from the table: "Action"
  """
  Action_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Action_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Action_order_by!]

    """filter the rows returned"""
    where: Action_bool_exp
  ): ActionConnection!

  """
  fetch data from the table: "ActivityDefinition"
  """
  ActivityDefinition_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [ActivityDefinition_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [ActivityDefinition_order_by!]

    """filter the rows returned"""
    where: ActivityDefinition_bool_exp
  ): ActivityDefinitionConnection!

  """
  fetch data from the table: "Comment"
  """
  Comment_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Comment_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Comment_order_by!]

    """filter the rows returned"""
    where: Comment_bool_exp
  ): CommentConnection!

  """
  fetch data from the table: "EventLog"
  """
  EventLog_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): EventLogConnection!

  """
  fetch data from the table: "File"
  """
  File_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [File_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [File_order_by!]

    """filter the rows returned"""
    where: File_bool_exp
  ): FileConnection!

  """
  fetch data from the table: "Form"
  """
  Form_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Form_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Form_order_by!]

    """filter the rows returned"""
    where: Form_bool_exp
  ): FormConnection!

  """An array relationship connection"""
  MemberOnProjects_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [MemberOnProjects_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnProjects_order_by!]

    """filter the rows returned"""
    where: MemberOnProjects_bool_exp
  ): MemberOnProjectsConnection!

  """An array relationship connection"""
  MemberOnTeams_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [MemberOnTeams_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnTeams_order_by!]

    """filter the rows returned"""
    where: MemberOnTeams_bool_exp
  ): MemberOnTeamsConnection!

  """
  fetch data from the table: "Organization"
  """
  Organization_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Organization_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Organization_order_by!]

    """filter the rows returned"""
    where: Organization_bool_exp
  ): OrganizationConnection!

  """
  fetch data from the table: "PermissionGroup"
  """
  PermissionGroup_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [PermissionGroup_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [PermissionGroup_order_by!]

    """filter the rows returned"""
    where: PermissionGroup_bool_exp
  ): PermissionGroupConnection!

  """
  fetch data from the table: "Permission"
  """
  Permission_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Permission_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Permission_order_by!]

    """filter the rows returned"""
    where: Permission_bool_exp
  ): PermissionConnection!

  """
  fetch data from the table: "Post"
  """
  Post_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Post_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Post_order_by!]

    """filter the rows returned"""
    where: Post_bool_exp
  ): PostConnection!

  """An array relationship connection"""
  ProjectSettings_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [ProjectSettings_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [ProjectSettings_order_by!]

    """filter the rows returned"""
    where: ProjectSettings_bool_exp
  ): ProjectSettingsConnection!

  """
  fetch data from the table: "Project"
  """
  Project_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Project_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Project_order_by!]

    """filter the rows returned"""
    where: Project_bool_exp
  ): ProjectConnection!

  """
  fetch data from the table: "ResourceItem"
  """
  ResourceItem_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [ResourceItem_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [ResourceItem_order_by!]

    """filter the rows returned"""
    where: ResourceItem_bool_exp
  ): ResourceItemConnection!

  """
  fetch data from the table: "Resource"
  """
  Resource_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Resource_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Resource_order_by!]

    """filter the rows returned"""
    where: Resource_bool_exp
  ): ResourceConnection!

  """An array relationship connection"""
  Settings_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Settings_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Settings_order_by!]

    """filter the rows returned"""
    where: Settings_bool_exp
  ): SettingsConnection!

  """An array relationship connection"""
  TaskBoardSettings_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [TaskBoardSettings_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [TaskBoardSettings_order_by!]

    """filter the rows returned"""
    where: TaskBoardSettings_bool_exp
  ): TaskBoardSettingsConnection!

  """
  fetch data from the table: "TaskBoard"
  """
  TaskBoard_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [TaskBoard_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [TaskBoard_order_by!]

    """filter the rows returned"""
    where: TaskBoard_bool_exp
  ): TaskBoardConnection!

  """
  fetch data from the table: "TaskDefinitionActivityDefinition"
  """
  TaskDefinitionActivityDefinition_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [TaskDefinitionActivityDefinition_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinitionActivityDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinitionActivityDefinition_bool_exp
  ): TaskDefinitionActivityDefinitionConnection!

  """
  fetch data from the table: "TaskDefinition"
  """
  TaskDefinition_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [TaskDefinition_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): TaskDefinitionConnection!

  """
  fetch data from the table: "Task"
  """
  Task_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Task_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): TaskConnection!

  """
  fetch data from the table: "Team"
  """
  Team_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Team_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Team_order_by!]

    """filter the rows returned"""
    where: Team_bool_exp
  ): TeamConnection!

  """
  fetch data from the table: "Trigger"
  """
  Trigger_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Trigger_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Trigger_order_by!]

    """filter the rows returned"""
    where: Trigger_bool_exp
  ): TriggerConnection!

  """
  fetch data from the table: "UserPermission"
  """
  UserPermission_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [UserPermission_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [UserPermission_order_by!]

    """filter the rows returned"""
    where: UserPermission_bool_exp
  ): UserPermissionConnection!

  """
  fetch data from the table: "UserSetting"
  """
  UserSetting_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [UserSetting_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [UserSetting_order_by!]

    """filter the rows returned"""
    where: UserSetting_bool_exp
  ): UserSettingConnection!

  """
  fetch data from the table: "User"
  """
  User_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [User_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [User_order_by!]

    """filter the rows returned"""
    where: User_bool_exp
  ): UserConnection!

  """
  fetch data from the table: "_prisma_migrations"
  """
  _prisma_migrations_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [_prisma_migrations_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [_prisma_migrations_order_by!]

    """filter the rows returned"""
    where: _prisma_migrations_bool_exp
  ): _prisma_migrationsConnection!
  node(
    """A globally unique id"""
    id: ID!
  ): Node
}

type subscription_root {
  """
  fetch data from the table: "Action"
  """
  Action_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Action_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Action_order_by!]

    """filter the rows returned"""
    where: Action_bool_exp
  ): ActionConnection!

  """
  fetch data from the table: "ActivityDefinition"
  """
  ActivityDefinition_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [ActivityDefinition_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [ActivityDefinition_order_by!]

    """filter the rows returned"""
    where: ActivityDefinition_bool_exp
  ): ActivityDefinitionConnection!

  """
  fetch data from the table: "Comment"
  """
  Comment_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Comment_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Comment_order_by!]

    """filter the rows returned"""
    where: Comment_bool_exp
  ): CommentConnection!

  """
  fetch data from the table: "EventLog"
  """
  EventLog_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): EventLogConnection!

  """
  fetch data from the table: "File"
  """
  File_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [File_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [File_order_by!]

    """filter the rows returned"""
    where: File_bool_exp
  ): FileConnection!

  """
  fetch data from the table: "Form"
  """
  Form_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Form_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Form_order_by!]

    """filter the rows returned"""
    where: Form_bool_exp
  ): FormConnection!

  """An array relationship connection"""
  MemberOnProjects_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [MemberOnProjects_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnProjects_order_by!]

    """filter the rows returned"""
    where: MemberOnProjects_bool_exp
  ): MemberOnProjectsConnection!

  """An array relationship connection"""
  MemberOnTeams_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [MemberOnTeams_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnTeams_order_by!]

    """filter the rows returned"""
    where: MemberOnTeams_bool_exp
  ): MemberOnTeamsConnection!

  """
  fetch data from the table: "Organization"
  """
  Organization_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Organization_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Organization_order_by!]

    """filter the rows returned"""
    where: Organization_bool_exp
  ): OrganizationConnection!

  """
  fetch data from the table: "PermissionGroup"
  """
  PermissionGroup_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [PermissionGroup_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [PermissionGroup_order_by!]

    """filter the rows returned"""
    where: PermissionGroup_bool_exp
  ): PermissionGroupConnection!

  """
  fetch data from the table: "Permission"
  """
  Permission_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Permission_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Permission_order_by!]

    """filter the rows returned"""
    where: Permission_bool_exp
  ): PermissionConnection!

  """
  fetch data from the table: "Post"
  """
  Post_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Post_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Post_order_by!]

    """filter the rows returned"""
    where: Post_bool_exp
  ): PostConnection!

  """An array relationship connection"""
  ProjectSettings_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [ProjectSettings_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [ProjectSettings_order_by!]

    """filter the rows returned"""
    where: ProjectSettings_bool_exp
  ): ProjectSettingsConnection!

  """
  fetch data from the table: "Project"
  """
  Project_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Project_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Project_order_by!]

    """filter the rows returned"""
    where: Project_bool_exp
  ): ProjectConnection!

  """
  fetch data from the table: "ResourceItem"
  """
  ResourceItem_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [ResourceItem_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [ResourceItem_order_by!]

    """filter the rows returned"""
    where: ResourceItem_bool_exp
  ): ResourceItemConnection!

  """
  fetch data from the table: "Resource"
  """
  Resource_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Resource_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Resource_order_by!]

    """filter the rows returned"""
    where: Resource_bool_exp
  ): ResourceConnection!

  """An array relationship connection"""
  Settings_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Settings_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Settings_order_by!]

    """filter the rows returned"""
    where: Settings_bool_exp
  ): SettingsConnection!

  """An array relationship connection"""
  TaskBoardSettings_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [TaskBoardSettings_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [TaskBoardSettings_order_by!]

    """filter the rows returned"""
    where: TaskBoardSettings_bool_exp
  ): TaskBoardSettingsConnection!

  """
  fetch data from the table: "TaskBoard"
  """
  TaskBoard_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [TaskBoard_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [TaskBoard_order_by!]

    """filter the rows returned"""
    where: TaskBoard_bool_exp
  ): TaskBoardConnection!

  """
  fetch data from the table: "TaskDefinitionActivityDefinition"
  """
  TaskDefinitionActivityDefinition_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [TaskDefinitionActivityDefinition_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinitionActivityDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinitionActivityDefinition_bool_exp
  ): TaskDefinitionActivityDefinitionConnection!

  """
  fetch data from the table: "TaskDefinition"
  """
  TaskDefinition_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [TaskDefinition_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): TaskDefinitionConnection!

  """
  fetch data from the table: "Task"
  """
  Task_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Task_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): TaskConnection!

  """
  fetch data from the table: "Team"
  """
  Team_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Team_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Team_order_by!]

    """filter the rows returned"""
    where: Team_bool_exp
  ): TeamConnection!

  """
  fetch data from the table: "Trigger"
  """
  Trigger_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Trigger_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Trigger_order_by!]

    """filter the rows returned"""
    where: Trigger_bool_exp
  ): TriggerConnection!

  """
  fetch data from the table: "UserPermission"
  """
  UserPermission_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [UserPermission_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [UserPermission_order_by!]

    """filter the rows returned"""
    where: UserPermission_bool_exp
  ): UserPermissionConnection!

  """
  fetch data from the table: "UserSetting"
  """
  UserSetting_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [UserSetting_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [UserSetting_order_by!]

    """filter the rows returned"""
    where: UserSetting_bool_exp
  ): UserSettingConnection!

  """
  fetch data from the table: "User"
  """
  User_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [User_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [User_order_by!]

    """filter the rows returned"""
    where: User_bool_exp
  ): UserConnection!

  """
  fetch data from the table: "_prisma_migrations"
  """
  _prisma_migrations_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [_prisma_migrations_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [_prisma_migrations_order_by!]

    """filter the rows returned"""
    where: _prisma_migrations_bool_exp
  ): _prisma_migrationsConnection!
  node(
    """A globally unique id"""
    id: ID!
  ): Node
}

scalar timestamp

"""
Boolean expression to compare columns of type "timestamp". All fields are combined with logical 'AND'.
"""
input timestamp_comparison_exp {
  _eq: timestamp
  _gt: timestamp
  _gte: timestamp
  _in: [timestamp!]
  _is_null: Boolean
  _lt: timestamp
  _lte: timestamp
  _neq: timestamp
  _nin: [timestamp!]
}

scalar timestamptz

"""
Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

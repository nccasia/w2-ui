"""
Create a new address for the customer. 

Requires one of the following permissions: AUTHENTICATED_USER.
"""
type AccountAddressCreate {
  """A user instance for which the address was created."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  address: Address
}

"""
Delete an address of the logged-in user. Requires one of the following permissions: MANAGE_USERS, IS_OWNER.
"""
type AccountAddressDelete {
  """A user instance for which the address was deleted."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  address: Address
}

"""
Updates an address of the logged-in user. Requires one of the following permissions: MANAGE_USERS, IS_OWNER.
"""
type AccountAddressUpdate {
  """A user object for which the address was edited."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  address: Address
}

"""
Remove user account. 

Requires one of the following permissions: AUTHENTICATED_USER.
"""
type AccountDelete {
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  user: User
}

type AccountError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: AccountErrorCode!

  """A type of address that causes the error."""
  addressType: AddressTypeEnum
}

"""An enumeration."""
enum AccountErrorCode {
  ACTIVATE_OWN_ACCOUNT
  ACTIVATE_SUPERUSER_ACCOUNT
  DUPLICATED_INPUT_ITEM
  DEACTIVATE_OWN_ACCOUNT
  DEACTIVATE_SUPERUSER_ACCOUNT
  DELETE_NON_STAFF_USER
  DELETE_OWN_ACCOUNT
  DELETE_STAFF_ACCOUNT
  DELETE_SUPERUSER_ACCOUNT
  GRAPHQL_ERROR
  INACTIVE
  INVALID
  INVALID_PASSWORD
  LEFT_NOT_MANAGEABLE_PERMISSION
  INVALID_CREDENTIALS
  NOT_FOUND
  OUT_OF_SCOPE_USER
  OUT_OF_SCOPE_GROUP
  OUT_OF_SCOPE_PERMISSION
  PASSWORD_ENTIRELY_NUMERIC
  PASSWORD_TOO_COMMON
  PASSWORD_TOO_SHORT
  PASSWORD_TOO_SIMILAR
  REQUIRED
  UNIQUE
  JWT_SIGNATURE_EXPIRED
  JWT_INVALID_TOKEN
  JWT_DECODE_ERROR
  JWT_MISSING_TOKEN
  JWT_INVALID_CSRF_TOKEN
  CHANNEL_INACTIVE
  MISSING_CHANNEL_SLUG
  ACCOUNT_NOT_CONFIRMED
}

input AccountInput {
  """Given name."""
  firstName: String

  """Family name."""
  lastName: String

  """User language code."""
  languageCode: LanguageCodeEnum

  """Billing address of the customer."""
  defaultBillingAddress: AddressInput

  """Shipping address of the customer."""
  defaultShippingAddress: AddressInput
}

"""Register a new user."""
type AccountRegister {
  """Informs whether users need to confirm their email address."""
  requiresConfirmation: Boolean
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  user: User
}

input AccountRegisterInput {
  """Given name."""
  firstName: String

  """Family name."""
  lastName: String

  """User language code."""
  languageCode: LanguageCodeEnum

  """The email address of the user."""
  email: String!

  """Password."""
  password: String!

  """Base of frontend URL that will be needed to create confirmation URL."""
  redirectUrl: String

  """User public metadata."""
  metadata: [MetadataInput!]

  """
  Slug of a channel which will be used to notify users. Optional when only one channel exists.
  """
  channel: String
}

"""
Sends an email with the account removal link for the logged-in user. 

Requires one of the following permissions: AUTHENTICATED_USER.
"""
type AccountRequestDeletion {
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""
Sets a default address for the authenticated user. 

Requires one of the following permissions: AUTHENTICATED_USER.
"""
type AccountSetDefaultAddress {
  """An updated user instance."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""
Updates the account of the logged-in user. 

Requires one of the following permissions: AUTHENTICATED_USER.
"""
type AccountUpdate {
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  user: User
}

"""Represents user address data."""
type Address implements Node {
  id: ID!
  firstName: String!
  lastName: String!
  companyName: String!
  streetAddress1: String!
  streetAddress2: String!
  city: String!
  cityArea: String!
  postalCode: String!

  """Shop's default country."""
  country: CountryDisplay!
  countryArea: String!
  phone: String

  """Address is user's default shipping address."""
  isDefaultShippingAddress: Boolean

  """Address is user's default billing address."""
  isDefaultBillingAddress: Boolean
}

"""
Creates user address. 

Requires one of the following permissions: MANAGE_USERS.
"""
type AddressCreate {
  """A user instance for which the address was created."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  address: Address
}

"""
Event sent when new address is created.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type AddressCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The address the event relates to."""
  address: Address
}

"""
Deletes an address. 

Requires one of the following permissions: MANAGE_USERS.
"""
type AddressDelete {
  """A user instance for which the address was deleted."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  address: Address
}

"""
Event sent when address is deleted.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type AddressDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The address the event relates to."""
  address: Address
}

input AddressInput {
  """Given name."""
  firstName: String

  """Family name."""
  lastName: String

  """Company or organization."""
  companyName: String

  """Address."""
  streetAddress1: String

  """Address."""
  streetAddress2: String

  """City."""
  city: String

  """District."""
  cityArea: String

  """Postal code."""
  postalCode: String

  """Country."""
  country: CountryCode

  """State or province."""
  countryArea: String

  """Phone number."""
  phone: String
}

"""
Sets a default address for the given user. 

Requires one of the following permissions: MANAGE_USERS.
"""
type AddressSetDefault {
  """An updated user instance."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""An enumeration."""
enum AddressTypeEnum {
  BILLING
  SHIPPING
}

"""
Updates an address. 

Requires one of the following permissions: MANAGE_USERS.
"""
type AddressUpdate {
  """A user object for which the address was edited."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  address: Address
}

"""
Event sent when address is updated.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type AddressUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The address the event relates to."""
  address: Address
}

type AddressValidationData {
  countryCode: String!
  countryName: String!
  addressFormat: String!
  addressLatinFormat: String!
  allowedFields: [String!]!
  requiredFields: [String!]!
  upperFields: [String!]!
  countryAreaType: String!
  countryAreaChoices: [ChoiceValue!]!
  cityType: String!
  cityChoices: [ChoiceValue!]!
  cityAreaType: String!
  cityAreaChoices: [ChoiceValue!]!
  postalCodeType: String!
  postalCodeMatchers: [String!]!
  postalCodeExamples: [String!]!
  postalCodePrefix: String!
}

"""Represents allocation."""
type Allocation implements Node {
  id: ID!

  """
  Quantity allocated for orders.
  
  Requires one of the following permissions: MANAGE_PRODUCTS, MANAGE_ORDERS.
  """
  quantity: Int!

  """
  The warehouse were items were allocated.
  
  Requires one of the following permissions: MANAGE_PRODUCTS, MANAGE_ORDERS.
  """
  warehouse: Warehouse!
}

"""
Determine the allocation strategy for the channel.

    PRIORITIZE_SORTING_ORDER - allocate stocks according to the warehouses' order
    within the channel

    PRIORITIZE_HIGH_STOCK - allocate stock in a warehouse with the most stock
    
"""
enum AllocationStrategyEnum {
  PRIORITIZE_SORTING_ORDER
  PRIORITIZE_HIGH_STOCK
}

"""Represents app data."""
type App implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata

  """List of the app's permissions."""
  permissions: [Permission!]

  """The date and time when the app was created."""
  created: DateTime

  """Determine if app will be set active or not."""
  isActive: Boolean

  """Name of the app."""
  name: String

  """Type of the app."""
  type: AppTypeEnum

  """
  Last 4 characters of the tokens.
  
  Requires one of the following permissions: MANAGE_APPS, OWNER.
  """
  tokens: [AppToken!]

  """
  List of webhooks assigned to this app.
  
  Requires one of the following permissions: MANAGE_APPS, OWNER.
  """
  webhooks: [Webhook!]

  """Description of this app."""
  aboutApp: String

  """Description of the data privacy defined for this app."""
  dataPrivacy: String @deprecated(reason: "This field will be removed in Saleor 4.0. Use `dataPrivacyUrl` instead.")

  """URL to details about the privacy policy on the app owner page."""
  dataPrivacyUrl: String

  """Homepage of the app."""
  homepageUrl: String

  """Support page for the app."""
  supportUrl: String

  """URL to iframe with the configuration for the app."""
  configurationUrl: String @deprecated(reason: "This field will be removed in Saleor 4.0. Use `appUrl` instead.")

  """URL to iframe with the app."""
  appUrl: String

  """
  URL to manifest used during app's installation.
  
  Added in Saleor 3.5.
  """
  manifestUrl: String

  """Version number of the app."""
  version: String

  """JWT token used to authenticate by thridparty app."""
  accessToken: String

  """
  App's dashboard extensions.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  extensions: [AppExtension!]!
}

"""
Activate the app. 

Requires one of the following permissions: MANAGE_APPS.
"""
type AppActivate {
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
  app: App
}

type AppCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [AppCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type AppCountableEdge {
  """The item at the end of the edge."""
  node: App!

  """A cursor for use in pagination."""
  cursor: String!
}

"""
Creates a new app. Requires the following permissions: AUTHENTICATED_STAFF_USER and MANAGE_APPS.
"""
type AppCreate {
  """The newly created authentication token."""
  authToken: String
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
  app: App
}

"""
Deactivate the app. 

Requires one of the following permissions: MANAGE_APPS.
"""
type AppDeactivate {
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
  app: App
}

"""
Deletes an app. 

Requires one of the following permissions: MANAGE_APPS.
"""
type AppDelete {
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
  app: App
}

"""
Delete failed installation. 

Requires one of the following permissions: MANAGE_APPS.
"""
type AppDeleteFailedInstallation {
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
  appInstallation: AppInstallation
}

"""
Event sent when app is deleted.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type AppDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The application the event relates to."""
  app: App
}

type AppError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: AppErrorCode!

  """List of permissions which causes the error."""
  permissions: [PermissionEnum!]
}

"""An enumeration."""
enum AppErrorCode {
  FORBIDDEN
  GRAPHQL_ERROR
  INVALID
  INVALID_STATUS
  INVALID_PERMISSION
  INVALID_URL_FORMAT
  INVALID_MANIFEST_FORMAT
  MANIFEST_URL_CANT_CONNECT
  NOT_FOUND
  REQUIRED
  UNIQUE
  OUT_OF_SCOPE_APP
  OUT_OF_SCOPE_PERMISSION
}

"""Represents app data."""
type AppExtension implements Node {
  id: ID!

  """List of the app extension's permissions."""
  permissions: [Permission!]!

  """Label of the extension to show in the dashboard."""
  label: String!

  """URL of a view where extension's iframe is placed."""
  url: String!

  """Place where given extension will be mounted."""
  mount: AppExtensionMountEnum!

  """Type of way how app extension will be opened."""
  target: AppExtensionTargetEnum!
  app: App!

  """JWT token used to authenticate by thridparty app extension."""
  accessToken: String
}

type AppExtensionCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [AppExtensionCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type AppExtensionCountableEdge {
  """The item at the end of the edge."""
  node: AppExtension!

  """A cursor for use in pagination."""
  cursor: String!
}

input AppExtensionFilterInput {
  mount: [AppExtensionMountEnum!]
  target: AppExtensionTargetEnum
}

"""All places where app extension can be mounted."""
enum AppExtensionMountEnum {
  CUSTOMER_OVERVIEW_CREATE
  CUSTOMER_OVERVIEW_MORE_ACTIONS
  CUSTOMER_DETAILS_MORE_ACTIONS
  PRODUCT_OVERVIEW_CREATE
  PRODUCT_OVERVIEW_MORE_ACTIONS
  PRODUCT_DETAILS_MORE_ACTIONS
  NAVIGATION_CATALOG
  NAVIGATION_ORDERS
  NAVIGATION_CUSTOMERS
  NAVIGATION_DISCOUNTS
  NAVIGATION_TRANSLATIONS
  NAVIGATION_PAGES
  ORDER_DETAILS_MORE_ACTIONS
  ORDER_OVERVIEW_CREATE
  ORDER_OVERVIEW_MORE_ACTIONS
}

"""
All available ways of opening an app extension.

    POPUP - app's extension will be mounted as a popup window
    APP_PAGE - redirect to app's page
    
"""
enum AppExtensionTargetEnum {
  POPUP
  APP_PAGE
}

"""
Fetch and validate manifest. 

Requires one of the following permissions: MANAGE_APPS.
"""
type AppFetchManifest {
  manifest: Manifest
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
}

input AppFilterInput {
  search: String
  isActive: Boolean
  type: AppTypeEnum
}

input AppInput {
  """Name of the app."""
  name: String

  """List of permission code names to assign to this app."""
  permissions: [PermissionEnum!]
}

"""
Install new app by using app manifest. Requires the following permissions: AUTHENTICATED_STAFF_USER and MANAGE_APPS.
"""
type AppInstall {
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
  appInstallation: AppInstallation
}

input AppInstallInput {
  """Name of the app to install."""
  appName: String

  """Url to app's manifest in JSON format."""
  manifestUrl: String

  """Determine if app will be set active or not."""
  activateAfterInstallation: Boolean = true

  """List of permission code names to assign to this app."""
  permissions: [PermissionEnum!]
}

"""Represents ongoing installation of app."""
type AppInstallation implements Node & Job {
  id: ID!

  """Job status."""
  status: JobStatusEnum!

  """Created date time of job in ISO 8601 format."""
  createdAt: DateTime!

  """Date time of job last update in ISO 8601 format."""
  updatedAt: DateTime!

  """Job message."""
  message: String
  appName: String!
  manifestUrl: String!
}

"""
Event sent when new app is installed.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type AppInstalled implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The application the event relates to."""
  app: App
}

type AppManifestExtension {
  """List of the app extension's permissions."""
  permissions: [Permission!]!

  """Label of the extension to show in the dashboard."""
  label: String!

  """URL of a view where extension's iframe is placed."""
  url: String!

  """Place where given extension will be mounted."""
  mount: AppExtensionMountEnum!

  """Type of way how app extension will be opened."""
  target: AppExtensionTargetEnum!
}

type AppManifestWebhook {
  """The name of the webhook."""
  name: String!

  """The asynchronous events that webhook wants to subscribe."""
  asyncEvents: [WebhookEventTypeAsyncEnum!]

  """The synchronous events that webhook wants to subscribe."""
  syncEvents: [WebhookEventTypeSyncEnum!]

  """Subscription query of a webhook"""
  query: String!

  """The url to receive the payload."""
  targetUrl: String!
}

"""
Retry failed installation of new app. 

Requires one of the following permissions: MANAGE_APPS.
"""
type AppRetryInstall {
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
  appInstallation: AppInstallation
}

enum AppSortField {
  """Sort apps by name."""
  NAME

  """Sort apps by creation date."""
  CREATION_DATE
}

input AppSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort apps by the selected field."""
  field: AppSortField!
}

"""
Event sent when app status has changed.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type AppStatusChanged implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The application the event relates to."""
  app: App
}

"""Represents token data."""
type AppToken implements Node {
  id: ID!

  """Name of the authenticated token."""
  name: String

  """Last 4 characters of the token."""
  authToken: String
}

"""
Creates a new token. 

Requires one of the following permissions: MANAGE_APPS.
"""
type AppTokenCreate {
  """The newly created authentication token."""
  authToken: String
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
  appToken: AppToken
}

"""
Deletes an authentication token assigned to app. 

Requires one of the following permissions: MANAGE_APPS.
"""
type AppTokenDelete {
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
  appToken: AppToken
}

input AppTokenInput {
  """Name of the token."""
  name: String

  """ID of app."""
  app: ID!
}

"""Verify provided app token."""
type AppTokenVerify {
  """Determine if token is valid or not."""
  valid: Boolean!
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
}

"""Enum determining type of your App."""
enum AppTypeEnum {
  """
  Local Saleor App. The app is fully manageable from dashboard. You can change assigned permissions, add webhooks, or authentication token
  """
  LOCAL

  """
  Third party external App. Installation is fully automated. Saleor uses a defined App manifest to gather all required information.
  """
  THIRDPARTY
}

"""
Updates an existing app. 

Requires one of the following permissions: MANAGE_APPS.
"""
type AppUpdate {
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
  app: App
}

"""
Event sent when app is updated.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type AppUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The application the event relates to."""
  app: App
}

"""An enumeration."""
enum AreaUnitsEnum {
  SQ_CM
  SQ_M
  SQ_KM
  SQ_FT
  SQ_YD
  SQ_INCH
}

"""
Assigns storefront's navigation menus. 

Requires one of the following permissions: MANAGE_MENUS, MANAGE_SETTINGS.
"""
type AssignNavigation {
  """Assigned navigation menu."""
  menu: Menu
  menuErrors: [MenuError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MenuError!]!
}

"""
Represents assigned attribute to variant with variant selection attached.

Added in Saleor 3.1.
"""
type AssignedVariantAttribute {
  """Attribute assigned to variant."""
  attribute: Attribute!

  """
  Determines, whether assigned attribute is allowed for variant selection. Supported variant types for variant selection are: ['dropdown', 'boolean', 'swatch', 'numeric']
  """
  variantSelection: Boolean!
}

"""
Custom attribute of a product. Attributes can be assigned to products and variants at the product type level.
"""
type Attribute implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata

  """The input type to use for entering attribute values in the dashboard."""
  inputType: AttributeInputTypeEnum

  """The entity type which can be used as a reference."""
  entityType: AttributeEntityTypeEnum

  """Name of an attribute displayed in the interface."""
  name: String

  """Internal representation of an attribute name."""
  slug: String

  """The attribute type."""
  type: AttributeTypeEnum

  """The unit of attribute values."""
  unit: MeasurementUnitsEnum

  """List of attribute's values."""
  choices(
    """Sort attribute choices."""
    sortBy: AttributeChoicesSortingInput

    """Filtering options for attribute choices."""
    filter: AttributeValueFilterInput

    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): AttributeValueCountableConnection

  """
  Whether the attribute requires values to be passed or not. Requires one of the following permissions: MANAGE_PAGES, MANAGE_PAGE_TYPES_AND_ATTRIBUTES, MANAGE_PRODUCTS, MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES.
  """
  valueRequired: Boolean!

  """
  Whether the attribute should be visible or not in storefront. Requires one of the following permissions: MANAGE_PAGES, MANAGE_PAGE_TYPES_AND_ATTRIBUTES, MANAGE_PRODUCTS, MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES.
  """
  visibleInStorefront: Boolean!

  """
  Whether the attribute can be filtered in storefront. Requires one of the following permissions: MANAGE_PAGES, MANAGE_PAGE_TYPES_AND_ATTRIBUTES, MANAGE_PRODUCTS, MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES.
  """
  filterableInStorefront: Boolean!

  """
  Whether the attribute can be filtered in dashboard. Requires one of the following permissions: MANAGE_PAGES, MANAGE_PAGE_TYPES_AND_ATTRIBUTES, MANAGE_PRODUCTS, MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES.
  """
  filterableInDashboard: Boolean!

  """
  Whether the attribute can be displayed in the admin product list. Requires one of the following permissions: MANAGE_PAGES, MANAGE_PAGE_TYPES_AND_ATTRIBUTES, MANAGE_PRODUCTS, MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES.
  """
  availableInGrid: Boolean!

  """
  The position of the attribute in the storefront navigation (0 by default). Requires one of the following permissions: MANAGE_PAGES, MANAGE_PAGE_TYPES_AND_ATTRIBUTES, MANAGE_PRODUCTS, MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES.
  """
  storefrontSearchPosition: Int!

  """Returns translated attribute fields for the given language code."""
  translation(
    """A language code to return the translation for attribute."""
    languageCode: LanguageCodeEnum!
  ): AttributeTranslation

  """Flag indicating that attribute has predefined choices."""
  withChoices: Boolean!
  productTypes(
    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): ProductTypeCountableConnection!
  productVariantTypes(
    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): ProductTypeCountableConnection!
}

"""
Deletes attributes. 

Requires one of the following permissions: MANAGE_PAGE_TYPES_AND_ATTRIBUTES.
"""
type AttributeBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  attributeErrors: [AttributeError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AttributeError!]!
}

enum AttributeChoicesSortField {
  """Sort attribute choice by name."""
  NAME

  """Sort attribute choice by slug."""
  SLUG
}

input AttributeChoicesSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort attribute choices by the selected field."""
  field: AttributeChoicesSortField!
}

type AttributeCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [AttributeCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type AttributeCountableEdge {
  """The item at the end of the edge."""
  node: Attribute!

  """A cursor for use in pagination."""
  cursor: String!
}

"""Creates an attribute."""
type AttributeCreate {
  attribute: Attribute
  attributeErrors: [AttributeError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AttributeError!]!
}

input AttributeCreateInput {
  """The input type to use for entering attribute values in the dashboard."""
  inputType: AttributeInputTypeEnum

  """The entity type which can be used as a reference."""
  entityType: AttributeEntityTypeEnum

  """Name of an attribute displayed in the interface."""
  name: String!

  """Internal representation of an attribute name."""
  slug: String

  """The attribute type."""
  type: AttributeTypeEnum!

  """The unit of attribute values."""
  unit: MeasurementUnitsEnum

  """List of attribute's values."""
  values: [AttributeValueCreateInput!]

  """Whether the attribute requires values to be passed or not."""
  valueRequired: Boolean

  """Whether the attribute is for variants only."""
  isVariantOnly: Boolean

  """Whether the attribute should be visible or not in storefront."""
  visibleInStorefront: Boolean

  """Whether the attribute can be filtered in storefront."""
  filterableInStorefront: Boolean

  """Whether the attribute can be filtered in dashboard."""
  filterableInDashboard: Boolean

  """
  The position of the attribute in the storefront navigation (0 by default).
  """
  storefrontSearchPosition: Int

  """Whether the attribute can be displayed in the admin product list."""
  availableInGrid: Boolean
}

"""
Event sent when new attribute is created.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type AttributeCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The attribute the event relates to."""
  attribute: Attribute
}

"""
Deletes an attribute. 

Requires one of the following permissions: MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES.
"""
type AttributeDelete {
  attributeErrors: [AttributeError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AttributeError!]!
  attribute: Attribute
}

"""
Event sent when attribute is deleted.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type AttributeDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The attribute the event relates to."""
  attribute: Attribute
}

"""An enumeration."""
enum AttributeEntityTypeEnum {
  PAGE
  PRODUCT
  PRODUCT_VARIANT
}

type AttributeError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: AttributeErrorCode!
}

"""An enumeration."""
enum AttributeErrorCode {
  ALREADY_EXISTS
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  REQUIRED
  UNIQUE
}

input AttributeFilterInput {
  valueRequired: Boolean
  isVariantOnly: Boolean
  visibleInStorefront: Boolean
  filterableInStorefront: Boolean
  filterableInDashboard: Boolean
  availableInGrid: Boolean
  metadata: [MetadataFilter!]
  search: String
  ids: [ID!]
  type: AttributeTypeEnum
  inCollection: ID
  inCategory: ID
  slugs: [String!]

  """
  Specifies the channel by which the data should be filtered. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use root-level channel argument instead.
  """
  channel: String
}

input AttributeInput {
  """Internal representation of an attribute name."""
  slug: String!

  """Internal representation of a value (unique per attribute)."""
  values: [String!]

  """The range that the returned values should be in."""
  valuesRange: IntRangeInput

  """The date/time range that the returned values should be in."""
  dateTime: DateTimeRangeInput

  """
  The date range that the returned values should be in. In case of date/time attributes, the UTC midnight of the given date is used.
  """
  date: DateRangeInput

  """The boolean value of the attribute."""
  boolean: Boolean
}

"""An enumeration."""
enum AttributeInputTypeEnum {
  DROPDOWN
  MULTISELECT
  FILE
  REFERENCE
  NUMERIC
  RICH_TEXT
  PLAIN_TEXT
  SWATCH
  BOOLEAN
  DATE
  DATE_TIME
}

"""
Reorder the values of an attribute. 

Requires one of the following permissions: MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES.
"""
type AttributeReorderValues {
  """Attribute from which values are reordered."""
  attribute: Attribute
  attributeErrors: [AttributeError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AttributeError!]!
}

enum AttributeSortField {
  """Sort attributes by name"""
  NAME

  """Sort attributes by slug"""
  SLUG

  """Sort attributes by the value required flag"""
  VALUE_REQUIRED

  """Sort attributes by the variant only flag"""
  IS_VARIANT_ONLY

  """Sort attributes by visibility in the storefront"""
  VISIBLE_IN_STOREFRONT

  """Sort attributes by the filterable in storefront flag"""
  FILTERABLE_IN_STOREFRONT

  """Sort attributes by the filterable in dashboard flag"""
  FILTERABLE_IN_DASHBOARD

  """Sort attributes by their position in storefront"""
  STOREFRONT_SEARCH_POSITION

  """
  Sort attributes based on whether they can be displayed or not in a product grid.
  """
  AVAILABLE_IN_GRID
}

input AttributeSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort attributes by the selected field."""
  field: AttributeSortField!
}

type AttributeTranslatableContent implements Node {
  id: ID!
  name: String!

  """Returns translated attribute fields for the given language code."""
  translation(
    """A language code to return the translation for attribute."""
    languageCode: LanguageCodeEnum!
  ): AttributeTranslation

  """Custom attribute of a product."""
  attribute: Attribute @deprecated(reason: "This field will be removed in Saleor 4.0. Get model fields from the root level queries.")
}

"""
Creates/updates translations for an attribute. 

Requires one of the following permissions: MANAGE_TRANSLATIONS.
"""
type AttributeTranslate {
  translationErrors: [TranslationError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [TranslationError!]!
  attribute: Attribute
}

type AttributeTranslation implements Node {
  id: ID!

  """Translation language."""
  language: LanguageDisplay!
  name: String!
}

"""An enumeration."""
enum AttributeTypeEnum {
  PRODUCT_TYPE
  PAGE_TYPE
}

"""
Updates attribute. 

Requires one of the following permissions: MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES.
"""
type AttributeUpdate {
  attribute: Attribute
  attributeErrors: [AttributeError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AttributeError!]!
}

input AttributeUpdateInput {
  """Name of an attribute displayed in the interface."""
  name: String

  """Internal representation of an attribute name."""
  slug: String

  """The unit of attribute values."""
  unit: MeasurementUnitsEnum

  """IDs of values to be removed from this attribute."""
  removeValues: [ID!]

  """New values to be created for this attribute."""
  addValues: [AttributeValueUpdateInput!]

  """Whether the attribute requires values to be passed or not."""
  valueRequired: Boolean

  """Whether the attribute is for variants only."""
  isVariantOnly: Boolean

  """Whether the attribute should be visible or not in storefront."""
  visibleInStorefront: Boolean

  """Whether the attribute can be filtered in storefront."""
  filterableInStorefront: Boolean

  """Whether the attribute can be filtered in dashboard."""
  filterableInDashboard: Boolean

  """
  The position of the attribute in the storefront navigation (0 by default).
  """
  storefrontSearchPosition: Int

  """Whether the attribute can be displayed in the admin product list."""
  availableInGrid: Boolean
}

"""
Event sent when attribute is updated.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type AttributeUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The attribute the event relates to."""
  attribute: Attribute
}

"""Represents a value of an attribute."""
type AttributeValue implements Node {
  id: ID!

  """Name of a value displayed in the interface."""
  name: String

  """Internal representation of a value (unique per attribute)."""
  slug: String

  """
  Represent value of the attribute value (e.g. color values for swatch attributes).
  """
  value: String

  """Returns translated attribute value fields for the given language code."""
  translation(
    """A language code to return the translation for attribute value."""
    languageCode: LanguageCodeEnum!
  ): AttributeValueTranslation

  """The input type to use for entering attribute values in the dashboard."""
  inputType: AttributeInputTypeEnum

  """The ID of the attribute reference."""
  reference: ID

  """Represents file URL and content type (if attribute value is a file)."""
  file: File

  """
  Represents the text of the attribute value, includes formatting.
  
  Rich text format. For reference see https://editorjs.io/
  """
  richText: JSONString

  """
  Represents the text of the attribute value, plain text without formating.
  """
  plainText: String

  """Represents the boolean value of the attribute value."""
  boolean: Boolean

  """Represents the date value of the attribute value."""
  date: Date

  """Represents the date/time value of the attribute value."""
  dateTime: DateTime
}

"""
Deletes values of attributes. 

Requires one of the following permissions: MANAGE_PAGE_TYPES_AND_ATTRIBUTES.
"""
type AttributeValueBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  attributeErrors: [AttributeError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AttributeError!]!
}

type AttributeValueCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [AttributeValueCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type AttributeValueCountableEdge {
  """The item at the end of the edge."""
  node: AttributeValue!

  """A cursor for use in pagination."""
  cursor: String!
}

"""
Creates a value for an attribute. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type AttributeValueCreate {
  """The updated attribute."""
  attribute: Attribute
  attributeErrors: [AttributeError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AttributeError!]!
  attributeValue: AttributeValue
}

input AttributeValueCreateInput {
  """
  Represent value of the attribute value (e.g. color values for swatch attributes).
  """
  value: String

  """
  Represents the text of the attribute value, includes formatting.
  
  Rich text format. For reference see https://editorjs.io/
  
  DEPRECATED: this field will be removed in Saleor 4.0.The rich text attribute hasn't got predefined value, so can be specified only from instance that supports the given attribute.
  """
  richText: JSONString

  """
  Represents the text of the attribute value, plain text without formating.
  
  DEPRECATED: this field will be removed in Saleor 4.0.The plain text attribute hasn't got predefined value, so can be specified only from instance that supports the given attribute.
  """
  plainText: String

  """URL of the file attribute. Every time, a new value is created."""
  fileUrl: String

  """File content type."""
  contentType: String

  """Name of a value displayed in the interface."""
  name: String!
}

"""
Event sent when new attribute value is created.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type AttributeValueCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The attribute value the event relates to."""
  attributeValue: AttributeValue
}

"""
Deletes a value of an attribute. 

Requires one of the following permissions: MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES.
"""
type AttributeValueDelete {
  """The updated attribute."""
  attribute: Attribute
  attributeErrors: [AttributeError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AttributeError!]!
  attributeValue: AttributeValue
}

"""
Event sent when attribute value is deleted.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type AttributeValueDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The attribute value the event relates to."""
  attributeValue: AttributeValue
}

input AttributeValueFilterInput {
  search: String
  ids: [ID!]
}

input AttributeValueInput {
  """ID of the selected attribute."""
  id: ID

  """
  The value or slug of an attribute to resolve. If the passed value is non-existent, it will be created. This field will be removed in Saleor 4.0.
  """
  values: [String!]

  """
  Attribute value ID.
  
  Added in Saleor 3.9.
  """
  dropdown: AttributeValueSelectableTypeInput

  """
  List of attribute value IDs.
  
  Added in Saleor 3.9.
  """
  multiselect: [AttributeValueSelectableTypeInput!]

  """
  Numeric value of an attribute.
  
  Added in Saleor 3.9.
  """
  numeric: String

  """URL of the file attribute. Every time, a new value is created."""
  file: String

  """File content type."""
  contentType: String

  """List of entity IDs that will be used as references."""
  references: [ID!]

  """Text content in JSON format."""
  richText: JSONString

  """Plain text content."""
  plainText: String

  """Represents the boolean value of the attribute value."""
  boolean: Boolean

  """Represents the date value of the attribute value."""
  date: Date

  """Represents the date/time value of the attribute value."""
  dateTime: DateTime
}

"""
Represents attribute value. If no ID provided, value will be resolved. 

Added in Saleor 3.9.
"""
input AttributeValueSelectableTypeInput {
  """ID of an attribute value."""
  id: ID

  """
  The value or slug of an attribute to resolve. If the passed value is non-existent, it will be created.
  """
  value: String
}

type AttributeValueTranslatableContent implements Node {
  id: ID!
  name: String!

  """
  Attribute value.
  
  Rich text format. For reference see https://editorjs.io/
  """
  richText: JSONString

  """Attribute plain text value."""
  plainText: String

  """Returns translated attribute value fields for the given language code."""
  translation(
    """A language code to return the translation for attribute value."""
    languageCode: LanguageCodeEnum!
  ): AttributeValueTranslation

  """Represents a value of an attribute."""
  attributeValue: AttributeValue @deprecated(reason: "This field will be removed in Saleor 4.0. Get model fields from the root level queries.")

  """
  Associated attribute that can be translated.
  
  Added in Saleor 3.9.
  """
  attribute: AttributeTranslatableContent
}

"""
Creates/updates translations for an attribute value. 

Requires one of the following permissions: MANAGE_TRANSLATIONS.
"""
type AttributeValueTranslate {
  translationErrors: [TranslationError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [TranslationError!]!
  attributeValue: AttributeValue
}

type AttributeValueTranslation implements Node {
  id: ID!

  """Translation language."""
  language: LanguageDisplay!
  name: String!

  """
  Attribute value.
  
  Rich text format. For reference see https://editorjs.io/
  """
  richText: JSONString

  """Attribute plain text value."""
  plainText: String
}

input AttributeValueTranslationInput {
  name: String

  """
  Translated text.
  
  Rich text format. For reference see https://editorjs.io/
  """
  richText: JSONString

  """Translated text."""
  plainText: String
}

"""
Updates value of an attribute. 

Requires one of the following permissions: MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES.
"""
type AttributeValueUpdate {
  """The updated attribute."""
  attribute: Attribute
  attributeErrors: [AttributeError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AttributeError!]!
  attributeValue: AttributeValue
}

input AttributeValueUpdateInput {
  """
  Represent value of the attribute value (e.g. color values for swatch attributes).
  """
  value: String

  """
  Represents the text of the attribute value, includes formatting.
  
  Rich text format. For reference see https://editorjs.io/
  
  DEPRECATED: this field will be removed in Saleor 4.0.The rich text attribute hasn't got predefined value, so can be specified only from instance that supports the given attribute.
  """
  richText: JSONString

  """
  Represents the text of the attribute value, plain text without formating.
  
  DEPRECATED: this field will be removed in Saleor 4.0.The plain text attribute hasn't got predefined value, so can be specified only from instance that supports the given attribute.
  """
  plainText: String

  """URL of the file attribute. Every time, a new value is created."""
  fileUrl: String

  """File content type."""
  contentType: String

  """Name of a value displayed in the interface."""
  name: String
}

"""
Event sent when attribute value is updated.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type AttributeValueUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The attribute value the event relates to."""
  attributeValue: AttributeValue
}

input BulkAttributeValueInput {
  """ID of the selected attribute."""
  id: ID

  """
  The value or slug of an attribute to resolve. If the passed value is non-existent, it will be created.
  """
  values: [String!]

  """
  The boolean value of an attribute to resolve. If the passed value is non-existent, it will be created.
  """
  boolean: Boolean
}

type BulkProductError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: ProductErrorCode!

  """List of attributes IDs which causes the error."""
  attributes: [ID!]

  """List of attribute values IDs which causes the error."""
  values: [ID!]

  """Index of an input list item that caused the error."""
  index: Int

  """List of warehouse IDs which causes the error."""
  warehouses: [ID!]

  """List of channel IDs which causes the error."""
  channels: [ID!]
}

type BulkStockError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: ProductErrorCode!

  """List of attributes IDs which causes the error."""
  attributes: [ID!]

  """List of attribute values IDs which causes the error."""
  values: [ID!]

  """Index of an input list item that caused the error."""
  index: Int
}

"""
Synchronous webhook for calculating checkout/order taxes.

Added in Saleor 3.7.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type CalculateTaxes implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App
  taxBase: TaxableObject!
}

input CardInput {
  """
  Payment method nonce, a token returned by the appropriate provider's SDK.
  """
  code: String!

  """Card security code."""
  cvc: String

  """Information about currency and amount."""
  money: MoneyInput!
}

input CatalogueInput {
  """Products related to the discount."""
  products: [ID!]

  """Categories related to the discount."""
  categories: [ID!]

  """Collections related to the discount."""
  collections: [ID!]

  """
  Product variant related to the discount.
  
  Added in Saleor 3.1.
  """
  variants: [ID!]
}

"""
Represents a single category of products. Categories allow to organize products in a tree-hierarchies which can be used for navigation in the storefront.
"""
type Category implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  seoTitle: String
  seoDescription: String
  name: String!

  """
  Description of the category.
  
  Rich text format. For reference see https://editorjs.io/
  """
  description: JSONString
  slug: String!
  parent: Category
  level: Int!

  """
  Description of the category.
  
  Rich text format. For reference see https://editorjs.io/
  """
  descriptionJson: JSONString @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `description` field instead.")

  """List of ancestors of the category."""
  ancestors(
    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): CategoryCountableConnection

  """
  List of products in the category. Requires the following permissions to include the unpublished items: MANAGE_ORDERS, MANAGE_DISCOUNTS, MANAGE_PRODUCTS.
  """
  products(
    """
    Filtering options for products.
    
    Added in Saleor 3.9.
    """
    filter: ProductFilterInput

    """
    Sort products.
    
    Added in Saleor 3.9.
    """
    sortBy: ProductOrder

    """Slug of a channel for which the data should be returned."""
    channel: String

    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): ProductCountableConnection

  """List of children of the category."""
  children(
    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): CategoryCountableConnection
  backgroundImage(
    """
    Size of the image. If not provided, the original image will be returned.
    """
    size: Int

    """
    The format of the image. When not provided, format of the original image will be used. Must be provided together with the size value, otherwise original image will be returned.
    
    Added in Saleor 3.6.
    
    Note: this API is currently in Feature Preview and can be subject to changes at later point.
    """
    format: ThumbnailFormatEnum
  ): Image

  """Returns translated category fields for the given language code."""
  translation(
    """A language code to return the translation for category."""
    languageCode: LanguageCodeEnum!
  ): CategoryTranslation
}

"""
Deletes categories. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type CategoryBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
}

type CategoryCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [CategoryCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type CategoryCountableEdge {
  """The item at the end of the edge."""
  node: Category!

  """A cursor for use in pagination."""
  cursor: String!
}

"""
Creates a new category. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type CategoryCreate {
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
  category: Category
}

"""
Event sent when new category is created.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type CategoryCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The category the event relates to."""
  category: Category
}

"""
Deletes a category. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type CategoryDelete {
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
  category: Category
}

"""
Event sent when category is deleted.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type CategoryDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The category the event relates to."""
  category: Category
}

input CategoryFilterInput {
  search: String
  metadata: [MetadataFilter!]
  ids: [ID!]
  slugs: [String!]
}

input CategoryInput {
  """
  Category description.
  
  Rich text format. For reference see https://editorjs.io/
  """
  description: JSONString

  """Category name."""
  name: String

  """Category slug."""
  slug: String

  """Search engine optimization fields."""
  seo: SeoInput

  """Background image file."""
  backgroundImage: Upload

  """Alt text for a product media."""
  backgroundImageAlt: String

  """
  Fields required to update the category metadata.
  
  Added in Saleor 3.8.
  """
  metadata: [MetadataInput!]

  """
  Fields required to update the category private metadata.
  
  Added in Saleor 3.8.
  """
  privateMetadata: [MetadataInput!]
}

enum CategorySortField {
  """Sort categories by name."""
  NAME

  """Sort categories by product count."""
  PRODUCT_COUNT

  """Sort categories by subcategory count."""
  SUBCATEGORY_COUNT
}

input CategorySortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """
  Specifies the channel in which to sort the data.
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use root-level channel argument instead.
  """
  channel: String

  """Sort categories by the selected field."""
  field: CategorySortField!
}

type CategoryTranslatableContent implements Node {
  id: ID!
  seoTitle: String
  seoDescription: String
  name: String!

  """
  Description of the category.
  
  Rich text format. For reference see https://editorjs.io/
  """
  description: JSONString

  """
  Description of the category.
  
  Rich text format. For reference see https://editorjs.io/
  """
  descriptionJson: JSONString @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `description` field instead.")

  """Returns translated category fields for the given language code."""
  translation(
    """A language code to return the translation for category."""
    languageCode: LanguageCodeEnum!
  ): CategoryTranslation

  """Represents a single category of products."""
  category: Category @deprecated(reason: "This field will be removed in Saleor 4.0. Get model fields from the root level queries.")
}

"""
Creates/updates translations for a category. 

Requires one of the following permissions: MANAGE_TRANSLATIONS.
"""
type CategoryTranslate {
  translationErrors: [TranslationError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [TranslationError!]!
  category: Category
}

type CategoryTranslation implements Node {
  id: ID!

  """Translation language."""
  language: LanguageDisplay!
  seoTitle: String
  seoDescription: String
  name: String

  """
  Translated description of the category.
  
  Rich text format. For reference see https://editorjs.io/
  """
  description: JSONString

  """
  Translated description of the category.
  
  Rich text format. For reference see https://editorjs.io/
  """
  descriptionJson: JSONString @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `description` field instead.")
}

"""
Updates a category. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type CategoryUpdate {
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
  category: Category
}

"""
Event sent when category is updated.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type CategoryUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The category the event relates to."""
  category: Category
}

"""Represents channel."""
type Channel implements Node {
  id: ID!

  """Slug of the channel."""
  slug: String!

  """
  Name of the channel.
  
  Requires one of the following permissions: AUTHENTICATED_APP, AUTHENTICATED_STAFF_USER.
  """
  name: String!

  """
  Whether the channel is active.
  
  Requires one of the following permissions: AUTHENTICATED_APP, AUTHENTICATED_STAFF_USER.
  """
  isActive: Boolean!

  """
  A currency that is assigned to the channel.
  
  Requires one of the following permissions: AUTHENTICATED_APP, AUTHENTICATED_STAFF_USER.
  """
  currencyCode: String!

  """
  Whether a channel has associated orders.
  
  Requires one of the following permissions: MANAGE_CHANNELS.
  """
  hasOrders: Boolean!

  """
  Default country for the channel. Default country can be used in checkout to determine the stock quantities or calculate taxes when the country was not explicitly provided.
  
  Added in Saleor 3.1.
  
  Requires one of the following permissions: AUTHENTICATED_APP, AUTHENTICATED_STAFF_USER.
  """
  defaultCountry: CountryDisplay!

  """
  List of warehouses assigned to this channel.
  
  Added in Saleor 3.5.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  
  Requires one of the following permissions: AUTHENTICATED_APP, AUTHENTICATED_STAFF_USER.
  """
  warehouses: [Warehouse!]!

  """
  List of shippable countries for the channel.
  
  Added in Saleor 3.6.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  countries: [CountryDisplay!]

  """
  Shipping methods that are available for the channel.
  
  Added in Saleor 3.6.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  availableShippingMethodsPerCountry(countries: [CountryCode!]): [ShippingMethodsPerCountry!]

  """
  Define the stock setting for this channel.
  
  Added in Saleor 3.7.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  
  Requires one of the following permissions: AUTHENTICATED_APP, AUTHENTICATED_STAFF_USER.
  """
  stockSettings: StockSettings!
}

"""
Activate a channel. 

Requires one of the following permissions: MANAGE_CHANNELS.
"""
type ChannelActivate {
  """Activated channel."""
  channel: Channel
  channelErrors: [ChannelError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ChannelError!]!
}

"""
Creates new channel. 

Requires one of the following permissions: MANAGE_CHANNELS.
"""
type ChannelCreate {
  channelErrors: [ChannelError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ChannelError!]!
  channel: Channel
}

input ChannelCreateInput {
  """isActive flag."""
  isActive: Boolean

  """
  The channel stock settings.
  
  Added in Saleor 3.7.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  stockSettings: StockSettingsInput

  """List of shipping zones to assign to the channel."""
  addShippingZones: [ID!]

  """
  List of warehouses to assign to the channel.
  
  Added in Saleor 3.5.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  addWarehouses: [ID!]

  """Name of the channel."""
  name: String!

  """Slug of the channel."""
  slug: String!

  """Currency of the channel."""
  currencyCode: String!

  """
  Default country for the channel. Default country can be used in checkout to determine the stock quantities or calculate taxes when the country was not explicitly provided.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  defaultCountry: CountryCode!
}

"""
Event sent when new channel is created.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ChannelCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The channel the event relates to."""
  channel: Channel
}

"""
Deactivate a channel. 

Requires one of the following permissions: MANAGE_CHANNELS.
"""
type ChannelDeactivate {
  """Deactivated channel."""
  channel: Channel
  channelErrors: [ChannelError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ChannelError!]!
}

"""
Delete a channel. Orders associated with the deleted channel will be moved to the target channel. Checkouts, product availability, and pricing will be removed. 

Requires one of the following permissions: MANAGE_CHANNELS.
"""
type ChannelDelete {
  channelErrors: [ChannelError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ChannelError!]!
  channel: Channel
}

input ChannelDeleteInput {
  """ID of channel to migrate orders from origin channel."""
  channelId: ID!
}

"""
Event sent when channel is deleted.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ChannelDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The channel the event relates to."""
  channel: Channel
}

type ChannelError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: ChannelErrorCode!

  """List of shipping zone IDs which causes the error."""
  shippingZones: [ID!]

  """List of warehouses IDs which causes the error."""
  warehouses: [ID!]
}

"""An enumeration."""
enum ChannelErrorCode {
  ALREADY_EXISTS
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  REQUIRED
  UNIQUE
  CHANNELS_CURRENCY_MUST_BE_THE_SAME
  CHANNEL_WITH_ORDERS
  DUPLICATED_INPUT_ITEM
}

"""
Reorder the warehouses of a channel.

Added in Saleor 3.7.

Note: this API is currently in Feature Preview and can be subject to changes at later point. 

Requires one of the following permissions: MANAGE_CHANNELS.
"""
type ChannelReorderWarehouses {
  """Channel within the warehouses are reordered."""
  channel: Channel
  errors: [ChannelError!]!
}

"""
Event sent when channel status has changed.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ChannelStatusChanged implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The channel the event relates to."""
  channel: Channel
}

"""
Update a channel. 

Requires one of the following permissions: MANAGE_CHANNELS.
"""
type ChannelUpdate {
  channelErrors: [ChannelError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ChannelError!]!
  channel: Channel
}

input ChannelUpdateInput {
  """isActive flag."""
  isActive: Boolean

  """
  The channel stock settings.
  
  Added in Saleor 3.7.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  stockSettings: StockSettingsInput

  """List of shipping zones to assign to the channel."""
  addShippingZones: [ID!]

  """
  List of warehouses to assign to the channel.
  
  Added in Saleor 3.5.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  addWarehouses: [ID!]

  """Name of the channel."""
  name: String

  """Slug of the channel."""
  slug: String

  """
  Default country for the channel. Default country can be used in checkout to determine the stock quantities or calculate taxes when the country was not explicitly provided.
  
  Added in Saleor 3.1.
  """
  defaultCountry: CountryCode

  """List of shipping zones to unassign from the channel."""
  removeShippingZones: [ID!]

  """
  List of warehouses to unassign from the channel.
  
  Added in Saleor 3.5.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  removeWarehouses: [ID!]
}

"""
Event sent when channel is updated.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ChannelUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The channel the event relates to."""
  channel: Channel
}

"""Checkout object."""
type Checkout implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  created: DateTime!
  lastChange: DateTime!
  user: User
  channel: Channel!
  billingAddress: Address
  shippingAddress: Address
  note: String!
  discount: Money
  discountName: String
  translatedDiscountName: String
  voucherCode: String

  """Shipping methods that can be used with this checkout."""
  availableShippingMethods: [ShippingMethod!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `shippingMethods` instead.")

  """Shipping methods that can be used with this checkout."""
  shippingMethods: [ShippingMethod!]!

  """
  Collection points that can be used for this order.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  availableCollectionPoints: [Warehouse!]!

  """List of available payment gateways."""
  availablePaymentGateways: [PaymentGateway!]!

  """Email of a customer."""
  email: String

  """List of gift cards associated with this checkout."""
  giftCards: [GiftCard!]!

  """Returns True, if checkout requires shipping."""
  isShippingRequired: Boolean!

  """The number of items purchased."""
  quantity: Int!

  """
  Date when oldest stock reservation for this checkout expires or null if no stock is reserved.
  
  Added in Saleor 3.1.
  """
  stockReservationExpires: DateTime

  """
  A list of checkout lines, each containing information about an item in the checkout.
  """
  lines: [CheckoutLine!]!

  """The price of the shipping, with all the taxes included."""
  shippingPrice: TaxedMoney!

  """The shipping method related with checkout."""
  shippingMethod: ShippingMethod @deprecated(reason: "This field will be removed in Saleor 4.0. Use `deliveryMethod` instead.")

  """
  The delivery method selected for this checkout.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  deliveryMethod: DeliveryMethod

  """The price of the checkout before shipping, with taxes included."""
  subtotalPrice: TaxedMoney!

  """
  Returns True if checkout has to be exempt from taxes.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  taxExemption: Boolean!

  """The checkout's token."""
  token: UUID!

  """
  The sum of the the checkout line prices, with all the taxes,shipping costs, and discounts included.
  """
  totalPrice: TaxedMoney!

  """Checkout language code."""
  languageCode: LanguageCodeEnum!

  """
  List of transactions for the checkout. Requires one of the following permissions: MANAGE_CHECKOUTS, HANDLE_PAYMENTS.
  
  Added in Saleor 3.4.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  transactions: [TransactionItem!]

  """
  Determines whether checkout prices should include taxes when displayed in a storefront.
  
  Added in Saleor 3.9.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  displayGrossPrices: Boolean!
}

"""Adds a gift card or a voucher to a checkout."""
type CheckoutAddPromoCode {
  """The checkout with the added gift card or voucher."""
  checkout: Checkout
  checkoutErrors: [CheckoutError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [CheckoutError!]!
}

input CheckoutAddressValidationRules {
  """
  Determines if an error should be raised when the provided address doesn't have all the required fields. The list of required fields is dynamic and depends on the country code (use the `addressValidationRules` query to fetch them). Note: country code is mandatory for all addresses regardless of the rules provided in this input.
  """
  checkRequiredFields: Boolean = true

  """
  Determines if an error should be raised when the provided address doesn't match the expected format. Example: using letters for postal code when the numbers are expected.
  """
  checkFieldsFormat: Boolean = true

  """
  Determines if Saleor should apply normalization on address fields. Example: converting city field to uppercase letters.
  """
  enableFieldsNormalization: Boolean = true
}

"""Update billing address in the existing checkout."""
type CheckoutBillingAddressUpdate {
  """An updated checkout."""
  checkout: Checkout
  checkoutErrors: [CheckoutError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [CheckoutError!]!
}

"""
Completes the checkout. As a result a new order is created and a payment charge is made. This action requires a successful payment before it can be performed. In case additional confirmation step as 3D secure is required confirmationNeeded flag will be set to True and no order created until payment is confirmed with second call of this mutation.
"""
type CheckoutComplete {
  """Placed order."""
  order: Order

  """
  Set to true if payment needs to be confirmed before checkout is complete.
  """
  confirmationNeeded: Boolean!

  """Confirmation data used to process additional authorization steps."""
  confirmationData: JSONString
  checkoutErrors: [CheckoutError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [CheckoutError!]!
}

type CheckoutCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [CheckoutCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type CheckoutCountableEdge {
  """The item at the end of the edge."""
  node: Checkout!

  """A cursor for use in pagination."""
  cursor: String!
}

"""Create a new checkout."""
type CheckoutCreate {
  """
  Whether the checkout was created or the current active one was returned. Refer to checkoutLinesAdd and checkoutLinesUpdate to merge a cart with an active checkout.
  """
  created: Boolean @deprecated(reason: "This field will be removed in Saleor 4.0. Always returns `true`.")
  checkoutErrors: [CheckoutError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [CheckoutError!]!
  checkout: Checkout
}

input CheckoutCreateInput {
  """Slug of a channel in which to create a checkout."""
  channel: String

  """
  A list of checkout lines, each containing information about an item in the checkout.
  """
  lines: [CheckoutLineInput!]!

  """The customer's email address."""
  email: String

  """
  The mailing address to where the checkout will be shipped. Note: the address will be ignored if the checkout doesn't contain shippable items.
  """
  shippingAddress: AddressInput

  """Billing address of the customer."""
  billingAddress: AddressInput

  """Checkout language code."""
  languageCode: LanguageCodeEnum

  """
  The checkout validation rules that can be changed.
  
  Added in Saleor 3.5.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  validationRules: CheckoutValidationRules
}

"""
Event sent when new checkout is created.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type CheckoutCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The checkout the event relates to."""
  checkout: Checkout
}

"""
Sets the customer as the owner of the checkout. 

Requires one of the following permissions: AUTHENTICATED_APP, AUTHENTICATED_USER.
"""
type CheckoutCustomerAttach {
  """An updated checkout."""
  checkout: Checkout
  checkoutErrors: [CheckoutError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [CheckoutError!]!
}

"""
Removes the user assigned as the owner of the checkout. 

Requires one of the following permissions: AUTHENTICATED_APP, AUTHENTICATED_USER.
"""
type CheckoutCustomerDetach {
  """An updated checkout."""
  checkout: Checkout
  checkoutErrors: [CheckoutError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [CheckoutError!]!
}

"""
Updates the delivery method (shipping method or pick up point) of the checkout.

Added in Saleor 3.1.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type CheckoutDeliveryMethodUpdate {
  """An updated checkout."""
  checkout: Checkout
  errors: [CheckoutError!]!
}

"""Updates email address in the existing checkout object."""
type CheckoutEmailUpdate {
  """An updated checkout."""
  checkout: Checkout
  checkoutErrors: [CheckoutError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [CheckoutError!]!
}

type CheckoutError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: CheckoutErrorCode!

  """List of varint IDs which causes the error."""
  variants: [ID!]

  """List of line Ids which cause the error."""
  lines: [ID!]

  """A type of address that causes the error."""
  addressType: AddressTypeEnum
}

"""An enumeration."""
enum CheckoutErrorCode {
  BILLING_ADDRESS_NOT_SET
  CHECKOUT_NOT_FULLY_PAID
  GRAPHQL_ERROR
  PRODUCT_NOT_PUBLISHED
  PRODUCT_UNAVAILABLE_FOR_PURCHASE
  INSUFFICIENT_STOCK
  INVALID
  INVALID_SHIPPING_METHOD
  NOT_FOUND
  PAYMENT_ERROR
  QUANTITY_GREATER_THAN_LIMIT
  REQUIRED
  SHIPPING_ADDRESS_NOT_SET
  SHIPPING_METHOD_NOT_APPLICABLE
  DELIVERY_METHOD_NOT_APPLICABLE
  SHIPPING_METHOD_NOT_SET
  SHIPPING_NOT_REQUIRED
  TAX_ERROR
  UNIQUE
  VOUCHER_NOT_APPLICABLE
  GIFT_CARD_NOT_APPLICABLE
  ZERO_QUANTITY
  MISSING_CHANNEL_SLUG
  CHANNEL_INACTIVE
  UNAVAILABLE_VARIANT_IN_CHANNEL
  EMAIL_NOT_SET
  NO_LINES
  INACTIVE_PAYMENT
}

input CheckoutFilterInput {
  customer: String
  created: DateRangeInput
  search: String
  metadata: [MetadataFilter!]
  channels: [ID!]
}

"""
Filter shipping methods for checkout.

Added in Saleor 3.6.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type CheckoutFilterShippingMethods implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The checkout the event relates to."""
  checkout: Checkout

  """
  Shipping methods that can be used with this checkout.
  
  Added in Saleor 3.6.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  shippingMethods: [ShippingMethod!]
}

"""Update language code in the existing checkout."""
type CheckoutLanguageCodeUpdate {
  """An updated checkout."""
  checkout: Checkout
  checkoutErrors: [CheckoutError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [CheckoutError!]!
}

"""Represents an item in the checkout."""
type CheckoutLine implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  variant: ProductVariant!
  quantity: Int!

  """The unit price of the checkout line, with taxes and discounts."""
  unitPrice: TaxedMoney!

  """The unit price of the checkout line, without discounts."""
  undiscountedUnitPrice: Money!

  """The sum of the checkout line price, taxes and discounts."""
  totalPrice: TaxedMoney!

  """The sum of the checkout line price, without discounts."""
  undiscountedTotalPrice: Money!

  """Indicates whether the item need to be delivered."""
  requiresShipping: Boolean!
}

type CheckoutLineCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [CheckoutLineCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type CheckoutLineCountableEdge {
  """The item at the end of the edge."""
  node: CheckoutLine!

  """A cursor for use in pagination."""
  cursor: String!
}

"""Deletes a CheckoutLine."""
type CheckoutLineDelete {
  """An updated checkout."""
  checkout: Checkout
  checkoutErrors: [CheckoutError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [CheckoutError!]!
}

input CheckoutLineInput {
  """The number of items purchased."""
  quantity: Int!

  """ID of the product variant."""
  variantId: ID!

  """
  Custom price of the item. Can be set only by apps with `HANDLE_CHECKOUTS` permission. When the line with the same variant will be provided multiple times, the last price will be used.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  price: PositiveDecimal

  """
  Flag that allow force splitting the same variant into multiple lines by skipping the matching logic. 
  
  Added in Saleor 3.6.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  forceNewLine: Boolean = false

  """
  Fields required to update the object's metadata.
  
  Added in Saleor 3.8.
  """
  metadata: [MetadataInput!]
}

input CheckoutLineUpdateInput {
  """
  ID of the product variant. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use `lineId` instead.
  """
  variantId: ID

  """
  The number of items purchased. Optional for apps, required for any other users.
  """
  quantity: Int

  """
  Custom price of the item. Can be set only by apps with `HANDLE_CHECKOUTS` permission. When the line with the same variant will be provided multiple times, the last price will be used.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  price: PositiveDecimal

  """
  ID of the line.
  
  Added in Saleor 3.6.
  """
  lineId: ID
}

"""
Adds a checkout line to the existing checkout.If line was already in checkout, its quantity will be increased.
"""
type CheckoutLinesAdd {
  """An updated checkout."""
  checkout: Checkout
  checkoutErrors: [CheckoutError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [CheckoutError!]!
}

"""Deletes checkout lines."""
type CheckoutLinesDelete {
  """An updated checkout."""
  checkout: Checkout
  errors: [CheckoutError!]!
}

"""Updates checkout line in the existing checkout."""
type CheckoutLinesUpdate {
  """An updated checkout."""
  checkout: Checkout
  checkoutErrors: [CheckoutError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [CheckoutError!]!
}

"""
Event sent when checkout metadata is updated.

Added in Saleor 3.8.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type CheckoutMetadataUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The checkout the event relates to."""
  checkout: Checkout
}

"""Create a new payment for given checkout."""
type CheckoutPaymentCreate {
  """Related checkout object."""
  checkout: Checkout

  """A newly created payment."""
  payment: Payment
  paymentErrors: [PaymentError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PaymentError!]!
}

"""Remove a gift card or a voucher from a checkout."""
type CheckoutRemovePromoCode {
  """The checkout with the removed gift card or voucher."""
  checkout: Checkout
  checkoutErrors: [CheckoutError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [CheckoutError!]!
}

"""Update shipping address in the existing checkout."""
type CheckoutShippingAddressUpdate {
  """An updated checkout."""
  checkout: Checkout
  checkoutErrors: [CheckoutError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [CheckoutError!]!
}

"""Updates the shipping method of the checkout."""
type CheckoutShippingMethodUpdate {
  """An updated checkout."""
  checkout: Checkout
  checkoutErrors: [CheckoutError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [CheckoutError!]!
}

enum CheckoutSortField {
  """Sort checkouts by creation date."""
  CREATION_DATE

  """Sort checkouts by customer."""
  CUSTOMER

  """Sort checkouts by payment."""
  PAYMENT
}

input CheckoutSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort checkouts by the selected field."""
  field: CheckoutSortField!
}

"""
Event sent when checkout is updated.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type CheckoutUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The checkout the event relates to."""
  checkout: Checkout
}

input CheckoutValidationRules {
  """
  The validation rules that can be applied to provided shipping address data.
  """
  shippingAddress: CheckoutAddressValidationRules

  """
  The validation rules that can be applied to provided billing address data.
  """
  billingAddress: CheckoutAddressValidationRules
}

type ChoiceValue {
  raw: String
  verbose: String
}

"""Represents a collection of products."""
type Collection implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  seoTitle: String
  seoDescription: String
  name: String!

  """
  Description of the collection.
  
  Rich text format. For reference see https://editorjs.io/
  """
  description: JSONString
  slug: String!

  """
  Channel given to retrieve this collection. Also used by federation gateway to resolve this object in a federated query.
  """
  channel: String

  """
  Description of the collection.
  
  Rich text format. For reference see https://editorjs.io/
  """
  descriptionJson: JSONString @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `description` field instead.")

  """List of products in this collection."""
  products(
    """Filtering options for products."""
    filter: ProductFilterInput

    """Sort products."""
    sortBy: ProductOrder

    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): ProductCountableConnection
  backgroundImage(
    """
    Size of the image. If not provided, the original image will be returned.
    """
    size: Int

    """
    The format of the image. When not provided, format of the original image will be used. Must be provided together with the size value, otherwise original image will be returned.
    
    Added in Saleor 3.6.
    
    Note: this API is currently in Feature Preview and can be subject to changes at later point.
    """
    format: ThumbnailFormatEnum
  ): Image

  """Returns translated collection fields for the given language code."""
  translation(
    """A language code to return the translation for collection."""
    languageCode: LanguageCodeEnum!
  ): CollectionTranslation

  """
  List of channels in which the collection is available.
  
  Requires one of the following permissions: MANAGE_PRODUCTS.
  """
  channelListings: [CollectionChannelListing!]
}

"""
Adds products to a collection. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type CollectionAddProducts {
  """Collection to which products will be added."""
  collection: Collection
  collectionErrors: [CollectionError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [CollectionError!]!
}

"""
Deletes collections. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type CollectionBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  collectionErrors: [CollectionError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [CollectionError!]!
}

"""Represents collection channel listing."""
type CollectionChannelListing implements Node {
  id: ID!
  publicationDate: Date @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `publishedAt` field to fetch the publication date.")

  """
  The collection publication date.
  
  Added in Saleor 3.3.
  """
  publishedAt: DateTime
  isPublished: Boolean!
  channel: Channel!
}

type CollectionChannelListingError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: ProductErrorCode!

  """List of attributes IDs which causes the error."""
  attributes: [ID!]

  """List of attribute values IDs which causes the error."""
  values: [ID!]

  """List of channels IDs which causes the error."""
  channels: [ID!]
}

"""
Manage collection's availability in channels. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type CollectionChannelListingUpdate {
  """An updated collection instance."""
  collection: Collection
  collectionChannelListingErrors: [CollectionChannelListingError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [CollectionChannelListingError!]!
}

input CollectionChannelListingUpdateInput {
  """List of channels to which the collection should be assigned."""
  addChannels: [PublishableChannelListingInput!]

  """List of channels from which the collection should be unassigned."""
  removeChannels: [ID!]
}

type CollectionCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [CollectionCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type CollectionCountableEdge {
  """The item at the end of the edge."""
  node: Collection!

  """A cursor for use in pagination."""
  cursor: String!
}

"""
Creates a new collection. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type CollectionCreate {
  collectionErrors: [CollectionError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [CollectionError!]!
  collection: Collection
}

input CollectionCreateInput {
  """Informs whether a collection is published."""
  isPublished: Boolean

  """Name of the collection."""
  name: String

  """Slug of the collection."""
  slug: String

  """
  Description of the collection.
  
  Rich text format. For reference see https://editorjs.io/
  """
  description: JSONString

  """Background image file."""
  backgroundImage: Upload

  """Alt text for an image."""
  backgroundImageAlt: String

  """Search engine optimization fields."""
  seo: SeoInput

  """
  Publication date. ISO 8601 standard. 
  
  DEPRECATED: this field will be removed in Saleor 4.0.
  """
  publicationDate: Date

  """
  Fields required to update the collection metadata.
  
  Added in Saleor 3.8.
  """
  metadata: [MetadataInput!]

  """
  Fields required to update the collection private metadata.
  
  Added in Saleor 3.8.
  """
  privateMetadata: [MetadataInput!]

  """List of products to be added to the collection."""
  products: [ID!]
}

"""
Event sent when new collection is created.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type CollectionCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The collection the event relates to."""
  collection(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): Collection
}

"""
Deletes a collection. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type CollectionDelete {
  collectionErrors: [CollectionError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [CollectionError!]!
  collection: Collection
}

"""
Event sent when collection is deleted.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type CollectionDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The collection the event relates to."""
  collection(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): Collection
}

type CollectionError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """List of products IDs which causes the error."""
  products: [ID!]

  """The error code."""
  code: CollectionErrorCode!
}

"""An enumeration."""
enum CollectionErrorCode {
  DUPLICATED_INPUT_ITEM
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  REQUIRED
  UNIQUE
  CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT
}

input CollectionFilterInput {
  published: CollectionPublished
  search: String
  metadata: [MetadataFilter!]
  ids: [ID!]
  slugs: [String!]

  """
  Specifies the channel by which the data should be filtered. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use root-level channel argument instead.
  """
  channel: String
}

input CollectionInput {
  """Informs whether a collection is published."""
  isPublished: Boolean

  """Name of the collection."""
  name: String

  """Slug of the collection."""
  slug: String

  """
  Description of the collection.
  
  Rich text format. For reference see https://editorjs.io/
  """
  description: JSONString

  """Background image file."""
  backgroundImage: Upload

  """Alt text for an image."""
  backgroundImageAlt: String

  """Search engine optimization fields."""
  seo: SeoInput

  """
  Publication date. ISO 8601 standard. 
  
  DEPRECATED: this field will be removed in Saleor 4.0.
  """
  publicationDate: Date

  """
  Fields required to update the collection metadata.
  
  Added in Saleor 3.8.
  """
  metadata: [MetadataInput!]

  """
  Fields required to update the collection private metadata.
  
  Added in Saleor 3.8.
  """
  privateMetadata: [MetadataInput!]
}

"""
Event sent when collection metadata is updated.

Added in Saleor 3.8.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type CollectionMetadataUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The collection the event relates to."""
  collection(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): Collection
}

enum CollectionPublished {
  PUBLISHED
  HIDDEN
}

"""
Remove products from a collection. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type CollectionRemoveProducts {
  """Collection from which products will be removed."""
  collection: Collection
  collectionErrors: [CollectionError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [CollectionError!]!
}

"""
Reorder the products of a collection. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type CollectionReorderProducts {
  """Collection from which products are reordered."""
  collection: Collection
  collectionErrors: [CollectionError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [CollectionError!]!
}

enum CollectionSortField {
  """Sort collections by name."""
  NAME

  """
  Sort collections by availability.
  
  This option requires a channel filter to work as the values can vary between channels.
  """
  AVAILABILITY

  """Sort collections by product count."""
  PRODUCT_COUNT

  """
  Sort collections by publication date.
  
  This option requires a channel filter to work as the values can vary between channels.
  """
  PUBLICATION_DATE

  """
  Sort collections by publication date.
  
  This option requires a channel filter to work as the values can vary between channels.
  """
  PUBLISHED_AT
}

input CollectionSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """
  Specifies the channel in which to sort the data.
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use root-level channel argument instead.
  """
  channel: String

  """Sort collections by the selected field."""
  field: CollectionSortField!
}

type CollectionTranslatableContent implements Node {
  id: ID!
  seoTitle: String
  seoDescription: String
  name: String!

  """
  Description of the collection.
  
  Rich text format. For reference see https://editorjs.io/
  """
  description: JSONString

  """
  Description of the collection.
  
  Rich text format. For reference see https://editorjs.io/
  """
  descriptionJson: JSONString @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `description` field instead.")

  """Returns translated collection fields for the given language code."""
  translation(
    """A language code to return the translation for collection."""
    languageCode: LanguageCodeEnum!
  ): CollectionTranslation

  """Represents a collection of products."""
  collection: Collection @deprecated(reason: "This field will be removed in Saleor 4.0. Get model fields from the root level queries.")
}

"""
Creates/updates translations for a collection. 

Requires one of the following permissions: MANAGE_TRANSLATIONS.
"""
type CollectionTranslate {
  translationErrors: [TranslationError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [TranslationError!]!
  collection: Collection
}

type CollectionTranslation implements Node {
  id: ID!

  """Translation language."""
  language: LanguageDisplay!
  seoTitle: String
  seoDescription: String
  name: String

  """
  Translated description of the collection.
  
  Rich text format. For reference see https://editorjs.io/
  """
  description: JSONString

  """
  Translated description of the collection.
  
  Rich text format. For reference see https://editorjs.io/
  """
  descriptionJson: JSONString @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `description` field instead.")
}

"""
Updates a collection. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type CollectionUpdate {
  collectionErrors: [CollectionError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [CollectionError!]!
  collection: Collection
}

"""
Event sent when collection is updated.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type CollectionUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The collection the event relates to."""
  collection(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): Collection
}

"""Stores information about a single configuration field."""
type ConfigurationItem {
  """Name of the field."""
  name: String!

  """Current value of the field."""
  value: String

  """Type of the field."""
  type: ConfigurationTypeFieldEnum

  """Help text for the field."""
  helpText: String

  """Label for the field."""
  label: String
}

input ConfigurationItemInput {
  """Name of the field to update."""
  name: String!

  """Value of the given field to update."""
  value: String
}

"""An enumeration."""
enum ConfigurationTypeFieldEnum {
  STRING
  MULTILINE
  BOOLEAN
  SECRET
  PASSWORD
  SECRETMULTILINE
  OUTPUT
}

"""Confirm user account with token sent by email during registration."""
type ConfirmAccount {
  """An activated user account."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""
Confirm the email change of the logged-in user. 

Requires one of the following permissions: AUTHENTICATED_USER.
"""
type ConfirmEmailChange {
  """A user instance with a new email."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""An enumeration."""
enum CountryCode {
  AF
  AX
  AL
  DZ
  AS
  AD
  AO
  AI
  AQ
  AG
  AR
  AM
  AW
  AU
  AT
  AZ
  BS
  BH
  BD
  BB
  BY
  BE
  BZ
  BJ
  BM
  BT
  BO
  BQ
  BA
  BW
  BV
  BR
  IO
  BN
  BG
  BF
  BI
  CV
  KH
  CM
  CA
  KY
  CF
  TD
  CL
  CN
  CX
  CC
  CO
  KM
  CG
  CD
  CK
  CR
  CI
  HR
  CU
  CW
  CY
  CZ
  DK
  DJ
  DM
  DO
  EC
  EG
  SV
  GQ
  ER
  EE
  SZ
  ET
  EU
  FK
  FO
  FJ
  FI
  FR
  GF
  PF
  TF
  GA
  GM
  GE
  DE
  GH
  GI
  GR
  GL
  GD
  GP
  GU
  GT
  GG
  GN
  GW
  GY
  HT
  HM
  VA
  HN
  HK
  HU
  IS
  IN
  ID
  IR
  IQ
  IE
  IM
  IL
  IT
  JM
  JP
  JE
  JO
  KZ
  KE
  KI
  KW
  KG
  LA
  LV
  LB
  LS
  LR
  LY
  LI
  LT
  LU
  MO
  MG
  MW
  MY
  MV
  ML
  MT
  MH
  MQ
  MR
  MU
  YT
  MX
  FM
  MD
  MC
  MN
  ME
  MS
  MA
  MZ
  MM
  NA
  NR
  NP
  NL
  NC
  NZ
  NI
  NE
  NG
  NU
  NF
  KP
  MK
  MP
  NO
  OM
  PK
  PW
  PS
  PA
  PG
  PY
  PE
  PH
  PN
  PL
  PT
  PR
  QA
  RE
  RO
  RU
  RW
  BL
  SH
  KN
  LC
  MF
  PM
  VC
  WS
  SM
  ST
  SA
  SN
  RS
  SC
  SL
  SG
  SX
  SK
  SI
  SB
  SO
  ZA
  GS
  KR
  SS
  ES
  LK
  SD
  SR
  SJ
  SE
  CH
  SY
  TW
  TJ
  TZ
  TH
  TL
  TG
  TK
  TO
  TT
  TN
  TR
  TM
  TC
  TV
  UG
  UA
  AE
  GB
  UM
  US
  UY
  UZ
  VU
  VE
  VN
  VG
  VI
  WF
  EH
  YE
  ZM
  ZW
}

type CountryDisplay {
  """Country code."""
  code: String!

  """Country name."""
  country: String!

  """Country tax."""
  vat: VAT @deprecated(reason: "This field will be removed in Saleor 4.0. Use `TaxClassCountryRate` type to manage tax rates per country.")
}

input CountryFilterInput {
  """
  Boolean for filtering countries by having shipping zone assigned.If 'true', return countries with shipping zone assigned.If 'false', return countries without any shipping zone assigned.If the argument is not provided (null), return all countries.
  """
  attachedToShippingZones: Boolean
}

input CountryRateInput {
  """Country in which this rate applies."""
  countryCode: CountryCode!

  """
  Tax rate value provided as percentage. Example: provide `23` to represent `23%` tax rate.
  """
  rate: Float!
}

input CountryRateUpdateInput {
  """Country in which this rate applies."""
  countryCode: CountryCode!

  """
  Tax rate value provided as percentage. Example: provide `23` to represent `23%` tax rate. Provide `null` to remove the particular rate.
  """
  rate: Float
}

"""Create JWT token."""
type CreateToken {
  """JWT token, required to authenticate."""
  token: String

  """JWT refresh token, required to re-generate access token."""
  refreshToken: String

  """CSRF token required to re-generate access token."""
  csrfToken: String

  """A user instance."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

type CreditCard {
  """Card brand."""
  brand: String!

  """First 4 digits of the card number."""
  firstDigits: String

  """Last 4 digits of the card number."""
  lastDigits: String!

  """Two-digit number representing the card’s expiration month."""
  expMonth: Int

  """Four-digit number representing the card’s expiration year."""
  expYear: Int
}

"""
Deletes customers. 

Requires one of the following permissions: MANAGE_USERS.
"""
type CustomerBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""
Creates a new customer. 

Requires one of the following permissions: MANAGE_USERS.
"""
type CustomerCreate {
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  user: User
}

"""
Event sent when new customer user is created.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type CustomerCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The user the event relates to."""
  user: User
}

"""
Deletes a customer. 

Requires one of the following permissions: MANAGE_USERS.
"""
type CustomerDelete {
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  user: User
}

"""History log of the customer."""
type CustomerEvent implements Node {
  id: ID!

  """Date when event happened at in ISO 8601 format."""
  date: DateTime

  """Customer event type."""
  type: CustomerEventsEnum

  """User who performed the action."""
  user: User

  """App that performed the action."""
  app: App

  """Content of the event."""
  message: String

  """Number of objects concerned by the event."""
  count: Int

  """The concerned order."""
  order: Order

  """The concerned order line."""
  orderLine: OrderLine
}

"""An enumeration."""
enum CustomerEventsEnum {
  ACCOUNT_CREATED
  ACCOUNT_ACTIVATED
  ACCOUNT_DEACTIVATED
  PASSWORD_RESET_LINK_SENT
  PASSWORD_RESET
  EMAIL_CHANGED_REQUEST
  PASSWORD_CHANGED
  EMAIL_CHANGED
  PLACED_ORDER
  NOTE_ADDED_TO_ORDER
  DIGITAL_LINK_DOWNLOADED
  CUSTOMER_DELETED
  NAME_ASSIGNED
  EMAIL_ASSIGNED
  NOTE_ADDED
}

input CustomerFilterInput {
  dateJoined: DateRangeInput
  numberOfOrders: IntRangeInput
  placedOrders: DateRangeInput
  search: String
  metadata: [MetadataFilter!]

  """
  Filter by ids. 
  
  Added in Saleor 3.8.
  """
  ids: [ID!]
  updatedAt: DateTimeRangeInput
}

input CustomerInput {
  """Billing address of the customer."""
  defaultBillingAddress: AddressInput

  """Shipping address of the customer."""
  defaultShippingAddress: AddressInput

  """Given name."""
  firstName: String

  """Family name."""
  lastName: String

  """The unique email address of the user."""
  email: String

  """User account is active."""
  isActive: Boolean

  """A note about the user."""
  note: String

  """User language code."""
  languageCode: LanguageCodeEnum
}

"""
Event sent when customer user metadata is updated.

Added in Saleor 3.8.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type CustomerMetadataUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The user the event relates to."""
  user: User
}

"""
Updates an existing customer. 

Requires one of the following permissions: MANAGE_USERS.
"""
type CustomerUpdate {
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  user: User
}

"""
Event sent when customer user is updated.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type CustomerUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The user the event relates to."""
  user: User
}

"""
The `Date` scalar type represents a Date
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar Date

input DateRangeInput {
  """Start date."""
  gte: Date

  """End date."""
  lte: Date
}

"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

input DateTimeRangeInput {
  """Start date."""
  gte: DateTime

  """End date."""
  lte: DateTime
}

"""
Deactivate all JWT tokens of the currently authenticated user. 

Requires one of the following permissions: AUTHENTICATED_USER.
"""
type DeactivateAllUserTokens {
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""
Delete metadata of an object. To use it, you need to have access to the modified object.
"""
type DeleteMetadata {
  metadataErrors: [MetadataError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MetadataError!]!
  item: ObjectWithMetadata
}

"""
Delete object's private metadata. To use it, you need to be an authenticated staff user or an app and have access to the modified object.
"""
type DeletePrivateMetadata {
  metadataErrors: [MetadataError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MetadataError!]!
  item: ObjectWithMetadata
}

"""
Represents a delivery method chosen for the checkout. `Warehouse` type is used when checkout is marked as "click and collect" and `ShippingMethod` otherwise.

Added in Saleor 3.1.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
union DeliveryMethod = Warehouse | ShippingMethod

type DigitalContent implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  useDefaultSettings: Boolean!
  automaticFulfillment: Boolean!
  contentFile: String!
  maxDownloads: Int
  urlValidDays: Int

  """List of URLs for the digital variant."""
  urls: [DigitalContentUrl!]

  """Product variant assigned to digital content."""
  productVariant: ProductVariant!
}

type DigitalContentCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [DigitalContentCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type DigitalContentCountableEdge {
  """The item at the end of the edge."""
  node: DigitalContent!

  """A cursor for use in pagination."""
  cursor: String!
}

"""
Create new digital content. This mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type DigitalContentCreate {
  variant: ProductVariant
  content: DigitalContent
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
}

"""
Remove digital content assigned to given variant. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type DigitalContentDelete {
  variant: ProductVariant
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
}

input DigitalContentInput {
  """Use default digital content settings for this product."""
  useDefaultSettings: Boolean!

  """
  Determines how many times a download link can be accessed by a customer.
  """
  maxDownloads: Int

  """
  Determines for how many days a download link is active since it was generated.
  """
  urlValidDays: Int

  """Overwrite default automatic_fulfillment setting for variant."""
  automaticFulfillment: Boolean

  """
  Fields required to update the digital content metadata.
  
  Added in Saleor 3.8.
  """
  metadata: [MetadataInput!]

  """
  Fields required to update the digital content private metadata.
  
  Added in Saleor 3.8.
  """
  privateMetadata: [MetadataInput!]
}

"""
Update digital content. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type DigitalContentUpdate {
  variant: ProductVariant
  content: DigitalContent
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
}

input DigitalContentUploadInput {
  """Use default digital content settings for this product."""
  useDefaultSettings: Boolean!

  """
  Determines how many times a download link can be accessed by a customer.
  """
  maxDownloads: Int

  """
  Determines for how many days a download link is active since it was generated.
  """
  urlValidDays: Int

  """Overwrite default automatic_fulfillment setting for variant."""
  automaticFulfillment: Boolean

  """
  Fields required to update the digital content metadata.
  
  Added in Saleor 3.8.
  """
  metadata: [MetadataInput!]

  """
  Fields required to update the digital content private metadata.
  
  Added in Saleor 3.8.
  """
  privateMetadata: [MetadataInput!]

  """Represents an file in a multipart request."""
  contentFile: Upload!
}

type DigitalContentUrl implements Node {
  id: ID!
  content: DigitalContent!
  created: DateTime!
  downloadNum: Int!

  """URL for digital content."""
  url: String

  """UUID of digital content."""
  token: UUID!
}

"""
Generate new URL to digital content. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type DigitalContentUrlCreate {
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
  digitalContentUrl: DigitalContentUrl
}

input DigitalContentUrlCreateInput {
  """Digital content ID which URL will belong to."""
  content: ID!
}

type DiscountError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """List of products IDs which causes the error."""
  products: [ID!]

  """The error code."""
  code: DiscountErrorCode!

  """List of channels IDs which causes the error."""
  channels: [ID!]
}

"""An enumeration."""
enum DiscountErrorCode {
  ALREADY_EXISTS
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  REQUIRED
  UNIQUE
  CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT
  DUPLICATED_INPUT_ITEM
}

enum DiscountStatusEnum {
  ACTIVE
  EXPIRED
  SCHEDULED
}

enum DiscountValueTypeEnum {
  FIXED
  PERCENTAGE
}

"""An enumeration."""
enum DistanceUnitsEnum {
  CM
  M
  KM
  FT
  YD
  INCH
}

"""whether this query should be cached (Hasura Cloud only)"""
directive @cached(
  """measured in seconds"""
  ttl: Int! = 60

  """Inform if SSL is enabled."""
  sslEnabled: Boolean!

  """Shop's absolute URL."""
  url: String!
}

"""
Deletes draft orders. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type DraftOrderBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  orderErrors: [OrderError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [OrderError!]!
}

"""
Completes creating an order. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type DraftOrderComplete {
  """Completed order."""
  order: Order
  orderErrors: [OrderError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [OrderError!]!
}

"""
Creates a new draft order. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type DraftOrderCreate {
  orderErrors: [OrderError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [OrderError!]!
  order: Order
}

input DraftOrderCreateInput {
  """Billing address of the customer."""
  billingAddress: AddressInput

  """Customer associated with the draft order."""
  user: ID

  """Email address of the customer."""
  userEmail: String

  """Discount amount for the order."""
  discount: PositiveDecimal

  """Shipping address of the customer."""
  shippingAddress: AddressInput

  """ID of a selected shipping method."""
  shippingMethod: ID

  """ID of the voucher associated with the order."""
  voucher: ID

  """A note from a customer. Visible by customers in the order summary."""
  customerNote: String

  """ID of the channel associated with the order."""
  channelId: ID

  """
  URL of a view where users should be redirected to see the order details. URL in RFC 1808 format.
  """
  redirectUrl: String

  """Variant line input consisting of variant ID and quantity of products."""
  lines: [OrderLineCreateInput!]
}

"""
Event sent when new draft order is created.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type DraftOrderCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The order the event relates to."""
  order: Order
}

"""
Deletes a draft order. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type DraftOrderDelete {
  orderErrors: [OrderError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [OrderError!]!
  order: Order
}

"""
Event sent when draft order is deleted.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type DraftOrderDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The order the event relates to."""
  order: Order
}

input DraftOrderInput {
  """Billing address of the customer."""
  billingAddress: AddressInput

  """Customer associated with the draft order."""
  user: ID

  """Email address of the customer."""
  userEmail: String

  """Discount amount for the order."""
  discount: PositiveDecimal

  """Shipping address of the customer."""
  shippingAddress: AddressInput

  """ID of a selected shipping method."""
  shippingMethod: ID

  """ID of the voucher associated with the order."""
  voucher: ID

  """A note from a customer. Visible by customers in the order summary."""
  customerNote: String

  """ID of the channel associated with the order."""
  channelId: ID

  """
  URL of a view where users should be redirected to see the order details. URL in RFC 1808 format.
  """
  redirectUrl: String
}

"""
Deletes order lines. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type DraftOrderLinesBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  orderErrors: [OrderError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [OrderError!]!
}

"""
Updates a draft order. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type DraftOrderUpdate {
  orderErrors: [OrderError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [OrderError!]!
  order: Order
}

"""
Event sent when draft order is updated.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type DraftOrderUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The order the event relates to."""
  order: Order
}

interface Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App
}

"""Event delivery."""
type EventDelivery implements Node {
  id: ID!
  createdAt: DateTime!

  """Event delivery status."""
  status: EventDeliveryStatusEnum!

  """Webhook event type."""
  eventType: WebhookEventTypeEnum!

  """Event delivery attempts."""
  attempts(
    """Event delivery sorter"""
    sortBy: EventDeliveryAttemptSortingInput

    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): EventDeliveryAttemptCountableConnection

  """Event payload."""
  payload: String
}

"""Event delivery attempts."""
type EventDeliveryAttempt implements Node {
  id: ID!

  """Event delivery creation date and time."""
  createdAt: DateTime!

  """Task id for delivery attempt."""
  taskId: String

  """Delivery attempt duration."""
  duration: Float

  """Delivery attempt response content."""
  response: String

  """Response headers for delivery attempt."""
  responseHeaders: String

  """Delivery attempt response status code."""
  responseStatusCode: Int

  """Request headers for delivery attempt."""
  requestHeaders: String

  """Event delivery status."""
  status: EventDeliveryStatusEnum!
}

type EventDeliveryAttemptCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [EventDeliveryAttemptCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type EventDeliveryAttemptCountableEdge {
  """The item at the end of the edge."""
  node: EventDeliveryAttempt!

  """A cursor for use in pagination."""
  cursor: String!
}

enum EventDeliveryAttemptSortField {
  """Sort event delivery attempts by created at."""
  CREATED_AT
}

input EventDeliveryAttemptSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort attempts by the selected field."""
  field: EventDeliveryAttemptSortField!
}

type EventDeliveryCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [EventDeliveryCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type EventDeliveryCountableEdge {
  """The item at the end of the edge."""
  node: EventDelivery!

  """A cursor for use in pagination."""
  cursor: String!
}

input EventDeliveryFilterInput {
  status: EventDeliveryStatusEnum
  eventType: WebhookEventTypeEnum
}

"""
Retries event delivery. 

Requires one of the following permissions: MANAGE_APPS.
"""
type EventDeliveryRetry {
  """Event delivery."""
  delivery: EventDelivery
  errors: [WebhookError!]!
}

enum EventDeliverySortField {
  """Sort event deliveries by created at."""
  CREATED_AT
}

input EventDeliverySortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort deliveries by the selected field."""
  field: EventDeliverySortField!
}

enum EventDeliveryStatusEnum {
  PENDING
  SUCCESS
  FAILED
}

type ExportError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: ExportErrorCode!
}

"""An enumeration."""
enum ExportErrorCode {
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  REQUIRED
}

"""History log of export file."""
type ExportEvent implements Node {
  """The ID of the object."""
  id: ID!

  """Date when event happened at in ISO 8601 format."""
  date: DateTime!

  """Export event type."""
  type: ExportEventsEnum!

  """
  User who performed the action. Requires one of the following permissions: OWNER, MANAGE_STAFF.
  """
  user: User

  """
  App which performed the action. Requires one of the following permissions: OWNER, MANAGE_APPS.
  """
  app: App

  """Content of the event."""
  message: String!
}

"""An enumeration."""
enum ExportEventsEnum {
  EXPORT_PENDING
  EXPORT_SUCCESS
  EXPORT_FAILED
  EXPORT_DELETED
  EXPORTED_FILE_SENT
  EXPORT_FAILED_INFO_SENT
}

"""Represents a job data of exported file."""
type ExportFile implements Node & Job {
  id: ID!

  """Job status."""
  status: JobStatusEnum!

  """Created date time of job in ISO 8601 format."""
  createdAt: DateTime!

  """Date time of job last update in ISO 8601 format."""
  updatedAt: DateTime!

  """Job message."""
  message: String

  """The URL of field to download."""
  url: String

  """List of events associated with the export."""
  events: [ExportEvent!]
  user: User
  app: App
}

"""whether this query should be cached (Hasura Cloud only)"""
directive @cached(
  """measured in seconds"""
  ttl: Int! = 60

  """refresh the cache entry"""
  refresh: Boolean! = false
) on QUERY

"""
columns and relationships of "Action"
"""
type Action {
  """An array relationship"""
  EventLogs(
    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): [EventLog!]!

  """An aggregate relationship"""
  EventLogs_aggregate(
    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): EventLog_aggregate!
  action: String!
  content: String!
  createdAt: timestamp!
  domain: String!
  id: String!
  intent: String!
  type: ActionType!
}

scalar ActionType

"""
Boolean expression to compare columns of type "ActionType". All fields are combined with logical 'AND'.
"""
input ActionType_comparison_exp {
  _eq: ActionType
  _gt: ActionType
  _gte: ActionType
  _in: [ActionType!]
  _is_null: Boolean
  _lt: ActionType
  _lte: ActionType
  _neq: ActionType
  _nin: [ActionType!]
}

"""
aggregated selection of "Action"
"""
type Action_aggregate {
  aggregate: Action_aggregate_fields
  nodes: [Action!]!
}

"""
aggregate fields of "Action"
"""
type Action_aggregate_fields {
  count(columns: [Action_select_column!], distinct: Boolean): Int!
  max: Action_max_fields
  min: Action_min_fields
}

"""
Boolean expression to filter rows from the table "Action". All fields are combined with a logical 'AND'.
"""
input Action_bool_exp {
  EventLogs: EventLog_bool_exp
  EventLogs_aggregate: EventLog_aggregate_bool_exp
  _and: [Action_bool_exp!]
  _not: Action_bool_exp
  _or: [Action_bool_exp!]
  action: String_comparison_exp
  content: String_comparison_exp
  createdAt: timestamp_comparison_exp
  domain: String_comparison_exp
  id: String_comparison_exp
  intent: String_comparison_exp
  type: ActionType_comparison_exp
}

"""
unique or primary key constraints on table "Action"
"""
enum Action_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Action_pkey
}

"""
input type for inserting data into table "Action"
"""
input Action_insert_input {
  EventLogs: EventLog_arr_rel_insert_input
  action: String
  content: String
  createdAt: timestamp
  domain: String
  id: String
  intent: String
  type: ActionType
}

"""aggregate max on columns"""
type Action_max_fields {
  action: String
  content: String
  createdAt: timestamp
  domain: String
  id: String
  intent: String
  type: ActionType
}

"""aggregate min on columns"""
type Action_min_fields {
  action: String
  content: String
  createdAt: timestamp
  domain: String
  id: String
  intent: String
  type: ActionType
}

"""
response of any mutation on the table "Action"
"""
type Action_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Action!]!
}

"""
input type for inserting object relation for remote table "Action"
"""
input Action_obj_rel_insert_input {
  data: Action_insert_input!

  """upsert condition"""
  on_conflict: Action_on_conflict
}

"""
on_conflict condition type for table "Action"
"""
input Action_on_conflict {
  constraint: Action_constraint!
  update_columns: [Action_update_column!]! = []
  where: Action_bool_exp
}

"""Ordering options when selecting data from "Action"."""
input Action_order_by {
  EventLogs_aggregate: EventLog_aggregate_order_by
  action: order_by
  content: order_by
  createdAt: order_by
  domain: order_by
  id: order_by
  intent: order_by
  type: order_by
}

"""primary key columns input for table: Action"""
input Action_pk_columns_input {
  id: String!
}

"""
select columns of table "Action"
"""
enum Action_select_column {
  """column name"""
  action

  """column name"""
  content

  """column name"""
  createdAt

  """column name"""
  domain

  """column name"""
  id

  """column name"""
  intent

  """column name"""
  type
}

"""
input type for updating data in table "Action"
"""
input Action_set_input {
  action: String
  content: String
  createdAt: timestamp
  domain: String
  id: String
  intent: String
  type: ActionType
}

"""
Streaming cursor of the table "Action"
"""
input Action_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: Action_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input Action_stream_cursor_value_input {
  action: String
  content: String
  createdAt: timestamp
  domain: String
  id: String
  intent: String
  type: ActionType
}

"""
update columns of table "Action"
"""
enum Action_update_column {
  """column name"""
  action

  """column name"""
  content

  """column name"""
  createdAt

  """column name"""
  domain

  """column name"""
  id

  """column name"""
  intent

  """column name"""
  type
}

input Action_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: Action_set_input
  where: Action_bool_exp!
}

"""
columns and relationships of "Activity"
"""
type Activity {
  """An array relationship"""
  TaskDefinitions(
    """distinct select on columns"""
    distinct_on: [TaskDefinition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): [TaskDefinition!]!

  """An aggregate relationship"""
  TaskDefinitions_aggregate(
    """distinct select on columns"""
    distinct_on: [TaskDefinition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): TaskDefinition_aggregate!

  """An array relationship"""
  Triggers(
    """distinct select on columns"""
    distinct_on: [Trigger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Trigger_order_by!]

    """filter the rows returned"""
    where: Trigger_bool_exp
  ): [Trigger!]!

  """An aggregate relationship"""
  Triggers_aggregate(
    """distinct select on columns"""
    distinct_on: [Trigger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Trigger_order_by!]

    """filter the rows returned"""
    where: Trigger_bool_exp
  ): Trigger_aggregate!

  """An object relationship"""
  Workflow: Workflow!
  config(
    """JSON select path"""
    path: String
  ): jsonb!
  createdAt: timestamp!
  description: String!
  id: String!
  name: String!
  updatedAt: timestamp!
  workflowId: String!
}

"""
aggregated selection of "Activity"
"""
type Activity_aggregate {
  aggregate: Activity_aggregate_fields
  nodes: [Activity!]!
}

input Activity_aggregate_bool_exp {
  count: Activity_aggregate_bool_exp_count
}

input Activity_aggregate_bool_exp_count {
  arguments: [Activity_select_column!]
  distinct: Boolean
  filter: Activity_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "Activity"
"""
type Activity_aggregate_fields {
  count(columns: [Activity_select_column!], distinct: Boolean): Int!
  max: Activity_max_fields
  min: Activity_min_fields
}

"""
order by aggregate values of table "Activity"
"""
input Activity_aggregate_order_by {
  count: order_by
  max: Activity_max_order_by
  min: Activity_min_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input Activity_append_input {
  config: jsonb
}

"""
input type for inserting array relation for remote table "Activity"
"""
input Activity_arr_rel_insert_input {
  data: [Activity_insert_input!]!

  """upsert condition"""
  on_conflict: Activity_on_conflict
}

"""
Boolean expression to filter rows from the table "Activity". All fields are combined with a logical 'AND'.
"""
input Activity_bool_exp {
  TaskDefinitions: TaskDefinition_bool_exp
  TaskDefinitions_aggregate: TaskDefinition_aggregate_bool_exp
  Triggers: Trigger_bool_exp
  Triggers_aggregate: Trigger_aggregate_bool_exp
  Workflow: Workflow_bool_exp
  _and: [Activity_bool_exp!]
  _not: Activity_bool_exp
  _or: [Activity_bool_exp!]
  config: jsonb_comparison_exp
  createdAt: timestamp_comparison_exp
  description: String_comparison_exp
  id: String_comparison_exp
  name: String_comparison_exp
  updatedAt: timestamp_comparison_exp
  workflowId: String_comparison_exp
}

"""
unique or primary key constraints on table "Activity"
"""
enum Activity_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Activity_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input Activity_delete_at_path_input {
  config: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input Activity_delete_elem_input {
  config: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input Activity_delete_key_input {
  config: String
}

"""
input type for inserting data into table "Activity"
"""
input Activity_insert_input {
  TaskDefinitions: TaskDefinition_arr_rel_insert_input
  Triggers: Trigger_arr_rel_insert_input
  Workflow: Workflow_obj_rel_insert_input
  config: jsonb
  createdAt: timestamp
  description: String
  id: String
  name: String
  updatedAt: timestamp
  workflowId: String
}

"""aggregate max on columns"""
type Activity_max_fields {
  createdAt: timestamp
  description: String
  id: String
  name: String
  updatedAt: timestamp
  workflowId: String
}

"""
order by max() on columns of table "Activity"
"""
input Activity_max_order_by {
  createdAt: order_by
  description: order_by
  id: order_by
  name: order_by
  updatedAt: order_by
  workflowId: order_by
}

"""aggregate min on columns"""
type Activity_min_fields {
  createdAt: timestamp
  description: String
  id: String
  name: String
  updatedAt: timestamp
  workflowId: String
}

"""
order by min() on columns of table "Activity"
"""
input Activity_min_order_by {
  createdAt: order_by
  description: order_by
  id: order_by
  name: order_by
  updatedAt: order_by
  workflowId: order_by
}

"""
response of any mutation on the table "Activity"
"""
type Activity_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Activity!]!
}

"""
input type for inserting object relation for remote table "Activity"
"""
input Activity_obj_rel_insert_input {
  data: Activity_insert_input!

  """upsert condition"""
  on_conflict: Activity_on_conflict
}

"""
on_conflict condition type for table "Activity"
"""
input Activity_on_conflict {
  constraint: Activity_constraint!
  update_columns: [Activity_update_column!]! = []
  where: Activity_bool_exp
}

"""Ordering options when selecting data from "Activity"."""
input Activity_order_by {
  TaskDefinitions_aggregate: TaskDefinition_aggregate_order_by
  Triggers_aggregate: Trigger_aggregate_order_by
  Workflow: Workflow_order_by
  config: order_by
  createdAt: order_by
  description: order_by
  id: order_by
  name: order_by
  updatedAt: order_by
  workflowId: order_by
}

"""primary key columns input for table: Activity"""
input Activity_pk_columns_input {
  id: String!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input Activity_prepend_input {
  config: jsonb
}

"""
select columns of table "Activity"
"""
enum Activity_select_column {
  """column name"""
  config

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updatedAt

  """column name"""
  workflowId
}

"""
input type for updating data in table "Activity"
"""
input Activity_set_input {
  config: jsonb
  createdAt: timestamp
  description: String
  id: String
  name: String
  updatedAt: timestamp
  workflowId: String
}

"""
Streaming cursor of the table "Activity"
"""
input Activity_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: Activity_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input Activity_stream_cursor_value_input {
  config: jsonb
  createdAt: timestamp
  description: String
  id: String
  name: String
  updatedAt: timestamp
  workflowId: String
}

"""
update columns of table "Activity"
"""
enum Activity_update_column {
  """column name"""
  config

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updatedAt

  """column name"""
  workflowId
}

input Activity_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: Activity_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: Activity_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: Activity_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: Activity_delete_key_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: Activity_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: Activity_set_input
  where: Activity_bool_exp!
}

type Authbe {
  """JWT access token"""
  accessToken: JWTbe!

  """JWT refresh token"""
  refreshToken: JWTbe!
  user: Userbe!
}

"""
Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

input ChangePasswordInputbe {
  newPassword: String!
  oldPassword: String!
}

"""
columns and relationships of "Comment"
"""
type Comment {
  """An object relationship"""
  Task: Task!

  """An object relationship"""
  User: User!
  content: String!
  createdAt: timestamp!
  creatorId: String!
  id: String!
  taskId: String!
  updatedAt: timestamp!
}

"""
aggregated selection of "Comment"
"""
type Comment_aggregate {
  aggregate: Comment_aggregate_fields
  nodes: [Comment!]!
}

input Comment_aggregate_bool_exp {
  count: Comment_aggregate_bool_exp_count
}

input Comment_aggregate_bool_exp_count {
  arguments: [Comment_select_column!]
  distinct: Boolean
  filter: Comment_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "Comment"
"""
type Comment_aggregate_fields {
  count(columns: [Comment_select_column!], distinct: Boolean): Int!
  max: Comment_max_fields
  min: Comment_min_fields
}

"""
order by aggregate values of table "Comment"
"""
input Comment_aggregate_order_by {
  count: order_by
  max: Comment_max_order_by
  min: Comment_min_order_by
}

"""
input type for inserting array relation for remote table "Comment"
"""
input Comment_arr_rel_insert_input {
  data: [Comment_insert_input!]!

  """upsert condition"""
  on_conflict: Comment_on_conflict
}

"""
Boolean expression to filter rows from the table "Comment". All fields are combined with a logical 'AND'.
"""
input Comment_bool_exp {
  Task: Task_bool_exp
  User: User_bool_exp
  _and: [Comment_bool_exp!]
  _not: Comment_bool_exp
  _or: [Comment_bool_exp!]
  content: String_comparison_exp
  createdAt: timestamp_comparison_exp
  creatorId: String_comparison_exp
  id: String_comparison_exp
  taskId: String_comparison_exp
  updatedAt: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "Comment"
"""
enum Comment_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Comment_pkey
}

"""
input type for inserting data into table "Comment"
"""
input Comment_insert_input {
  Task: Task_obj_rel_insert_input
  User: User_obj_rel_insert_input
  content: String
  createdAt: timestamp
  creatorId: String
  id: String
  taskId: String
  updatedAt: timestamp
}

"""aggregate max on columns"""
type Comment_max_fields {
  content: String
  createdAt: timestamp
  creatorId: String
  id: String
  taskId: String
  updatedAt: timestamp
}

"""
order by max() on columns of table "Comment"
"""
input Comment_max_order_by {
  content: order_by
  createdAt: order_by
  creatorId: order_by
  id: order_by
  taskId: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type Comment_min_fields {
  content: String
  createdAt: timestamp
  creatorId: String
  id: String
  taskId: String
  updatedAt: timestamp
}

"""
order by min() on columns of table "Comment"
"""
input Comment_min_order_by {
  content: order_by
  createdAt: order_by
  creatorId: order_by
  id: order_by
  taskId: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "Comment"
"""
type Comment_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Comment!]!
}

"""
on_conflict condition type for table "Comment"
"""
input Comment_on_conflict {
  constraint: Comment_constraint!
  update_columns: [Comment_update_column!]! = []
  where: Comment_bool_exp
}

"""Ordering options when selecting data from "Comment"."""
input Comment_order_by {
  Task: Task_order_by
  User: User_order_by
  content: order_by
  createdAt: order_by
  creatorId: order_by
  id: order_by
  taskId: order_by
  updatedAt: order_by
}

"""primary key columns input for table: Comment"""
input Comment_pk_columns_input {
  id: String!
}

"""
select columns of table "Comment"
"""
enum Comment_select_column {
  """column name"""
  content

  """column name"""
  createdAt

  """column name"""
  creatorId

  """column name"""
  id

  """column name"""
  taskId

  """column name"""
  updatedAt
}

"""
input type for updating data in table "Comment"
"""
input Comment_set_input {
  content: String
  createdAt: timestamp
  creatorId: String
  id: String
  taskId: String
  updatedAt: timestamp
}

"""
Streaming cursor of the table "Comment"
"""
input Comment_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: Comment_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input Comment_stream_cursor_value_input {
  content: String
  createdAt: timestamp
  creatorId: String
  id: String
  taskId: String
  updatedAt: timestamp
}

"""
update columns of table "Comment"
"""
enum Comment_update_column {
  """column name"""
  content

  """column name"""
  createdAt

  """column name"""
  creatorId

  """column name"""
  id

  """column name"""
  taskId

  """column name"""
  updatedAt
}

input Comment_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: Comment_set_input
  where: Comment_bool_exp!
}

input CreatePostInputbe {
  content: String!
  title: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTimebe

"""
columns and relationships of "EventLog"
"""
type EventLog {
  """An object relationship"""
  Action: Action!

  """An object relationship"""
  Organization: Organization!

  """An object relationship"""
  Task: Task

  """An object relationship"""
  User: User
  actionId: String!
  createdAt: timestamp!
  id: String!
  organizationId: String!
  taskId: String
  userId: String
}

"""
aggregated selection of "EventLog"
"""
type EventLog_aggregate {
  aggregate: EventLog_aggregate_fields
  nodes: [EventLog!]!
}

input EventLog_aggregate_bool_exp {
  count: EventLog_aggregate_bool_exp_count
}

input EventLog_aggregate_bool_exp_count {
  arguments: [EventLog_select_column!]
  distinct: Boolean
  filter: EventLog_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "EventLog"
"""
type EventLog_aggregate_fields {
  count(columns: [EventLog_select_column!], distinct: Boolean): Int!
  max: EventLog_max_fields
  min: EventLog_min_fields
}

"""
order by aggregate values of table "EventLog"
"""
input EventLog_aggregate_order_by {
  count: order_by
  max: EventLog_max_order_by
  min: EventLog_min_order_by
}

"""
input type for inserting array relation for remote table "EventLog"
"""
input EventLog_arr_rel_insert_input {
  data: [EventLog_insert_input!]!

  """upsert condition"""
  on_conflict: EventLog_on_conflict
}

"""
Boolean expression to filter rows from the table "EventLog". All fields are combined with a logical 'AND'.
"""
input EventLog_bool_exp {
  Action: Action_bool_exp
  Organization: Organization_bool_exp
  Task: Task_bool_exp
  User: User_bool_exp
  _and: [EventLog_bool_exp!]
  _not: EventLog_bool_exp
  _or: [EventLog_bool_exp!]
  actionId: String_comparison_exp
  createdAt: timestamp_comparison_exp
  id: String_comparison_exp
  organizationId: String_comparison_exp
  taskId: String_comparison_exp
  userId: String_comparison_exp
}

"""
unique or primary key constraints on table "EventLog"
"""
enum EventLog_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  EventLog_pkey
}

"""
input type for inserting data into table "EventLog"
"""
input EventLog_insert_input {
  Action: Action_obj_rel_insert_input
  Organization: Organization_obj_rel_insert_input
  Task: Task_obj_rel_insert_input
  User: User_obj_rel_insert_input
  actionId: String
  createdAt: timestamp
  id: String
  organizationId: String
  taskId: String
  userId: String
}

"""aggregate max on columns"""
type EventLog_max_fields {
  actionId: String
  createdAt: timestamp
  id: String
  organizationId: String
  taskId: String
  userId: String
}

"""
order by max() on columns of table "EventLog"
"""
input EventLog_max_order_by {
  actionId: order_by
  createdAt: order_by
  id: order_by
  organizationId: order_by
  taskId: order_by
  userId: order_by
}

"""aggregate min on columns"""
type EventLog_min_fields {
  actionId: String
  createdAt: timestamp
  id: String
  organizationId: String
  taskId: String
  userId: String
}

"""
order by min() on columns of table "EventLog"
"""
input EventLog_min_order_by {
  actionId: order_by
  createdAt: order_by
  id: order_by
  organizationId: order_by
  taskId: order_by
  userId: order_by
}

"""
response of any mutation on the table "EventLog"
"""
type EventLog_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [EventLog!]!
}

"""
on_conflict condition type for table "EventLog"
"""
input EventLog_on_conflict {
  constraint: EventLog_constraint!
  update_columns: [EventLog_update_column!]! = []
  where: EventLog_bool_exp
}

"""Ordering options when selecting data from "EventLog"."""
input EventLog_order_by {
  Action: Action_order_by
  Organization: Organization_order_by
  Task: Task_order_by
  User: User_order_by
  actionId: order_by
  createdAt: order_by
  id: order_by
  organizationId: order_by
  taskId: order_by
  userId: order_by
}

"""primary key columns input for table: EventLog"""
input EventLog_pk_columns_input {
  id: String!
}

"""
select columns of table "EventLog"
"""
enum EventLog_select_column {
  """column name"""
  actionId

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  taskId

  """column name"""
  userId
}

"""
input type for updating data in table "EventLog"
"""
input EventLog_set_input {
  actionId: String
  createdAt: timestamp
  id: String
  organizationId: String
  taskId: String
  userId: String
}

"""
Streaming cursor of the table "EventLog"
"""
input EventLog_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: EventLog_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input EventLog_stream_cursor_value_input {
  actionId: String
  createdAt: timestamp
  id: String
  organizationId: String
  taskId: String
  userId: String
}

"""
update columns of table "EventLog"
"""
enum EventLog_update_column {
  """column name"""
  actionId

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  taskId

  """column name"""
  userId
}

input EventLog_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: EventLog_set_input
  where: EventLog_bool_exp!
}

"""
columns and relationships of "File"
"""
type File {
  """An object relationship"""
  File: File

  """An array relationship"""
  Files(
    """distinct select on columns"""
    distinct_on: [File_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [File_order_by!]

    """filter the rows returned"""
    where: File_bool_exp
  ): [File!]!

  """An aggregate relationship"""
  Files_aggregate(
    """distinct select on columns"""
    distinct_on: [File_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [File_order_by!]

    """filter the rows returned"""
    where: File_bool_exp
  ): File_aggregate!

  """An object relationship"""
  Organization: Organization!
  cdnUrl: String!
  createdAt: timestamp!
  data: String!
  encoding: String!
  fileType: FileType!
  filename: String!
  id: String!
  mimetype: String!
  organizationId: String!
  updatedAt: timestamp!
  varantName: String
  variantKey: String
  variantOfId: String
  variantValue: String
}

scalar FileType

"""
Boolean expression to compare columns of type "FileType". All fields are combined with logical 'AND'.
"""
input FileType_comparison_exp {
  _eq: FileType
  _gt: FileType
  _gte: FileType
  _in: [FileType!]
  _is_null: Boolean
  _lt: FileType
  _lte: FileType
  _neq: FileType
  _nin: [FileType!]
}

"""
aggregated selection of "File"
"""
type File_aggregate {
  aggregate: File_aggregate_fields
  nodes: [File!]!
}

input File_aggregate_bool_exp {
  count: File_aggregate_bool_exp_count
}

input File_aggregate_bool_exp_count {
  arguments: [File_select_column!]
  distinct: Boolean
  filter: File_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "File"
"""
type File_aggregate_fields {
  count(columns: [File_select_column!], distinct: Boolean): Int!
  max: File_max_fields
  min: File_min_fields
}

"""
order by aggregate values of table "File"
"""
input File_aggregate_order_by {
  count: order_by
  max: File_max_order_by
  min: File_min_order_by
}

"""
input type for inserting array relation for remote table "File"
"""
input File_arr_rel_insert_input {
  data: [File_insert_input!]!

  """upsert condition"""
  on_conflict: File_on_conflict
}

"""
Boolean expression to filter rows from the table "File". All fields are combined with a logical 'AND'.
"""
input File_bool_exp {
  File: File_bool_exp
  Files: File_bool_exp
  Files_aggregate: File_aggregate_bool_exp
  Organization: Organization_bool_exp
  _and: [File_bool_exp!]
  _not: File_bool_exp
  _or: [File_bool_exp!]
  cdnUrl: String_comparison_exp
  createdAt: timestamp_comparison_exp
  data: String_comparison_exp
  encoding: String_comparison_exp
  fileType: FileType_comparison_exp
  filename: String_comparison_exp
  id: String_comparison_exp
  mimetype: String_comparison_exp
  organizationId: String_comparison_exp
  updatedAt: timestamp_comparison_exp
  varantName: String_comparison_exp
  variantKey: String_comparison_exp
  variantOfId: String_comparison_exp
  variantValue: String_comparison_exp
}

"""
unique or primary key constraints on table "File"
"""
enum File_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  File_pkey
}

"""
input type for inserting data into table "File"
"""
input File_insert_input {
  File: File_obj_rel_insert_input
  Files: File_arr_rel_insert_input
  Organization: Organization_obj_rel_insert_input
  cdnUrl: String
  createdAt: timestamp
  data: String
  encoding: String
  fileType: FileType
  filename: String
  id: String
  mimetype: String
  organizationId: String
  updatedAt: timestamp
  varantName: String
  variantKey: String
  variantOfId: String
  variantValue: String
}

"""aggregate max on columns"""
type File_max_fields {
  cdnUrl: String
  createdAt: timestamp
  data: String
  encoding: String
  fileType: FileType
  filename: String
  id: String
  mimetype: String
  organizationId: String
  updatedAt: timestamp
  varantName: String
  variantKey: String
  variantOfId: String
  variantValue: String
}

"""
order by max() on columns of table "File"
"""
input File_max_order_by {
  cdnUrl: order_by
  createdAt: order_by
  data: order_by
  encoding: order_by
  fileType: order_by
  filename: order_by
  id: order_by
  mimetype: order_by
  organizationId: order_by
  updatedAt: order_by
  varantName: order_by
  variantKey: order_by
  variantOfId: order_by
  variantValue: order_by
}

"""aggregate min on columns"""
type File_min_fields {
  cdnUrl: String
  createdAt: timestamp
  data: String
  encoding: String
  fileType: FileType
  filename: String
  id: String
  mimetype: String
  organizationId: String
  updatedAt: timestamp
  varantName: String
  variantKey: String
  variantOfId: String
  variantValue: String
}

"""
order by min() on columns of table "File"
"""
input File_min_order_by {
  cdnUrl: order_by
  createdAt: order_by
  data: order_by
  encoding: order_by
  fileType: order_by
  filename: order_by
  id: order_by
  mimetype: order_by
  organizationId: order_by
  updatedAt: order_by
  varantName: order_by
  variantKey: order_by
  variantOfId: order_by
  variantValue: order_by
}

"""
response of any mutation on the table "File"
"""
type File_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [File!]!
}

"""
input type for inserting object relation for remote table "File"
"""
input File_obj_rel_insert_input {
  data: File_insert_input!

  """upsert condition"""
  on_conflict: File_on_conflict
}

"""
on_conflict condition type for table "File"
"""
input File_on_conflict {
  constraint: File_constraint!
  update_columns: [File_update_column!]! = []
  where: File_bool_exp
}

"""Ordering options when selecting data from "File"."""
input File_order_by {
  File: File_order_by
  Files_aggregate: File_aggregate_order_by
  Organization: Organization_order_by
  cdnUrl: order_by
  createdAt: order_by
  data: order_by
  encoding: order_by
  fileType: order_by
  filename: order_by
  id: order_by
  mimetype: order_by
  organizationId: order_by
  updatedAt: order_by
  varantName: order_by
  variantKey: order_by
  variantOfId: order_by
  variantValue: order_by
}

"""primary key columns input for table: File"""
input File_pk_columns_input {
  id: String!
}

"""
select columns of table "File"
"""
enum File_select_column {
  """column name"""
  cdnUrl

  """column name"""
  createdAt

  """column name"""
  data

  """column name"""
  encoding

  """column name"""
  fileType

  """column name"""
  filename

  """column name"""
  id

  """column name"""
  mimetype

  """column name"""
  organizationId

  """column name"""
  updatedAt

  """column name"""
  varantName

  """column name"""
  variantKey

  """column name"""
  variantOfId

  """column name"""
  variantValue
}

"""
input type for updating data in table "File"
"""
input File_set_input {
  cdnUrl: String
  createdAt: timestamp
  data: String
  encoding: String
  fileType: FileType
  filename: String
  id: String
  mimetype: String
  organizationId: String
  updatedAt: timestamp
  varantName: String
  variantKey: String
  variantOfId: String
  variantValue: String
}

"""
Streaming cursor of the table "File"
"""
input File_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: File_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input File_stream_cursor_value_input {
  cdnUrl: String
  createdAt: timestamp
  data: String
  encoding: String
  fileType: FileType
  filename: String
  id: String
  mimetype: String
  organizationId: String
  updatedAt: timestamp
  varantName: String
  variantKey: String
  variantOfId: String
  variantValue: String
}

"""
update columns of table "File"
"""
enum File_update_column {
  """column name"""
  cdnUrl

  """column name"""
  createdAt

  """column name"""
  data

  """column name"""
  encoding

  """column name"""
  fileType

  """column name"""
  filename

  """column name"""
  id

  """column name"""
  mimetype

  """column name"""
  organizationId

  """column name"""
  updatedAt

  """column name"""
  varantName

  """column name"""
  variantKey

  """column name"""
  variantOfId

  """column name"""
  variantValue
}

input File_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: File_set_input
  where: File_bool_exp!
}

"""
Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWTbe

input LoginInputbe {
  email: String!
  password: String!
}

"""
columns and relationships of "MemberOnTeams"
"""
type MemberOnTeams {
  """An object relationship"""
  Team: Team!

  """An object relationship"""
  User: User!
  assignedAt: timestamp!
  assignedBy: String!
  teamId: String!
  userId: String!
}

"""
aggregated selection of "MemberOnTeams"
"""
type MemberOnTeams_aggregate {
  aggregate: MemberOnTeams_aggregate_fields
  nodes: [MemberOnTeams!]!
}

input MemberOnTeams_aggregate_bool_exp {
  count: MemberOnTeams_aggregate_bool_exp_count
}

input MemberOnTeams_aggregate_bool_exp_count {
  arguments: [MemberOnTeams_select_column!]
  distinct: Boolean
  filter: MemberOnTeams_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "MemberOnTeams"
"""
type MemberOnTeams_aggregate_fields {
  count(columns: [MemberOnTeams_select_column!], distinct: Boolean): Int!
  max: MemberOnTeams_max_fields
  min: MemberOnTeams_min_fields
}

"""
order by aggregate values of table "MemberOnTeams"
"""
input MemberOnTeams_aggregate_order_by {
  count: order_by
  max: MemberOnTeams_max_order_by
  min: MemberOnTeams_min_order_by
}

"""
input type for inserting array relation for remote table "MemberOnTeams"
"""
input MemberOnTeams_arr_rel_insert_input {
  data: [MemberOnTeams_insert_input!]!

  """upsert condition"""
  on_conflict: MemberOnTeams_on_conflict
}

"""
Boolean expression to filter rows from the table "MemberOnTeams". All fields are combined with a logical 'AND'.
"""
input MemberOnTeams_bool_exp {
  Team: Team_bool_exp
  User: User_bool_exp
  _and: [MemberOnTeams_bool_exp!]
  _not: MemberOnTeams_bool_exp
  _or: [MemberOnTeams_bool_exp!]
  assignedAt: timestamp_comparison_exp
  assignedBy: String_comparison_exp
  teamId: String_comparison_exp
  userId: String_comparison_exp
}

"""
unique or primary key constraints on table "MemberOnTeams"
"""
enum MemberOnTeams_constraint {
  """
  unique or primary key constraint on columns "teamId", "userId"
  """
  MemberOnTeams_pkey
}

"""
input type for inserting data into table "MemberOnTeams"
"""
input MemberOnTeams_insert_input {
  Team: Team_obj_rel_insert_input
  User: User_obj_rel_insert_input
  assignedAt: timestamp
  assignedBy: String
  teamId: String
  userId: String
}

"""aggregate max on columns"""
type MemberOnTeams_max_fields {
  assignedAt: timestamp
  assignedBy: String
  teamId: String
  userId: String
}

"""
order by max() on columns of table "MemberOnTeams"
"""
input MemberOnTeams_max_order_by {
  assignedAt: order_by
  assignedBy: order_by
  teamId: order_by
  userId: order_by
}

"""aggregate min on columns"""
type MemberOnTeams_min_fields {
  assignedAt: timestamp
  assignedBy: String
  teamId: String
  userId: String
}

"""
order by min() on columns of table "MemberOnTeams"
"""
input MemberOnTeams_min_order_by {
  assignedAt: order_by
  assignedBy: order_by
  teamId: order_by
  userId: order_by
}

"""
response of any mutation on the table "MemberOnTeams"
"""
type MemberOnTeams_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [MemberOnTeams!]!
}

"""
on_conflict condition type for table "MemberOnTeams"
"""
input MemberOnTeams_on_conflict {
  constraint: MemberOnTeams_constraint!
  update_columns: [MemberOnTeams_update_column!]! = []
  where: MemberOnTeams_bool_exp
}

"""Ordering options when selecting data from "MemberOnTeams"."""
input MemberOnTeams_order_by {
  Team: Team_order_by
  User: User_order_by
  assignedAt: order_by
  assignedBy: order_by
  teamId: order_by
  userId: order_by
}

"""primary key columns input for table: MemberOnTeams"""
input MemberOnTeams_pk_columns_input {
  teamId: String!
  userId: String!
}

"""
select columns of table "MemberOnTeams"
"""
enum MemberOnTeams_select_column {
  """column name"""
  assignedAt

  """column name"""
  assignedBy

  """column name"""
  teamId

  """column name"""
  userId
}

"""
input type for updating data in table "MemberOnTeams"
"""
input MemberOnTeams_set_input {
  assignedAt: timestamp
  assignedBy: String
  teamId: String
  userId: String
}

"""
Streaming cursor of the table "MemberOnTeams"
"""
input MemberOnTeams_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: MemberOnTeams_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input MemberOnTeams_stream_cursor_value_input {
  assignedAt: timestamp
  assignedBy: String
  teamId: String
  userId: String
}

"""
update columns of table "MemberOnTeams"
"""
enum MemberOnTeams_update_column {
  """column name"""
  assignedAt

  """column name"""
  assignedBy

  """column name"""
  teamId

  """column name"""
  userId
}

input MemberOnTeams_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: MemberOnTeams_set_input
  where: MemberOnTeams_bool_exp!
}

"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirectionbe {
  asc
  desc
}

"""
columns and relationships of "Organization"
"""
type Organization {
  """An array relationship"""
  EventLogs(
    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): [EventLog!]!

  """An aggregate relationship"""
  EventLogs_aggregate(
    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): EventLog_aggregate!

  """An array relationship"""
  Files(
    """distinct select on columns"""
    distinct_on: [File_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [File_order_by!]

    """filter the rows returned"""
    where: File_bool_exp
  ): [File!]!

  """An aggregate relationship"""
  Files_aggregate(
    """distinct select on columns"""
    distinct_on: [File_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [File_order_by!]

    """filter the rows returned"""
    where: File_bool_exp
  ): File_aggregate!

  """An array relationship"""
  PermissionGroups(
    """distinct select on columns"""
    distinct_on: [PermissionGroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [PermissionGroup_order_by!]

    """filter the rows returned"""
    where: PermissionGroup_bool_exp
  ): [PermissionGroup!]!

  """An aggregate relationship"""
  PermissionGroups_aggregate(
    """distinct select on columns"""
    distinct_on: [PermissionGroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [PermissionGroup_order_by!]

    """filter the rows returned"""
    where: PermissionGroup_bool_exp
  ): PermissionGroup_aggregate!

  """An array relationship"""
  Permissions(
    """distinct select on columns"""
    distinct_on: [Permission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Permission_order_by!]

    """filter the rows returned"""
    where: Permission_bool_exp
  ): [Permission!]!

  """An aggregate relationship"""
  Permissions_aggregate(
    """distinct select on columns"""
    distinct_on: [Permission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Permission_order_by!]

    """filter the rows returned"""
    where: Permission_bool_exp
  ): Permission_aggregate!

  """An array relationship"""
  Settings(
    """distinct select on columns"""
    distinct_on: [Settings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Settings_order_by!]

    """filter the rows returned"""
    where: Settings_bool_exp
  ): [Settings!]!

  """An aggregate relationship"""
  Settings_aggregate(
    """distinct select on columns"""
    distinct_on: [Settings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Settings_order_by!]

    """filter the rows returned"""
    where: Settings_bool_exp
  ): Settings_aggregate!

  """An array relationship"""
  TaskDefinitions(
    """distinct select on columns"""
    distinct_on: [TaskDefinition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): [TaskDefinition!]!

  """An aggregate relationship"""
  TaskDefinitions_aggregate(
    """distinct select on columns"""
    distinct_on: [TaskDefinition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): TaskDefinition_aggregate!

  """An array relationship"""
  Tasks(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): [Task!]!

  """An aggregate relationship"""
  Tasks_aggregate(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): Task_aggregate!

  """An array relationship"""
  Teams(
    """distinct select on columns"""
    distinct_on: [Team_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Team_order_by!]

    """filter the rows returned"""
    where: Team_bool_exp
  ): [Team!]!

  """An aggregate relationship"""
  Teams_aggregate(
    """distinct select on columns"""
    distinct_on: [Team_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Team_order_by!]

    """filter the rows returned"""
    where: Team_bool_exp
  ): Team_aggregate!

  """An array relationship"""
  Users(
    """distinct select on columns"""
    distinct_on: [User_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [User_order_by!]

    """filter the rows returned"""
    where: User_bool_exp
  ): [User!]!

  """An aggregate relationship"""
  Users_aggregate(
    """distinct select on columns"""
    distinct_on: [User_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [User_order_by!]

    """filter the rows returned"""
    where: User_bool_exp
  ): User_aggregate!

  """An array relationship"""
  Workflows(
    """distinct select on columns"""
    distinct_on: [Workflow_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Workflow_order_by!]

    """filter the rows returned"""
    where: Workflow_bool_exp
  ): [Workflow!]!

  """An aggregate relationship"""
  Workflows_aggregate(
    """distinct select on columns"""
    distinct_on: [Workflow_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Workflow_order_by!]

    """filter the rows returned"""
    where: Workflow_bool_exp
  ): Workflow_aggregate!
  createdAt: timestamp!
  description: String!
  id: String!
  name: String!
  updatedAt: timestamp!
}

"""
aggregated selection of "Organization"
"""
type Organization_aggregate {
  aggregate: Organization_aggregate_fields
  nodes: [Organization!]!
}

"""
aggregate fields of "Organization"
"""
type Organization_aggregate_fields {
  count(columns: [Organization_select_column!], distinct: Boolean): Int!
  max: Organization_max_fields
  min: Organization_min_fields
}

"""
Boolean expression to filter rows from the table "Organization". All fields are combined with a logical 'AND'.
"""
input Organization_bool_exp {
  EventLogs: EventLog_bool_exp
  EventLogs_aggregate: EventLog_aggregate_bool_exp
  Files: File_bool_exp
  Files_aggregate: File_aggregate_bool_exp
  PermissionGroups: PermissionGroup_bool_exp
  PermissionGroups_aggregate: PermissionGroup_aggregate_bool_exp
  Permissions: Permission_bool_exp
  Permissions_aggregate: Permission_aggregate_bool_exp
  Settings: Settings_bool_exp
  Settings_aggregate: Settings_aggregate_bool_exp
  TaskDefinitions: TaskDefinition_bool_exp
  TaskDefinitions_aggregate: TaskDefinition_aggregate_bool_exp
  Tasks: Task_bool_exp
  Tasks_aggregate: Task_aggregate_bool_exp
  Teams: Team_bool_exp
  Teams_aggregate: Team_aggregate_bool_exp
  Users: User_bool_exp
  Users_aggregate: User_aggregate_bool_exp
  Workflows: Workflow_bool_exp
  Workflows_aggregate: Workflow_aggregate_bool_exp
  _and: [Organization_bool_exp!]
  _not: Organization_bool_exp
  _or: [Organization_bool_exp!]
  createdAt: timestamp_comparison_exp
  description: String_comparison_exp
  id: String_comparison_exp
  name: String_comparison_exp
  updatedAt: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "Organization"
"""
enum Organization_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Organization_pkey
}

"""
input type for inserting data into table "Organization"
"""
input Organization_insert_input {
  EventLogs: EventLog_arr_rel_insert_input
  Files: File_arr_rel_insert_input
  PermissionGroups: PermissionGroup_arr_rel_insert_input
  Permissions: Permission_arr_rel_insert_input
  Settings: Settings_arr_rel_insert_input
  TaskDefinitions: TaskDefinition_arr_rel_insert_input
  Tasks: Task_arr_rel_insert_input
  Teams: Team_arr_rel_insert_input
  Users: User_arr_rel_insert_input
  Workflows: Workflow_arr_rel_insert_input
  createdAt: timestamp
  description: String
  id: String
  name: String
  updatedAt: timestamp
}

"""aggregate max on columns"""
type Organization_max_fields {
  createdAt: timestamp
  description: String
  id: String
  name: String
  updatedAt: timestamp
}

"""aggregate min on columns"""
type Organization_min_fields {
  createdAt: timestamp
  description: String
  id: String
  name: String
  updatedAt: timestamp
}

"""
response of any mutation on the table "Organization"
"""
type Organization_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Organization!]!
}

"""
input type for inserting object relation for remote table "Organization"
"""
input Organization_obj_rel_insert_input {
  data: Organization_insert_input!

  """upsert condition"""
  on_conflict: Organization_on_conflict
}

"""
on_conflict condition type for table "Organization"
"""
input Organization_on_conflict {
  constraint: Organization_constraint!
  update_columns: [Organization_update_column!]! = []
  where: Organization_bool_exp
}

"""Ordering options when selecting data from "Organization"."""
input Organization_order_by {
  EventLogs_aggregate: EventLog_aggregate_order_by
  Files_aggregate: File_aggregate_order_by
  PermissionGroups_aggregate: PermissionGroup_aggregate_order_by
  Permissions_aggregate: Permission_aggregate_order_by
  Settings_aggregate: Settings_aggregate_order_by
  TaskDefinitions_aggregate: TaskDefinition_aggregate_order_by
  Tasks_aggregate: Task_aggregate_order_by
  Teams_aggregate: Team_aggregate_order_by
  Users_aggregate: User_aggregate_order_by
  Workflows_aggregate: Workflow_aggregate_order_by
  createdAt: order_by
  description: order_by
  id: order_by
  name: order_by
  updatedAt: order_by
}

"""primary key columns input for table: Organization"""
input Organization_pk_columns_input {
  id: String!
}

"""
select columns of table "Organization"
"""
enum Organization_select_column {
  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updatedAt
}

"""
input type for updating data in table "Organization"
"""
input Organization_set_input {
  createdAt: timestamp
  description: String
  id: String
  name: String
  updatedAt: timestamp
}

"""
Streaming cursor of the table "Organization"
"""
input Organization_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: Organization_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input Organization_stream_cursor_value_input {
  createdAt: timestamp
  description: String
  id: String
  name: String
  updatedAt: timestamp
}

"""
update columns of table "Organization"
"""
enum Organization_update_column {
  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updatedAt
}

input Organization_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: Organization_set_input
  where: Organization_bool_exp!
}

type PageInfobe {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

"""
columns and relationships of "Permission"
"""
type Permission {
  """An object relationship"""
  Organization: Organization!

  """An object relationship"""
  PermissionGroup: PermissionGroup!
  createdAt: timestamp!
  description: String!
  id: String!
  name: String!
  organizationId: String!
  permissionGroupId: String!
  updatedAt: timestamp!
}

"""
columns and relationships of "PermissionGroup"
"""
type PermissionGroup {
  """An object relationship"""
  Organization: Organization!

  """An array relationship"""
  Permissions(
    """distinct select on columns"""
    distinct_on: [Permission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Permission_order_by!]

    """filter the rows returned"""
    where: Permission_bool_exp
  ): [Permission!]!

  """An aggregate relationship"""
  Permissions_aggregate(
    """distinct select on columns"""
    distinct_on: [Permission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Permission_order_by!]

    """filter the rows returned"""
    where: Permission_bool_exp
  ): Permission_aggregate!
  createdAt: timestamp!
  description: String!
  id: String!
  name: String!
  organizationId: String!
  updatedAt: timestamp!
}

"""
aggregated selection of "PermissionGroup"
"""
type PermissionGroup_aggregate {
  aggregate: PermissionGroup_aggregate_fields
  nodes: [PermissionGroup!]!
}

input PermissionGroup_aggregate_bool_exp {
  count: PermissionGroup_aggregate_bool_exp_count
}

input PermissionGroup_aggregate_bool_exp_count {
  arguments: [PermissionGroup_select_column!]
  distinct: Boolean
  filter: PermissionGroup_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "PermissionGroup"
"""
type PermissionGroup_aggregate_fields {
  count(columns: [PermissionGroup_select_column!], distinct: Boolean): Int!
  max: PermissionGroup_max_fields
  min: PermissionGroup_min_fields
}

"""
order by aggregate values of table "PermissionGroup"
"""
input PermissionGroup_aggregate_order_by {
  count: order_by
  max: PermissionGroup_max_order_by
  min: PermissionGroup_min_order_by
}

"""
input type for inserting array relation for remote table "PermissionGroup"
"""
input PermissionGroup_arr_rel_insert_input {
  data: [PermissionGroup_insert_input!]!

  """upsert condition"""
  on_conflict: PermissionGroup_on_conflict
}

"""
Boolean expression to filter rows from the table "PermissionGroup". All fields are combined with a logical 'AND'.
"""
input PermissionGroup_bool_exp {
  Organization: Organization_bool_exp
  Permissions: Permission_bool_exp
  Permissions_aggregate: Permission_aggregate_bool_exp
  _and: [PermissionGroup_bool_exp!]
  _not: PermissionGroup_bool_exp
  _or: [PermissionGroup_bool_exp!]
  createdAt: timestamp_comparison_exp
  description: String_comparison_exp
  id: String_comparison_exp
  name: String_comparison_exp
  organizationId: String_comparison_exp
  updatedAt: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "PermissionGroup"
"""
enum PermissionGroup_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  PermissionGroup_pkey
}

"""
input type for inserting data into table "PermissionGroup"
"""
input PermissionGroup_insert_input {
  Organization: Organization_obj_rel_insert_input
  Permissions: Permission_arr_rel_insert_input
  createdAt: timestamp
  description: String
  id: String
  name: String
  organizationId: String
  updatedAt: timestamp
}

"""aggregate max on columns"""
type PermissionGroup_max_fields {
  createdAt: timestamp
  description: String
  id: String
  name: String
  organizationId: String
  updatedAt: timestamp
}

"""
order by max() on columns of table "PermissionGroup"
"""
input PermissionGroup_max_order_by {
  createdAt: order_by
  description: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type PermissionGroup_min_fields {
  createdAt: timestamp
  description: String
  id: String
  name: String
  organizationId: String
  updatedAt: timestamp
}

"""
order by min() on columns of table "PermissionGroup"
"""
input PermissionGroup_min_order_by {
  createdAt: order_by
  description: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "PermissionGroup"
"""
type PermissionGroup_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [PermissionGroup!]!
}

"""
input type for inserting object relation for remote table "PermissionGroup"
"""
input PermissionGroup_obj_rel_insert_input {
  data: PermissionGroup_insert_input!

  """upsert condition"""
  on_conflict: PermissionGroup_on_conflict
}

"""
on_conflict condition type for table "PermissionGroup"
"""
input PermissionGroup_on_conflict {
  constraint: PermissionGroup_constraint!
  update_columns: [PermissionGroup_update_column!]! = []
  where: PermissionGroup_bool_exp
}

"""Ordering options when selecting data from "PermissionGroup"."""
input PermissionGroup_order_by {
  Organization: Organization_order_by
  Permissions_aggregate: Permission_aggregate_order_by
  createdAt: order_by
  description: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  updatedAt: order_by
}

"""primary key columns input for table: PermissionGroup"""
input PermissionGroup_pk_columns_input {
  id: String!
}

"""
select columns of table "PermissionGroup"
"""
enum PermissionGroup_select_column {
  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  updatedAt
}

"""
input type for updating data in table "PermissionGroup"
"""
input PermissionGroup_set_input {
  createdAt: timestamp
  description: String
  id: String
  name: String
  organizationId: String
  updatedAt: timestamp
}

"""
Streaming cursor of the table "PermissionGroup"
"""
input PermissionGroup_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: PermissionGroup_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input PermissionGroup_stream_cursor_value_input {
  createdAt: timestamp
  description: String
  id: String
  name: String
  organizationId: String
  updatedAt: timestamp
}

"""
update columns of table "PermissionGroup"
"""
enum PermissionGroup_update_column {
  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  updatedAt
}

input PermissionGroup_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: PermissionGroup_set_input
  where: PermissionGroup_bool_exp!
}

"""
aggregated selection of "Permission"
"""
type Permission_aggregate {
  aggregate: Permission_aggregate_fields
  nodes: [Permission!]!
}

input Permission_aggregate_bool_exp {
  count: Permission_aggregate_bool_exp_count
}

input Permission_aggregate_bool_exp_count {
  arguments: [Permission_select_column!]
  distinct: Boolean
  filter: Permission_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "Permission"
"""
type Permission_aggregate_fields {
  count(columns: [Permission_select_column!], distinct: Boolean): Int!
  max: Permission_max_fields
  min: Permission_min_fields
}

"""
order by aggregate values of table "Permission"
"""
input Permission_aggregate_order_by {
  count: order_by
  max: Permission_max_order_by
  min: Permission_min_order_by
}

"""
input type for inserting array relation for remote table "Permission"
"""
input Permission_arr_rel_insert_input {
  data: [Permission_insert_input!]!

  """upsert condition"""
  on_conflict: Permission_on_conflict
}

"""
Boolean expression to filter rows from the table "Permission". All fields are combined with a logical 'AND'.
"""
input Permission_bool_exp {
  Organization: Organization_bool_exp
  PermissionGroup: PermissionGroup_bool_exp
  _and: [Permission_bool_exp!]
  _not: Permission_bool_exp
  _or: [Permission_bool_exp!]
  createdAt: timestamp_comparison_exp
  description: String_comparison_exp
  id: String_comparison_exp
  name: String_comparison_exp
  organizationId: String_comparison_exp
  permissionGroupId: String_comparison_exp
  updatedAt: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "Permission"
"""
enum Permission_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Permission_pkey
}

"""
input type for inserting data into table "Permission"
"""
input Permission_insert_input {
  Organization: Organization_obj_rel_insert_input
  PermissionGroup: PermissionGroup_obj_rel_insert_input
  createdAt: timestamp
  description: String
  id: String
  name: String
  organizationId: String
  permissionGroupId: String
  updatedAt: timestamp
}

"""aggregate max on columns"""
type Permission_max_fields {
  createdAt: timestamp
  description: String
  id: String
  name: String
  organizationId: String
  permissionGroupId: String
  updatedAt: timestamp
}

"""
order by max() on columns of table "Permission"
"""
input Permission_max_order_by {
  createdAt: order_by
  description: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  permissionGroupId: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type Permission_min_fields {
  createdAt: timestamp
  description: String
  id: String
  name: String
  organizationId: String
  permissionGroupId: String
  updatedAt: timestamp
}

"""
order by min() on columns of table "Permission"
"""
input Permission_min_order_by {
  createdAt: order_by
  description: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  permissionGroupId: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "Permission"
"""
type Permission_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Permission!]!
}

"""
on_conflict condition type for table "Permission"
"""
input Permission_on_conflict {
  constraint: Permission_constraint!
  update_columns: [Permission_update_column!]! = []
  where: Permission_bool_exp
}

"""Ordering options when selecting data from "Permission"."""
input Permission_order_by {
  Organization: Organization_order_by
  PermissionGroup: PermissionGroup_order_by
  createdAt: order_by
  description: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  permissionGroupId: order_by
  updatedAt: order_by
}

"""primary key columns input for table: Permission"""
input Permission_pk_columns_input {
  id: String!
}

"""
select columns of table "Permission"
"""
enum Permission_select_column {
  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  permissionGroupId

  """column name"""
  updatedAt
}

"""
input type for updating data in table "Permission"
"""
input Permission_set_input {
  createdAt: timestamp
  description: String
  id: String
  name: String
  organizationId: String
  permissionGroupId: String
  updatedAt: timestamp
}

"""
Streaming cursor of the table "Permission"
"""
input Permission_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: Permission_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input Permission_stream_cursor_value_input {
  createdAt: timestamp
  description: String
  id: String
  name: String
  organizationId: String
  permissionGroupId: String
  updatedAt: timestamp
}

"""
update columns of table "Permission"
"""
enum Permission_update_column {
  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  permissionGroupId

  """column name"""
  updatedAt
}

input Permission_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: Permission_set_input
  where: Permission_bool_exp!
}

"""
columns and relationships of "Post"
"""
type Post {
  """An object relationship"""
  User: User
  authorId: String
  content: String
  createdAt: timestamp!
  id: String!
  published: Boolean!
  title: String!
  updatedAt: timestamp!
}

type PostConnectionbe {
  edges: [PostEdgebe!]
  pageInfo: PageInfobe!
  totalCount: Int!
}

type PostEdgebe {
  cursor: String!
  node: Postbe!
}

"""Properties by which post connections can be ordered."""
enum PostOrderFieldbe {
  content
  createdAt
  id
  published
  title
  updatedAt
}

input PostOrderbe {
  direction: OrderDirectionbe!
  field: PostOrderFieldbe!
}

"""
aggregated selection of "Post"
"""
type Post_aggregate {
  aggregate: Post_aggregate_fields
  nodes: [Post!]!
}

input Post_aggregate_bool_exp {
  bool_and: Post_aggregate_bool_exp_bool_and
  bool_or: Post_aggregate_bool_exp_bool_or
  count: Post_aggregate_bool_exp_count
}

input Post_aggregate_bool_exp_bool_and {
  arguments: Post_select_column_Post_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: Post_bool_exp
  predicate: Boolean_comparison_exp!
}

input Post_aggregate_bool_exp_bool_or {
  arguments: Post_select_column_Post_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: Post_bool_exp
  predicate: Boolean_comparison_exp!
}

input Post_aggregate_bool_exp_count {
  arguments: [Post_select_column!]
  distinct: Boolean
  filter: Post_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "Post"
"""
type Post_aggregate_fields {
  count(columns: [Post_select_column!], distinct: Boolean): Int!
  max: Post_max_fields
  min: Post_min_fields
}

"""
order by aggregate values of table "Post"
"""
input Post_aggregate_order_by {
  count: order_by
  max: Post_max_order_by
  min: Post_min_order_by
}

"""
input type for inserting array relation for remote table "Post"
"""
input Post_arr_rel_insert_input {
  data: [Post_insert_input!]!

  """upsert condition"""
  on_conflict: Post_on_conflict
}

"""
Boolean expression to filter rows from the table "Post". All fields are combined with a logical 'AND'.
"""
input Post_bool_exp {
  User: User_bool_exp
  _and: [Post_bool_exp!]
  _not: Post_bool_exp
  _or: [Post_bool_exp!]
  authorId: String_comparison_exp
  content: String_comparison_exp
  createdAt: timestamp_comparison_exp
  id: String_comparison_exp
  published: Boolean_comparison_exp
  title: String_comparison_exp
  updatedAt: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "Post"
"""
enum Post_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Post_pkey
}

"""
input type for inserting data into table "Post"
"""
input Post_insert_input {
  User: User_obj_rel_insert_input
  authorId: String
  content: String
  createdAt: timestamp
  id: String
  published: Boolean
  title: String
  updatedAt: timestamp
}

"""aggregate max on columns"""
type Post_max_fields {
  authorId: String
  content: String
  createdAt: timestamp
  id: String
  title: String
  updatedAt: timestamp
}

"""
order by max() on columns of table "Post"
"""
input Post_max_order_by {
  authorId: order_by
  content: order_by
  createdAt: order_by
  id: order_by
  title: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type Post_min_fields {
  authorId: String
  content: String
  createdAt: timestamp
  id: String
  title: String
  updatedAt: timestamp
}

"""
order by min() on columns of table "Post"
"""
input Post_min_order_by {
  authorId: order_by
  content: order_by
  createdAt: order_by
  id: order_by
  title: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "Post"
"""
type Post_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Post!]!
}

"""
on_conflict condition type for table "Post"
"""
input Post_on_conflict {
  constraint: Post_constraint!
  update_columns: [Post_update_column!]! = []
  where: Post_bool_exp
}

"""Ordering options when selecting data from "Post"."""
input Post_order_by {
  User: User_order_by
  authorId: order_by
  content: order_by
  createdAt: order_by
  id: order_by
  published: order_by
  title: order_by
  updatedAt: order_by
}

"""primary key columns input for table: Post"""
input Post_pk_columns_input {
  id: String!
}

"""
select columns of table "Post"
"""
enum Post_select_column {
  """column name"""
  authorId

  """column name"""
  content

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  published

  """column name"""
  title

  """column name"""
  updatedAt
}

"""
select "Post_aggregate_bool_exp_bool_and_arguments_columns" columns of table "Post"
"""
enum Post_select_column_Post_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  published
}

"""
select "Post_aggregate_bool_exp_bool_or_arguments_columns" columns of table "Post"
"""
enum Post_select_column_Post_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  published
}

"""
input type for updating data in table "Post"
"""
input Post_set_input {
  authorId: String
  content: String
  createdAt: timestamp
  id: String
  published: Boolean
  title: String
  updatedAt: timestamp
}

"""
Streaming cursor of the table "Post"
"""
input Post_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: Post_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input Post_stream_cursor_value_input {
  authorId: String
  content: String
  createdAt: timestamp
  id: String
  published: Boolean
  title: String
  updatedAt: timestamp
}

"""
update columns of table "Post"
"""
enum Post_update_column {
  """column name"""
  authorId

  """column name"""
  content

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  published

  """column name"""
  title

  """column name"""
  updatedAt
}

input Post_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: Post_set_input
  where: Post_bool_exp!
}

type Postbe {
  author: Userbe
  content: String

  """Identifies the date and time when the object was created."""
  createdAt: DateTimebe!
  id: ID!
  published: Boolean!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTimebe!
}

scalar Role

"""
Boolean expression to compare columns of type "Role". All fields are combined with logical 'AND'.
"""
input Role_comparison_exp {
  _eq: Role
  _gt: Role
  _gte: Role
  _in: [Role!]
  _is_null: Boolean
  _lt: Role
  _lte: Role
  _neq: Role
  _nin: [Role!]
}

"""User role"""
enum Rolebe {
  ADMIN
  USER
}

"""
columns and relationships of "Settings"
"""
type Settings {
  """An object relationship"""
  Organization: Organization!
  createdAt: timestamp!
  id: String!
  key: String!
  organizationId: String!
  updatedAt: timestamp!
  value: String!
}

"""
aggregated selection of "Settings"
"""
type Settings_aggregate {
  aggregate: Settings_aggregate_fields
  nodes: [Settings!]!
}

input Settings_aggregate_bool_exp {
  count: Settings_aggregate_bool_exp_count
}

input Settings_aggregate_bool_exp_count {
  arguments: [Settings_select_column!]
  distinct: Boolean
  filter: Settings_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "Settings"
"""
type Settings_aggregate_fields {
  count(columns: [Settings_select_column!], distinct: Boolean): Int!
  max: Settings_max_fields
  min: Settings_min_fields
}

"""
order by aggregate values of table "Settings"
"""
input Settings_aggregate_order_by {
  count: order_by
  max: Settings_max_order_by
  min: Settings_min_order_by
}

"""
input type for inserting array relation for remote table "Settings"
"""
input Settings_arr_rel_insert_input {
  data: [Settings_insert_input!]!

  """upsert condition"""
  on_conflict: Settings_on_conflict
}

"""
Boolean expression to filter rows from the table "Settings". All fields are combined with a logical 'AND'.
"""
input Settings_bool_exp {
  Organization: Organization_bool_exp
  _and: [Settings_bool_exp!]
  _not: Settings_bool_exp
  _or: [Settings_bool_exp!]
  createdAt: timestamp_comparison_exp
  id: String_comparison_exp
  key: String_comparison_exp
  organizationId: String_comparison_exp
  updatedAt: timestamp_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "Settings"
"""
enum Settings_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Settings_pkey
}

"""
input type for inserting data into table "Settings"
"""
input Settings_insert_input {
  Organization: Organization_obj_rel_insert_input
  createdAt: timestamp
  id: String
  key: String
  organizationId: String
  updatedAt: timestamp
  value: String
}

"""aggregate max on columns"""
type Settings_max_fields {
  createdAt: timestamp
  id: String
  key: String
  organizationId: String
  updatedAt: timestamp
  value: String
}

"""
The `GenericScalar` scalar type represents a generic
GraphQL scalar value that could be:
String, Boolean, Int, Float, List or Object.
"""
scalar GenericScalar

"""
A gift card is a prepaid electronic payment card accepted in stores. They can be used during checkout by providing a valid gift card codes.
"""
type GiftCard implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata

  """Code in format which allows displaying in a user interface."""
  displayCode: String!

  """Last 4 characters of gift card code."""
  last4CodeChars: String!

  """
  Gift card code. Can be fetched by a staff member with MANAGE_GIFT_CARD when gift card wasn't yet used and by the gift card owner.
  """
  code: String!
  created: DateTime!

  """
  The user who bought or issued a gift card.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  createdBy: User

  """
  The customer who used a gift card.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  usedBy: User

  """
  Email address of the user who bought or issued gift card.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  
  Requires one of the following permissions: MANAGE_USERS, OWNER.
  """
  createdByEmail: String

  """
  Email address of the customer who used a gift card.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  usedByEmail: String
  lastUsedOn: DateTime
  expiryDate: Date

  """
  App which created the gift card.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  
  Requires one of the following permissions: MANAGE_APPS, OWNER.
  """
  app: App

  """
  Related gift card product.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  product: Product

  """
  List of events associated with the gift card.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  
  Requires one of the following permissions: MANAGE_GIFT_CARD.
  """
  events(
    """Filtering options for gift card events."""
    filter: GiftCardEventFilterInput
  ): [GiftCardEvent!]!

  """
  The gift card tag.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  
  Requires one of the following permissions: MANAGE_GIFT_CARD.
  """
  tags: [GiftCardTag!]!

  """
  Slug of the channel where the gift card was bought.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  boughtInChannel: String
  isActive: Boolean!
  initialBalance: Money!
  currentBalance: Money!

  """The customer who bought a gift card."""
  user: User @deprecated(reason: "This field will be removed in Saleor 4.0. Use `createdBy` field instead.")

  """End date of gift card."""
  endDate: DateTime @deprecated(reason: "This field will be removed in Saleor 4.0. Use `expiryDate` field instead.")

  """Start date of gift card."""
  startDate: DateTime @deprecated(reason: "This field will be removed in Saleor 4.0.")
}

"""
Activate a gift card. 

Requires one of the following permissions: MANAGE_GIFT_CARD.
"""
type GiftCardActivate {
  """Activated gift card."""
  giftCard: GiftCard
  giftCardErrors: [GiftCardError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [GiftCardError!]!
}

"""
Adds note to the gift card.

Added in Saleor 3.1.

Note: this API is currently in Feature Preview and can be subject to changes at later point. 

Requires one of the following permissions: MANAGE_GIFT_CARD.
"""
type GiftCardAddNote {
  """Gift card with the note added."""
  giftCard: GiftCard

  """Gift card note created."""
  event: GiftCardEvent
  errors: [GiftCardError!]!
}

input GiftCardAddNoteInput {
  """Note message."""
  message: String!
}

"""
Activate gift cards.

Added in Saleor 3.1.

Note: this API is currently in Feature Preview and can be subject to changes at later point. 

Requires one of the following permissions: MANAGE_GIFT_CARD.
"""
type GiftCardBulkActivate {
  """Returns how many objects were affected."""
  count: Int!
  errors: [GiftCardError!]!
}

"""
Create gift cards.

Added in Saleor 3.1.

Note: this API is currently in Feature Preview and can be subject to changes at later point. 

Requires one of the following permissions: MANAGE_GIFT_CARD.
"""
type GiftCardBulkCreate {
  """Returns how many objects were created."""
  count: Int!

  """List of created gift cards."""
  giftCards: [GiftCard!]!
  errors: [GiftCardError!]!
}

input GiftCardBulkCreateInput {
  """The number of cards to issue."""
  count: Int!

  """Balance of the gift card."""
  balance: PriceInput!

  """The gift card tags."""
  tags: [String!]

  """The gift card expiry date."""
  expiryDate: Date

  """Determine if gift card is active."""
  isActive: Boolean!
}

"""
Deactivate gift cards.

Added in Saleor 3.1.

Note: this API is currently in Feature Preview and can be subject to changes at later point. 

Requires one of the following permissions: MANAGE_GIFT_CARD.
"""
type GiftCardBulkDeactivate {
  """Returns how many objects were affected."""
  count: Int!
  errors: [GiftCardError!]!
}

"""
Delete gift cards.

Added in Saleor 3.1.

Note: this API is currently in Feature Preview and can be subject to changes at later point. 

Requires one of the following permissions: MANAGE_GIFT_CARD.
"""
type GiftCardBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  errors: [GiftCardError!]!
}

type GiftCardCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [GiftCardCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type GiftCardCountableEdge {
  """The item at the end of the edge."""
  node: GiftCard!

  """A cursor for use in pagination."""
  cursor: String!
}

"""
Creates a new gift card. 

Requires one of the following permissions: MANAGE_GIFT_CARD.
"""
type GiftCardCreate {
  giftCardErrors: [GiftCardError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [GiftCardError!]!
  giftCard: GiftCard
}

input GiftCardCreateInput {
  """
  The gift card tags to add.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  addTags: [String!]

  """
  The gift card expiry date.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  expiryDate: Date

  """
  Start date of the gift card in ISO 8601 format. 
  
  DEPRECATED: this field will be removed in Saleor 4.0.
  """
  startDate: Date

  """
  End date of the gift card in ISO 8601 format. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use `expiryDate` from `expirySettings` instead.
  """
  endDate: Date

  """Balance of the gift card."""
  balance: PriceInput!

  """Email of the customer to whom gift card will be sent."""
  userEmail: String

  """
  Slug of a channel from which the email should be sent.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  channel: String

  """
  Determine if gift card is active.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  isActive: Boolean!

  """
  Code to use the gift card. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. The code is now auto generated.
  """
  code: String

  """
  The gift card note from the staff member.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  note: String
}

"""
Event sent when new gift card is created.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type GiftCardCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The gift card the event relates to."""
  giftCard: GiftCard
}

"""
Deactivate a gift card. 

Requires one of the following permissions: MANAGE_GIFT_CARD.
"""
type GiftCardDeactivate {
  """Deactivated gift card."""
  giftCard: GiftCard
  giftCardErrors: [GiftCardError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [GiftCardError!]!
}

"""
Delete gift card.

Added in Saleor 3.1.

Note: this API is currently in Feature Preview and can be subject to changes at later point. 

Requires one of the following permissions: MANAGE_GIFT_CARD.
"""
type GiftCardDelete {
  giftCardErrors: [GiftCardError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [GiftCardError!]!
  giftCard: GiftCard
}

"""
Event sent when gift card is deleted.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type GiftCardDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The gift card the event relates to."""
  giftCard: GiftCard
}

type GiftCardError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: GiftCardErrorCode!

  """List of tag values that cause the error."""
  tags: [String!]
}

"""An enumeration."""
enum GiftCardErrorCode {
  ALREADY_EXISTS
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  REQUIRED
  UNIQUE
  EXPIRED_GIFT_CARD
  DUPLICATED_INPUT_ITEM
}

"""
History log of the gift card.

Added in Saleor 3.1.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type GiftCardEvent implements Node {
  id: ID!

  """Date when event happened at in ISO 8601 format."""
  date: DateTime

  """Gift card event type."""
  type: GiftCardEventsEnum

  """
  User who performed the action. Requires one of the following permissions: MANAGE_USERS, MANAGE_STAFF, OWNER.
  """
  user: User

  """
  App that performed the action. Requires one of the following permissions: MANAGE_APPS, OWNER.
  """
  app: App

  """Content of the event."""
  message: String

  """Email of the customer."""
  email: String

  """The order ID where gift card was used or bought."""
  orderId: ID

  """User-friendly number of an order where gift card was used or bought."""
  orderNumber: String

  """The list of gift card tags."""
  tags: [String!]

  """The list of old gift card tags."""
  oldTags: [String!]

  """The gift card balance."""
  balance: GiftCardEventBalance

  """The gift card expiry date."""
  expiryDate: Date

  """Previous gift card expiry date."""
  oldExpiryDate: Date
}

type GiftCardEventBalance {
  """Initial balance of the gift card."""
  initialBalance: Money

  """Current balance of the gift card."""
  currentBalance: Money!

  """Previous initial balance of the gift card."""
  oldInitialBalance: Money

  """Previous current balance of the gift card."""
  oldCurrentBalance: Money
}

input GiftCardEventFilterInput {
  type: GiftCardEventsEnum
  orders: [ID!]
}

"""An enumeration."""
enum GiftCardEventsEnum {
  ISSUED
  BOUGHT
  UPDATED
  ACTIVATED
  DEACTIVATED
  BALANCE_RESET
  EXPIRY_DATE_UPDATED
  TAGS_UPDATED
  SENT_TO_CUSTOMER
  RESENT
  NOTE_ADDED
  USED_IN_ORDER
}

input GiftCardFilterInput {
  isActive: Boolean
  metadata: [MetadataFilter!]
  tags: [String!]
  products: [ID!]
  usedBy: [ID!]
  used: Boolean
  currency: String
  currentBalance: PriceRangeInput
  initialBalance: PriceRangeInput
  code: String
}

"""
Event sent when gift card metadata is updated.

Added in Saleor 3.8.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type GiftCardMetadataUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The gift card the event relates to."""
  giftCard: GiftCard
}

"""
Resend a gift card.

Added in Saleor 3.1.

Note: this API is currently in Feature Preview and can be subject to changes at later point. 

Requires one of the following permissions: MANAGE_GIFT_CARD.
"""
type GiftCardResend {
  """Gift card which has been sent."""
  giftCard: GiftCard
  errors: [GiftCardError!]!
}

input GiftCardResendInput {
  """ID of a gift card to resend."""
  id: ID!

  """Email to which gift card should be send."""
  email: String

  """Slug of a channel from which the email should be sent."""
  channel: String!
}

"""Gift card related settings from site settings."""
type GiftCardSettings {
  """The gift card expiry type settings."""
  expiryType: GiftCardSettingsExpiryTypeEnum!

  """The gift card expiry period settings."""
  expiryPeriod: TimePeriod
}

type GiftCardSettingsError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: GiftCardSettingsErrorCode!
}

"""An enumeration."""
enum GiftCardSettingsErrorCode {
  INVALID
  REQUIRED
  GRAPHQL_ERROR
}

"""An enumeration."""
enum GiftCardSettingsExpiryTypeEnum {
  NEVER_EXPIRE
  EXPIRY_PERIOD
}

"""
Update gift card settings. 

Requires one of the following permissions: MANAGE_GIFT_CARD.
"""
type GiftCardSettingsUpdate {
  """Gift card settings."""
  giftCardSettings: GiftCardSettings
  errors: [GiftCardSettingsError!]!
}

input GiftCardSettingsUpdateInput {
  """Defines gift card default expiry settings."""
  expiryType: GiftCardSettingsExpiryTypeEnum

  """Defines gift card expiry period."""
  expiryPeriod: TimePeriodInputType
}

enum GiftCardSortField {
  """Sort gift cards by product."""
  PRODUCT

  """Sort gift cards by used by."""
  USED_BY

  """Sort gift cards by current balance."""
  CURRENT_BALANCE

  """
  Sort gift cards by created at.
  
  Added in Saleor 3.8.
  """
  CREATED_AT
}

input GiftCardSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort gift cards by the selected field."""
  field: GiftCardSortField!
}

"""
Event sent when gift card status has changed.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type GiftCardStatusChanged implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The gift card the event relates to."""
  giftCard: GiftCard
}

"""
The gift card tag.

Added in Saleor 3.1.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type GiftCardTag implements Node {
  id: ID!
  name: String!
}

type GiftCardTagCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [GiftCardTagCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type GiftCardTagCountableEdge {
  """The item at the end of the edge."""
  node: GiftCardTag!

  """A cursor for use in pagination."""
  cursor: String!
}

input GiftCardTagFilterInput {
  search: String
}

"""
Update a gift card. 

Requires one of the following permissions: MANAGE_GIFT_CARD.
"""
type GiftCardUpdate {
  giftCardErrors: [GiftCardError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [GiftCardError!]!
  giftCard: GiftCard
}

input GiftCardUpdateInput {
  """
  The gift card tags to add.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  addTags: [String!]

  """
  The gift card expiry date.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  expiryDate: Date

  """
  Start date of the gift card in ISO 8601 format. 
  
  DEPRECATED: this field will be removed in Saleor 4.0.
  """
  startDate: Date

  """
  End date of the gift card in ISO 8601 format. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use `expiryDate` from `expirySettings` instead.
  """
  endDate: Date

  """
  The gift card tags to remove.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  removeTags: [String!]

  """
  The gift card balance amount.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  balanceAmount: PositiveDecimal
}

"""
Event sent when gift card is updated.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type GiftCardUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The gift card the event relates to."""
  giftCard: GiftCard
}

"""Represents permission group data."""
type Group implements Node {
  id: ID!
  name: String!

  """
  List of group users
  
  Requires one of the following permissions: MANAGE_STAFF.
  """
  users: [User!]

  """List of group permissions"""
  permissions: [Permission!]

  """
  True, if the currently authenticated user has rights to manage a group.
  """
  userCanManage: Boolean!
}

type GroupCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [GroupCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type GroupCountableEdge {
  """The item at the end of the edge."""
  node: Group!

  """A cursor for use in pagination."""
  cursor: String!
}

"""Represents an image."""
type Image {
  """The URL of the image."""
  url: String!

  """Alt text for an image."""
  alt: String
}

input IntRangeInput {
  """Value greater than or equal to."""
  gte: Int

  """Value less than or equal to."""
  lte: Int
}

"""Represents an Invoice."""
type Invoice implements ObjectWithMetadata & Job & Node {
  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata

  """Job status."""
  status: JobStatusEnum!
  createdAt: DateTime!
  updatedAt: DateTime!
  message: String

  """The ID of the object."""
  id: ID!
  number: String
  externalUrl: String

  """URL to download an invoice."""
  url: String
}

"""
Creates a ready to send invoice. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type InvoiceCreate {
  invoiceErrors: [InvoiceError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [InvoiceError!]!
  invoice: Invoice
}

input InvoiceCreateInput {
  """Invoice number."""
  number: String!

  """URL of an invoice to download."""
  url: String!
}

"""
Deletes an invoice. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type InvoiceDelete {
  invoiceErrors: [InvoiceError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [InvoiceError!]!
  invoice: Invoice
}

"""
Event sent when invoice is deleted.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type InvoiceDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The invoice the event relates to."""
  invoice: Invoice
}

type InvoiceError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: InvoiceErrorCode!
}

"""An enumeration."""
enum InvoiceErrorCode {
  REQUIRED
  NOT_READY
  URL_NOT_SET
  EMAIL_NOT_SET
  NUMBER_NOT_SET
  NOT_FOUND
  INVALID_STATUS
  NO_INVOICE_PLUGIN
}

"""
Request an invoice for the order using plugin. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type InvoiceRequest {
  """Order related to an invoice."""
  order: Order
  invoiceErrors: [InvoiceError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [InvoiceError!]!
  invoice: Invoice
}

"""
Requests deletion of an invoice. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type InvoiceRequestDelete {
  invoiceErrors: [InvoiceError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [InvoiceError!]!
  invoice: Invoice
}

"""
Event sent when invoice is requested.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type InvoiceRequested implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The invoice the event relates to."""
  invoice: Invoice
}

"""
Send an invoice notification to the customer. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type InvoiceSendNotification {
  invoiceErrors: [InvoiceError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [InvoiceError!]!
  invoice: Invoice
}

"""
Event sent when invoice is sent.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type InvoiceSent implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The invoice the event relates to."""
  invoice: Invoice
}

"""
Updates an invoice. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type InvoiceUpdate {
  invoiceErrors: [InvoiceError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [InvoiceError!]!
  invoice: Invoice
}

union IssuingPrincipal = App | User

scalar JSONString

interface Job {
  """Job status."""
  status: JobStatusEnum!

  """Created date time of job in ISO 8601 format."""
  createdAt: DateTime!

  """Date time of job last update in ISO 8601 format."""
  updatedAt: DateTime!

  """Job message."""
  message: String
}

"""An enumeration."""
enum JobStatusEnum {
  PENDING
  SUCCESS
  FAILED
  DELETED
}

"""An enumeration."""
enum LanguageCodeEnum {
  AF
  AF_NA
  AF_ZA
  AGQ
  AGQ_CM
  AK
  AK_GH
  AM
  AM_ET
  AR
  AR_AE
  AR_BH
  AR_DJ
  AR_DZ
  AR_EG
  AR_EH
  AR_ER
  AR_IL
  AR_IQ
  AR_JO
  AR_KM
  AR_KW
  AR_LB
  AR_LY
  AR_MA
  AR_MR
  AR_OM
  AR_PS
  AR_QA
  AR_SA
  AR_SD
  AR_SO
  AR_SS
  AR_SY
  AR_TD
  AR_TN
  AR_YE
  AS
  AS_IN
  ASA
  ASA_TZ
  AST
  AST_ES
  AZ
  AZ_CYRL
  AZ_CYRL_AZ
  AZ_LATN
  AZ_LATN_AZ
  BAS
  BAS_CM
  BE
  BE_BY
  BEM
  BEM_ZM
  BEZ
  BEZ_TZ
  BG
  BG_BG
  BM
  BM_ML
  BN
  BN_BD
  BN_IN
  BO
  BO_CN
  BO_IN
  BR
  BR_FR
  BRX
  BRX_IN
  BS
  BS_CYRL
  BS_CYRL_BA
  BS_LATN
  BS_LATN_BA
  CA
  CA_AD
  CA_ES
  CA_ES_VALENCIA
  CA_FR
  CA_IT
  CCP
  CCP_BD
  CCP_IN
  CE
  CE_RU
  CEB
  CEB_PH
  CGG
  CGG_UG
  CHR
  CHR_US
  CKB
  CKB_IQ
  CKB_IR
  CS
  CS_CZ
  CU
  CU_RU
  CY
  CY_GB
  DA
  DA_DK
  DA_GL
  DAV
  DAV_KE
  DE
  DE_AT
  DE_BE
  DE_CH
  DE_DE
  DE_IT
  DE_LI
  DE_LU
  DJE
  DJE_NE
  DSB
  DSB_DE
  DUA
  DUA_CM
  DYO
  DYO_SN
  DZ
  DZ_BT
  EBU
  EBU_KE
  EE
  EE_GH
  EE_TG
  EL
  EL_CY
  EL_GR
  EN
  EN_AE
  EN_AG
  EN_AI
  EN_AS
  EN_AT
  EN_AU
  EN_BB
  EN_BE
  EN_BI
  EN_BM
  EN_BS
  EN_BW
  EN_BZ
  EN_CA
  EN_CC
  EN_CH
  EN_CK
  EN_CM
  EN_CX
  EN_CY
  EN_DE
  EN_DG
  EN_DK
  EN_DM
  EN_ER
  EN_FI
  EN_FJ
  EN_FK
  EN_FM
  EN_GB
  EN_GD
  EN_GG
  EN_GH
  EN_GI
  EN_GM
  EN_GU
  EN_GY
  EN_HK
  EN_IE
  EN_IL
  EN_IM
  EN_IN
  EN_IO
  EN_JE
  EN_JM
  EN_KE
  EN_KI
  EN_KN
  EN_KY
  EN_LC
  EN_LR
  EN_LS
  EN_MG
  EN_MH
  EN_MO
  EN_MP
  EN_MS
  EN_MT
  EN_MU
  EN_MW
  EN_MY
  EN_NA
  EN_NF
  EN_NG
  EN_NL
  EN_NR
  EN_NU
  EN_NZ
  EN_PG
  EN_PH
  EN_PK
  EN_PN
  EN_PR
  EN_PW
  EN_RW
  EN_SB
  EN_SC
  EN_SD
  EN_SE
  EN_SG
  EN_SH
  EN_SI
  EN_SL
  EN_SS
  EN_SX
  EN_SZ
  EN_TC
  EN_TK
  EN_TO
  EN_TT
  EN_TV
  EN_TZ
  EN_UG
  EN_UM
  EN_US
  EN_VC
  EN_VG
  EN_VI
  EN_VU
  EN_WS
  EN_ZA
  EN_ZM
  EN_ZW
  EO
  ES
  ES_AR
  ES_BO
  ES_BR
  ES_BZ
  ES_CL
  ES_CO
  ES_CR
  ES_CU
  ES_DO
  ES_EA
  ES_EC
  ES_ES
  ES_GQ
  ES_GT
  ES_HN
  ES_IC
  ES_MX
  ES_NI
  ES_PA
  ES_PE
  ES_PH
  ES_PR
  ES_PY
  ES_SV
  ES_US
  ES_UY
  ES_VE
  ET
  ET_EE
  EU
  EU_ES
  EWO
  EWO_CM
  FA
  FA_AF
  FA_IR
  FF
  FF_ADLM
  FF_ADLM_BF
  FF_ADLM_CM
  FF_ADLM_GH
  FF_ADLM_GM
  FF_ADLM_GN
  FF_ADLM_GW
  FF_ADLM_LR
  FF_ADLM_MR
  FF_ADLM_NE
  FF_ADLM_NG
  FF_ADLM_SL
  FF_ADLM_SN
  FF_LATN
  FF_LATN_BF
  FF_LATN_CM
  FF_LATN_GH
  FF_LATN_GM
  FF_LATN_GN
  FF_LATN_GW
  FF_LATN_LR
  FF_LATN_MR
  FF_LATN_NE
  FF_LATN_NG
  FF_LATN_SL
  FF_LATN_SN
  FI
  FI_FI
  FIL
  FIL_PH
  FO
  FO_DK
  FO_FO
  FR
  FR_BE
  FR_BF
  FR_BI
  FR_BJ
  FR_BL
  FR_CA
  FR_CD
  FR_CF
  FR_CG
  FR_CH
  FR_CI
  FR_CM
  FR_DJ
  FR_DZ
  FR_FR
  FR_GA
  FR_GF
  FR_GN
  FR_GP
  FR_GQ
  FR_HT
  FR_KM
  FR_LU
  FR_MA
  FR_MC
  FR_MF
  FR_MG
  FR_ML
  FR_MQ
  FR_MR
  FR_MU
  FR_NC
  FR_NE
  FR_PF
  FR_PM
  FR_RE
  FR_RW
  FR_SC
  FR_SN
  FR_SY
  FR_TD
  FR_TG
  FR_TN
  FR_VU
  FR_WF
  FR_YT
  FUR
  FUR_IT
  FY
  FY_NL
  GA
  GA_GB
  GA_IE
  GD
  GD_GB
  GL
  GL_ES
  GSW
  GSW_CH
  GSW_FR
  GSW_LI
  GU
  GU_IN
  GUZ
  GUZ_KE
  GV
  GV_IM
  HA
  HA_GH
  HA_NE
  HA_NG
  HAW
  HAW_US
  HE
  HE_IL
  HI
  HI_IN
  HR
  HR_BA
  HR_HR
  HSB
  HSB_DE
  HU
  HU_HU
  HY
  HY_AM
  IA
  ID
  ID_ID
  IG
  IG_NG
  II
  II_CN
  IS
  IS_IS
  IT
  IT_CH
  IT_IT
  IT_SM
  IT_VA
  JA
  JA_JP
  JGO
  JGO_CM
  JMC
  JMC_TZ
  JV
  JV_ID
  KA
  KA_GE
  KAB
  KAB_DZ
  KAM
  KAM_KE
  KDE
  KDE_TZ
  KEA
  KEA_CV
  KHQ
  KHQ_ML
  KI
  KI_KE
  KK
  KK_KZ
  KKJ
  KKJ_CM
  KL
  KL_GL
  KLN
  KLN_KE
  KM
  KM_KH
  KN
  KN_IN
  KO
  KO_KP
  KO_KR
  KOK
  KOK_IN
  KS
  KS_ARAB
  KS_ARAB_IN
  KSB
  KSB_TZ
  KSF
  KSF_CM
  KSH
  KSH_DE
  KU
  KU_TR
  KW
  KW_GB
  KY
  KY_KG
  LAG
  LAG_TZ
  LB
  LB_LU
  LG
  LG_UG
  LKT
  LKT_US
  LN
  LN_AO
  LN_CD
  LN_CF
  LN_CG
  LO
  LO_LA
  LRC
  LRC_IQ
  LRC_IR
  LT
  LT_LT
  LU
  LU_CD
  LUO
  LUO_KE
  LUY
  LUY_KE
  LV
  LV_LV
  MAI
  MAI_IN
  MAS
  MAS_KE
  MAS_TZ
  MER
  MER_KE
  MFE
  MFE_MU
  MG
  MG_MG
  MGH
  MGH_MZ
  MGO
  MGO_CM
  MI
  MI_NZ
  MK
  MK_MK
  ML
  ML_IN
  MN
  MN_MN
  MNI
  MNI_BENG
  MNI_BENG_IN
  MR
  MR_IN
  MS
  MS_BN
  MS_ID
  MS_MY
  MS_SG
  MT
  MT_MT
  MUA
  MUA_CM
  MY
  MY_MM
  MZN
  MZN_IR
  NAQ
  NAQ_NA
  NB
  NB_NO
  NB_SJ
  ND
  ND_ZW
  NDS
  NDS_DE
  NDS_NL
  NE
  NE_IN
  NE_NP
  NL
  NL_AW
  NL_BE
  NL_BQ
  NL_CW
  NL_NL
  NL_SR
  NL_SX
  NMG
  NMG_CM
  NN
  NN_NO
  NNH
  NNH_CM
  NUS
  NUS_SS
  NYN
  NYN_UG
  OM
  OM_ET
  OM_KE
  OR
  OR_IN
  OS
  OS_GE
  OS_RU
  PA
  PA_ARAB
  PA_ARAB_PK
  PA_GURU
  PA_GURU_IN
  PCM
  PCM_NG
  PL
  PL_PL
  PRG
  PS
  PS_AF
  PS_PK
  PT
  PT_AO
  PT_BR
  PT_CH
  PT_CV
  PT_GQ
  PT_GW
  PT_LU
  PT_MO
  PT_MZ
  PT_PT
  PT_ST
  PT_TL
  QU
  QU_BO
  QU_EC
  QU_PE
  RM
  RM_CH
  RN
  RN_BI
  RO
  RO_MD
  RO_RO
  ROF
  ROF_TZ
  RU
  RU_BY
  RU_KG
  RU_KZ
  RU_MD
  RU_RU
  RU_UA
  RW
  RW_RW
  RWK
  RWK_TZ
  SAH
  SAH_RU
  SAQ
  SAQ_KE
  SAT
  SAT_OLCK
  SAT_OLCK_IN
  SBP
  SBP_TZ
  SD
  SD_ARAB
  SD_ARAB_PK
  SD_DEVA
  SD_DEVA_IN
  SE
  SE_FI
  SE_NO
  SE_SE
  SEH
  SEH_MZ
  SES
  SES_ML
  SG
  SG_CF
  SHI
  SHI_LATN
  SHI_LATN_MA
  SHI_TFNG
  SHI_TFNG_MA
  SI
  SI_LK
  SK
  SK_SK
  SL
  SL_SI
  SMN
  SMN_FI
  SN
  SN_ZW
  SO
  SO_DJ
  SO_ET
  SO_KE
  SO_SO
  SQ
  SQ_AL
  SQ_MK
  SQ_XK
  SR
  SR_CYRL
  SR_CYRL_BA
  SR_CYRL_ME
  SR_CYRL_RS
  SR_CYRL_XK
  SR_LATN
  SR_LATN_BA
  SR_LATN_ME
  SR_LATN_RS
  SR_LATN_XK
  SU
  SU_LATN
  SU_LATN_ID
  SV
  SV_AX
  SV_FI
  SV_SE
  SW
  SW_CD
  SW_KE
  SW_TZ
  SW_UG
  TA
  TA_IN
  TA_LK
  TA_MY
  TA_SG
  TE
  TE_IN
  TEO
  TEO_KE
  TEO_UG
  TG
  TG_TJ
  TH
  TH_TH
  TI
  TI_ER
  TI_ET
  TK
  TK_TM
  TO
  TO_TO
  TR
  TR_CY
  TR_TR
  TT
  TT_RU
  TWQ
  TWQ_NE
  TZM
  TZM_MA
  UG
  UG_CN
  UK
  UK_UA
  UR
  UR_IN
  UR_PK
  UZ
  UZ_ARAB
  UZ_ARAB_AF
  UZ_CYRL
  UZ_CYRL_UZ
  UZ_LATN
  UZ_LATN_UZ
  VAI
  VAI_LATN
  VAI_LATN_LR
  VAI_VAII
  VAI_VAII_LR
  VI
  VI_VN
  VO
  VUN
  VUN_TZ
  WAE
  WAE_CH
  WO
  WO_SN
  XH
  XH_ZA
  XOG
  XOG_UG
  YAV
  YAV_CM
  YI
  YO
  YO_BJ
  YO_NG
  YUE
  YUE_HANS
  YUE_HANS_CN
  YUE_HANT
  YUE_HANT_HK
  ZGH
  ZGH_MA
  ZH
  ZH_HANS
  ZH_HANS_CN
  ZH_HANS_HK
  ZH_HANS_MO
  ZH_HANS_SG
  ZH_HANT
  ZH_HANT_HK
  ZH_HANT_MO
  ZH_HANT_TW
  ZU
  ZU_ZA
}

type LanguageDisplay {
  """ISO 639 representation of the language name."""
  code: LanguageCodeEnum!

  """Full name of the language."""
  language: String!
}

type LimitInfo {
  """Defines the current resource usage."""
  currentUsage: Limits!

  """Defines the allowed maximum resource usage, null means unlimited."""
  allowedUsage: Limits!
}

type Limits {
  channels: Int
  orders: Int
  productVariants: Int
  staffUsers: Int
  warehouses: Int
}

"""The manifest definition."""
type Manifest {
  identifier: String!
  version: String!
  name: String!
  about: String
  permissions: [Permission!]
  appUrl: String

  """URL to iframe with the configuration for the app."""
  configurationUrl: String @deprecated(reason: "This field will be removed in Saleor 4.0. Use `appUrl` instead.")
  tokenTargetUrl: String

  """Description of the data privacy defined for this app."""
  dataPrivacy: String @deprecated(reason: "This field will be removed in Saleor 4.0. Use `dataPrivacyUrl` instead.")
  dataPrivacyUrl: String
  homepageUrl: String
  supportUrl: String
  extensions: [AppManifestExtension!]!

  """
  List of the app's webhooks.
  
  Added in Saleor 3.5.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  webhooks: [AppManifestWebhook!]!

  """
  The audience that will be included in all JWT tokens for the app.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  audience: String
}

type Margin {
  start: Int
  stop: Int
}

"""An enumeration."""
enum MeasurementUnitsEnum {
  CM
  M
  KM
  FT
  YD
  INCH
  SQ_CM
  SQ_M
  SQ_KM
  SQ_FT
  SQ_YD
  SQ_INCH
  CUBIC_MILLIMETER
  CUBIC_CENTIMETER
  CUBIC_DECIMETER
  CUBIC_METER
  LITER
  CUBIC_FOOT
  CUBIC_INCH
  CUBIC_YARD
  QT
  PINT
  FL_OZ
  ACRE_IN
  ACRE_FT
  G
  LB
  OZ
  KG
  TONNE
}

enum MediaChoicesSortField {
  """Sort media by ID."""
  ID
}

input MediaSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort media by the selected field."""
  field: MediaChoicesSortField!
}

"""
Represents a single menu - an object that is used to help navigate through the store.
"""
type Menu implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  name: String!
  slug: String!
  items: [MenuItem!]
}

"""
Deletes menus. 

Requires one of the following permissions: MANAGE_MENUS.
"""
type MenuBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  menuErrors: [MenuError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MenuError!]!
}

type MenuCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [MenuCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type MenuCountableEdge {
  """The item at the end of the edge."""
  node: Menu!

  """A cursor for use in pagination."""
  cursor: String!
}

"""
Creates a new Menu. 

Requires one of the following permissions: MANAGE_MENUS.
"""
type MenuCreate {
  menuErrors: [MenuError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MenuError!]!
  menu: Menu
}

input MenuCreateInput {
  """Name of the menu."""
  name: String!

  """Slug of the menu. Will be generated if not provided."""
  slug: String

  """List of menu items."""
  items: [MenuItemInput!]
}

"""
Event sent when new menu is created.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type MenuCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The menu the event relates to."""
  menu(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): Menu
}

"""
Deletes a menu. 

Requires one of the following permissions: MANAGE_MENUS.
"""
type MenuDelete {
  menuErrors: [MenuError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MenuError!]!
  menu: Menu
}

"""
Event sent when menu is deleted.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type MenuDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The menu the event relates to."""
  menu(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): Menu
}

type MenuError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: MenuErrorCode!
}

"""An enumeration."""
enum MenuErrorCode {
  CANNOT_ASSIGN_NODE
  GRAPHQL_ERROR
  INVALID
  INVALID_MENU_ITEM
  NO_MENU_ITEM_PROVIDED
  NOT_FOUND
  REQUIRED
  TOO_MANY_MENU_ITEMS
  UNIQUE
}

input MenuFilterInput {
  search: String
  slug: [String!]
  metadata: [MetadataFilter!]
  slugs: [String!]
}

input MenuInput {
  """Name of the menu."""
  name: String

  """Slug of the menu."""
  slug: String
}

"""
Represents a single item of the related menu. Can store categories, collection or pages.
"""
type MenuItem implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  name: String!
  menu: Menu!
  parent: MenuItem
  category: Category

  """
  A collection associated with this menu item. Requires one of the following permissions to include the unpublished items: MANAGE_ORDERS, MANAGE_DISCOUNTS, MANAGE_PRODUCTS.
  """
  collection: Collection

  """
  A page associated with this menu item. Requires one of the following permissions to include unpublished items: MANAGE_PAGES.
  """
  page: Page
  level: Int!
  children: [MenuItem!]

  """URL to the menu item."""
  url: String

  """Returns translated menu item fields for the given language code."""
  translation(
    """A language code to return the translation for menu item."""
    languageCode: LanguageCodeEnum!
  ): MenuItemTranslation
}

"""
Deletes menu items. 

Requires one of the following permissions: MANAGE_MENUS.
"""
type MenuItemBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  menuErrors: [MenuError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MenuError!]!
}

type MenuItemCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [MenuItemCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type MenuItemCountableEdge {
  """The item at the end of the edge."""
  node: MenuItem!

  """A cursor for use in pagination."""
  cursor: String!
}

"""
Creates a new menu item. 

Requires one of the following permissions: MANAGE_MENUS.
"""
type MenuItemCreate {
  menuErrors: [MenuError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MenuError!]!
  menuItem: MenuItem
}

input MenuItemCreateInput {
  """Name of the menu item."""
  name: String!

  """URL of the pointed item."""
  url: String

  """Category to which item points."""
  category: ID

  """Collection to which item points."""
  collection: ID

  """Page to which item points."""
  page: ID

  """Menu to which item belongs."""
  menu: ID!

  """ID of the parent menu. If empty, menu will be top level menu."""
  parent: ID
}

"""
Event sent when new menu item is created.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type MenuItemCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The menu item the event relates to."""
  menuItem(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): MenuItem
}

"""
Deletes a menu item. 

Requires one of the following permissions: MANAGE_MENUS.
"""
type MenuItemDelete {
  menuErrors: [MenuError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MenuError!]!
  menuItem: MenuItem
}

"""
Event sent when menu item is deleted.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type MenuItemDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The menu item the event relates to."""
  menuItem(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): MenuItem
}

input MenuItemFilterInput {
  search: String
  metadata: [MetadataFilter!]
}

input MenuItemInput {
  """Name of the menu item."""
  name: String

  """URL of the pointed item."""
  url: String

  """Category to which item points."""
  category: ID

  """Collection to which item points."""
  collection: ID

  """Page to which item points."""
  page: ID
}

"""
Moves items of menus. 

Requires one of the following permissions: MANAGE_MENUS.
"""
type MenuItemMove {
  """Assigned menu to move within."""
  menu: Menu
  menuErrors: [MenuError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MenuError!]!
}

input MenuItemMoveInput {
  """The menu item ID to move."""
  itemId: ID!

  """ID of the parent menu. If empty, menu will be top level menu."""
  parentId: ID

  """
  The new relative sorting position of the item (from -inf to +inf). 1 moves the item one position forward, -1 moves the item one position backward, 0 leaves the item unchanged.
  """
  sortOrder: Int
}

input MenuItemSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort menu items by the selected field."""
  field: MenuItemsSortField!
}

type MenuItemTranslatableContent implements Node {
  id: ID!
  name: String!

  """Returns translated menu item fields for the given language code."""
  translation(
    """A language code to return the translation for menu item."""
    languageCode: LanguageCodeEnum!
  ): MenuItemTranslation

  """
  Represents a single item of the related menu. Can store categories, collection or pages.
  """
  menuItem: MenuItem @deprecated(reason: "This field will be removed in Saleor 4.0. Get model fields from the root level queries.")
}

"""
Creates/updates translations for a menu item. 

Requires one of the following permissions: MANAGE_TRANSLATIONS.
"""
type MenuItemTranslate {
  translationErrors: [TranslationError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [TranslationError!]!
  menuItem: MenuItem
}

type MenuItemTranslation implements Node {
  id: ID!

  """Translation language."""
  language: LanguageDisplay!
  name: String!
}

"""
Updates a menu item. 

Requires one of the following permissions: MANAGE_MENUS.
"""
type MenuItemUpdate {
  menuErrors: [MenuError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MenuError!]!
  menuItem: MenuItem
}

"""
Event sent when menu item is updated.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type MenuItemUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The menu item the event relates to."""
  menuItem(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): MenuItem
}

enum MenuItemsSortField {
  """Sort menu items by name."""
  NAME
}

enum MenuSortField {
  """Sort menus by name."""
  NAME

  """Sort menus by items count."""
  ITEMS_COUNT
}

input MenuSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort menus by the selected field."""
  field: MenuSortField!
}

"""
Updates a menu. 

Requires one of the following permissions: MANAGE_MENUS.
"""
type MenuUpdate {
  menuErrors: [MenuError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MenuError!]!
  menu: Menu
}

"""
Event sent when menu is updated.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type MenuUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The menu the event relates to."""
  menu(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): Menu
}

"""
Metadata is a map of key-value pairs, both keys and values are `String`.

Example:
```
{
    "key1": "value1",
    "key2": "value2"
}
```
"""
scalar Metadata

type MetadataError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: MetadataErrorCode!
}

"""An enumeration."""
enum MetadataErrorCode {
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  REQUIRED
  NOT_UPDATED
}

input MetadataFilter {
  """Key of a metadata item."""
  key: String!

  """Value of a metadata item."""
  value: String
}

"""
order by min() on columns of table "Settings"
"""
input Settings_min_order_by {
  createdAt: order_by
  id: order_by
  key: order_by
  organizationId: order_by
  updatedAt: order_by
  value: order_by
}

"""
response of any mutation on the table "Settings"
"""
type Settings_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Settings!]!
}

"""
on_conflict condition type for table "Settings"
"""
input Settings_on_conflict {
  constraint: Settings_constraint!
  update_columns: [Settings_update_column!]! = []
  where: Settings_bool_exp
}

"""Ordering options when selecting data from "Settings"."""
input Settings_order_by {
  Organization: Organization_order_by
  createdAt: order_by
  id: order_by
  key: order_by
  organizationId: order_by
  updatedAt: order_by
  value: order_by
}

"""primary key columns input for table: Settings"""
input Settings_pk_columns_input {
  id: String!
}

"""
select columns of table "Settings"
"""
enum Settings_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  key

  """column name"""
  organizationId

  """column name"""
  updatedAt

  """column name"""
  value
}

"""
input type for updating data in table "Settings"
"""
input Settings_set_input {
  createdAt: timestamp
  id: String
  key: String
  organizationId: String
  updatedAt: timestamp
  value: String
}

"""
Streaming cursor of the table "Settings"
"""
input Settings_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: Settings_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input Settings_stream_cursor_value_input {
  createdAt: timestamp
  id: String
  key: String
  organizationId: String
  updatedAt: timestamp
  value: String
}

"""
update columns of table "Settings"
"""
enum Settings_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  key

  """column name"""
  organizationId

  """column name"""
  updatedAt

  """column name"""
  value
}

input Settings_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: Settings_set_input
  where: Settings_bool_exp!
}

input SignupInputbe {
  email: String!
  firstname: String
  lastname: String
  organizationId: String!
  password: String!
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String

  """does the column match the given case-insensitive pattern"""
  _ilike: String
  _in: [String!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: String
  _is_null: Boolean

  """does the column match the given pattern"""
  _like: String
  _lt: String
  _lte: String
  _neq: String

  """does the column NOT match the given case-insensitive pattern"""
  _nilike: String
  _nin: [String!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: String

  """does the column NOT match the given pattern"""
  _nlike: String

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: String

  """does the column NOT match the given SQL regular expression"""
  _nsimilar: String

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: String

  """does the column match the given SQL regular expression"""
  _similar: String
}

"""
columns and relationships of "Task"
"""
type Task {
  """An array relationship"""
  Comments(
    """distinct select on columns"""
    distinct_on: [Comment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Comment_order_by!]

    """filter the rows returned"""
    where: Comment_bool_exp
  ): [Comment!]!

  """An aggregate relationship"""
  Comments_aggregate(
    """distinct select on columns"""
    distinct_on: [Comment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Comment_order_by!]

    """filter the rows returned"""
    where: Comment_bool_exp
  ): Comment_aggregate!

  """An array relationship"""
  EventLogs(
    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): [EventLog!]!

  """An aggregate relationship"""
  EventLogs_aggregate(
    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): EventLog_aggregate!

  """An object relationship"""
  Organization: Organization!

  """An object relationship"""
  Task: Task

  """An array relationship"""
  Tasks(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): [Task!]!

  """An aggregate relationship"""
  Tasks_aggregate(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): Task_aggregate!

  """An object relationship"""
  Team: Team!
  assigneeId: String!
  createdAt: timestamp!
  creatorId: String!
  description: String!
  dueDate: timestamp!
  id: String!
  organizationId: String!
  parentId: String
  priority: TaskPriority!
  projectId: String!
  status: TaskStatus!
  teamId: String!
  title: String!
  updatedAt: timestamp!
}

"""
columns and relationships of "TaskDefinition"
"""
type TaskDefinition {
  """An object relationship"""
  Activity: Activity!

  """An object relationship"""
  Organization: Organization!

  """An object relationship"""
  TaskDefinition: TaskDefinition

  """An array relationship"""
  TaskDefinitions(
    """distinct select on columns"""
    distinct_on: [TaskDefinition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): [TaskDefinition!]!

  """An aggregate relationship"""
  TaskDefinitions_aggregate(
    """distinct select on columns"""
    distinct_on: [TaskDefinition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): TaskDefinition_aggregate!

  """An object relationship"""
  Workflow: Workflow!
  actvityId: String!
  config: String!
  createdAt: timestamp!
  description: String!
  icon: String!
  id: String!
  organizationId: String!
  parentId: String
  thumbnail: String!
  title: String!
  updatedAt: timestamp!
  workflowId: String!
}

"""
aggregated selection of "TaskDefinition"
"""
type TaskDefinition_aggregate {
  aggregate: TaskDefinition_aggregate_fields
  nodes: [TaskDefinition!]!
}

input TaskDefinition_aggregate_bool_exp {
  count: TaskDefinition_aggregate_bool_exp_count
}

input TaskDefinition_aggregate_bool_exp_count {
  arguments: [TaskDefinition_select_column!]
  distinct: Boolean
  filter: TaskDefinition_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "TaskDefinition"
"""
type TaskDefinition_aggregate_fields {
  count(columns: [TaskDefinition_select_column!], distinct: Boolean): Int!
  max: TaskDefinition_max_fields
  min: TaskDefinition_min_fields
}

"""
order by aggregate values of table "TaskDefinition"
"""
input TaskDefinition_aggregate_order_by {
  count: order_by
  max: TaskDefinition_max_order_by
  min: TaskDefinition_min_order_by
}

"""
input type for inserting array relation for remote table "TaskDefinition"
"""
input TaskDefinition_arr_rel_insert_input {
  data: [TaskDefinition_insert_input!]!

  """upsert condition"""
  on_conflict: TaskDefinition_on_conflict
}

"""
Boolean expression to filter rows from the table "TaskDefinition". All fields are combined with a logical 'AND'.
"""
input TaskDefinition_bool_exp {
  Activity: Activity_bool_exp
  Organization: Organization_bool_exp
  TaskDefinition: TaskDefinition_bool_exp
  TaskDefinitions: TaskDefinition_bool_exp
  TaskDefinitions_aggregate: TaskDefinition_aggregate_bool_exp
  Workflow: Workflow_bool_exp
  _and: [TaskDefinition_bool_exp!]
  _not: TaskDefinition_bool_exp
  _or: [TaskDefinition_bool_exp!]
  actvityId: String_comparison_exp
  config: String_comparison_exp
  createdAt: timestamp_comparison_exp
  description: String_comparison_exp
  icon: String_comparison_exp
  id: String_comparison_exp
  organizationId: String_comparison_exp
  parentId: String_comparison_exp
  thumbnail: String_comparison_exp
  title: String_comparison_exp
  updatedAt: timestamp_comparison_exp
  workflowId: String_comparison_exp
}

"""
unique or primary key constraints on table "TaskDefinition"
"""
enum TaskDefinition_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  TaskDefinition_pkey
}

"""
input type for inserting data into table "TaskDefinition"
"""
input TaskDefinition_insert_input {
  Activity: Activity_obj_rel_insert_input
  Organization: Organization_obj_rel_insert_input
  TaskDefinition: TaskDefinition_obj_rel_insert_input
  TaskDefinitions: TaskDefinition_arr_rel_insert_input
  Workflow: Workflow_obj_rel_insert_input
  actvityId: String
  config: String
  createdAt: timestamp
  description: String
  icon: String
  id: String
  organizationId: String
  parentId: String
  thumbnail: String
  title: String
  updatedAt: timestamp
  workflowId: String
}

"""aggregate max on columns"""
type TaskDefinition_max_fields {
  actvityId: String
  config: String
  createdAt: timestamp
  description: String
  icon: String
  id: String
  organizationId: String
  parentId: String
  thumbnail: String
  title: String
  updatedAt: timestamp
  workflowId: String
}

"""
order by max() on columns of table "TaskDefinition"
"""
input TaskDefinition_max_order_by {
  actvityId: order_by
  config: order_by
  createdAt: order_by
  description: order_by
  icon: order_by
  id: order_by
  organizationId: order_by
  parentId: order_by
  thumbnail: order_by
  title: order_by
  updatedAt: order_by
  workflowId: order_by
}

"""aggregate min on columns"""
type TaskDefinition_min_fields {
  actvityId: String
  config: String
  createdAt: timestamp
  description: String
  icon: String
  id: String
  organizationId: String
  parentId: String
  thumbnail: String
  title: String
  updatedAt: timestamp
  workflowId: String
}

"""
order by min() on columns of table "TaskDefinition"
"""
input TaskDefinition_min_order_by {
  actvityId: order_by
  config: order_by
  createdAt: order_by
  description: order_by
  icon: order_by
  id: order_by
  organizationId: order_by
  parentId: order_by
  thumbnail: order_by
  title: order_by
  updatedAt: order_by
  workflowId: order_by
}

"""
response of any mutation on the table "TaskDefinition"
"""
type TaskDefinition_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [TaskDefinition!]!
}

"""
input type for inserting object relation for remote table "TaskDefinition"
"""
input TaskDefinition_obj_rel_insert_input {
  data: TaskDefinition_insert_input!

  """upsert condition"""
  on_conflict: TaskDefinition_on_conflict
}

"""
on_conflict condition type for table "TaskDefinition"
"""
input TaskDefinition_on_conflict {
  constraint: TaskDefinition_constraint!
  update_columns: [TaskDefinition_update_column!]! = []
  where: TaskDefinition_bool_exp
}

"""Ordering options when selecting data from "TaskDefinition"."""
input TaskDefinition_order_by {
  Activity: Activity_order_by
  Organization: Organization_order_by
  TaskDefinition: TaskDefinition_order_by
  TaskDefinitions_aggregate: TaskDefinition_aggregate_order_by
  Workflow: Workflow_order_by
  actvityId: order_by
  config: order_by
  createdAt: order_by
  description: order_by
  icon: order_by
  id: order_by
  organizationId: order_by
  parentId: order_by
  thumbnail: order_by
  title: order_by
  updatedAt: order_by
  workflowId: order_by
}

"""primary key columns input for table: TaskDefinition"""
input TaskDefinition_pk_columns_input {
  id: String!
}

"""
select columns of table "TaskDefinition"
"""
enum TaskDefinition_select_column {
  """column name"""
  actvityId

  """column name"""
  config

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  icon

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  parentId

  """column name"""
  thumbnail

  """column name"""
  title

  """column name"""
  updatedAt

  """column name"""
  workflowId
}

"""
input type for updating data in table "TaskDefinition"
"""
input TaskDefinition_set_input {
  actvityId: String
  config: String
  createdAt: timestamp
  description: String
  icon: String
  id: String
  organizationId: String
  parentId: String
  thumbnail: String
  title: String
  updatedAt: timestamp
  workflowId: String
}

"""
Streaming cursor of the table "TaskDefinition"
"""
input TaskDefinition_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: TaskDefinition_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input TaskDefinition_stream_cursor_value_input {
  actvityId: String
  config: String
  createdAt: timestamp
  description: String
  icon: String
  id: String
  organizationId: String
  parentId: String
  thumbnail: String
  title: String
  updatedAt: timestamp
  workflowId: String
}

"""
update columns of table "TaskDefinition"
"""
enum TaskDefinition_update_column {
  """column name"""
  actvityId

  """column name"""
  config

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  icon

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  parentId

  """column name"""
  thumbnail

  """column name"""
  title

  """column name"""
  updatedAt

  """column name"""
  workflowId
}

input TaskDefinition_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: TaskDefinition_set_input
  where: TaskDefinition_bool_exp!
}

scalar TaskPriority

"""
Boolean expression to compare columns of type "TaskPriority". All fields are combined with logical 'AND'.
"""
input TaskPriority_comparison_exp {
  _eq: TaskPriority
  _gt: TaskPriority
  _gte: TaskPriority
  _in: [TaskPriority!]
  _is_null: Boolean
  _lt: TaskPriority
  _lte: TaskPriority
  _neq: TaskPriority
  _nin: [TaskPriority!]
}

scalar TaskStatus

"""
Boolean expression to compare columns of type "TaskStatus". All fields are combined with logical 'AND'.
"""
input TaskStatus_comparison_exp {
  _eq: TaskStatus
  _gt: TaskStatus
  _gte: TaskStatus
  _in: [TaskStatus!]
  _is_null: Boolean
  _lt: TaskStatus
  _lte: TaskStatus
  _neq: TaskStatus
  _nin: [TaskStatus!]
}

"""
aggregated selection of "Task"
"""
type Task_aggregate {
  aggregate: Task_aggregate_fields
  nodes: [Task!]!
}

input Task_aggregate_bool_exp {
  count: Task_aggregate_bool_exp_count
}

input Task_aggregate_bool_exp_count {
  arguments: [Task_select_column!]
  distinct: Boolean
  filter: Task_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "Task"
"""
type Task_aggregate_fields {
  count(columns: [Task_select_column!], distinct: Boolean): Int!
  max: Task_max_fields
  min: Task_min_fields
}

"""
order by aggregate values of table "Task"
"""
input Task_aggregate_order_by {
  count: order_by
  max: Task_max_order_by
  min: Task_min_order_by
}

"""
input type for inserting array relation for remote table "Task"
"""
input Task_arr_rel_insert_input {
  data: [Task_insert_input!]!

  """upsert condition"""
  on_conflict: Task_on_conflict
}

"""
Boolean expression to filter rows from the table "Task". All fields are combined with a logical 'AND'.
"""
input Task_bool_exp {
  Comments: Comment_bool_exp
  Comments_aggregate: Comment_aggregate_bool_exp
  EventLogs: EventLog_bool_exp
  EventLogs_aggregate: EventLog_aggregate_bool_exp
  Organization: Organization_bool_exp
  Task: Task_bool_exp
  Tasks: Task_bool_exp
  Tasks_aggregate: Task_aggregate_bool_exp
  Team: Team_bool_exp
  _and: [Task_bool_exp!]
  _not: Task_bool_exp
  _or: [Task_bool_exp!]
  assigneeId: String_comparison_exp
  createdAt: timestamp_comparison_exp
  creatorId: String_comparison_exp
  description: String_comparison_exp
  dueDate: timestamp_comparison_exp
  id: String_comparison_exp
  organizationId: String_comparison_exp
  parentId: String_comparison_exp
  priority: TaskPriority_comparison_exp
  projectId: String_comparison_exp
  status: TaskStatus_comparison_exp
  teamId: String_comparison_exp
  title: String_comparison_exp
  updatedAt: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "Task"
"""
enum Task_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Task_pkey
}

"""
input type for inserting data into table "Task"
"""
input Task_insert_input {
  Comments: Comment_arr_rel_insert_input
  EventLogs: EventLog_arr_rel_insert_input
  Organization: Organization_obj_rel_insert_input
  Task: Task_obj_rel_insert_input
  Tasks: Task_arr_rel_insert_input
  Team: Team_obj_rel_insert_input
  assigneeId: String
  createdAt: timestamp
  creatorId: String
  description: String
  dueDate: timestamp
  id: String
  organizationId: String
  parentId: String
  priority: TaskPriority
  projectId: String
  status: TaskStatus
  teamId: String
  title: String
  updatedAt: timestamp
}

"""aggregate max on columns"""
type Task_max_fields {
  assigneeId: String
  createdAt: timestamp
  creatorId: String
  description: String
  dueDate: timestamp
  id: String
  organizationId: String
  parentId: String
  priority: TaskPriority
  projectId: String
  status: TaskStatus
  teamId: String
  title: String
  updatedAt: timestamp
}

"""
order by max() on columns of table "Task"
"""
input Task_max_order_by {
  assigneeId: order_by
  createdAt: order_by
  creatorId: order_by
  description: order_by
  dueDate: order_by
  id: order_by
  organizationId: order_by
  parentId: order_by
  priority: order_by
  projectId: order_by
  status: order_by
  teamId: order_by
  title: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type Task_min_fields {
  assigneeId: String
  createdAt: timestamp
  creatorId: String
  description: String
  dueDate: timestamp
  id: String
  organizationId: String
  parentId: String
  priority: TaskPriority
  projectId: String
  status: TaskStatus
  teamId: String
  title: String
  updatedAt: timestamp
}

"""
order by min() on columns of table "Task"
"""
input Task_min_order_by {
  assigneeId: order_by
  createdAt: order_by
  creatorId: order_by
  description: order_by
  dueDate: order_by
  id: order_by
  organizationId: order_by
  parentId: order_by
  priority: order_by
  projectId: order_by
  status: order_by
  teamId: order_by
  title: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "Task"
"""
type Task_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Task!]!
}

"""
input type for inserting object relation for remote table "Task"
"""
input Task_obj_rel_insert_input {
  data: Task_insert_input!

  """upsert condition"""
  on_conflict: Task_on_conflict
}

"""
on_conflict condition type for table "Task"
"""
input Task_on_conflict {
  constraint: Task_constraint!
  update_columns: [Task_update_column!]! = []
  where: Task_bool_exp
}

"""Ordering options when selecting data from "Task"."""
input Task_order_by {
  Comments_aggregate: Comment_aggregate_order_by
  EventLogs_aggregate: EventLog_aggregate_order_by
  Organization: Organization_order_by
  Task: Task_order_by
  Tasks_aggregate: Task_aggregate_order_by
  Team: Team_order_by
  assigneeId: order_by
  createdAt: order_by
  creatorId: order_by
  description: order_by
  dueDate: order_by
  id: order_by
  organizationId: order_by
  parentId: order_by
  priority: order_by
  projectId: order_by
  status: order_by
  teamId: order_by
  title: order_by
  updatedAt: order_by
}

"""primary key columns input for table: Task"""
input Task_pk_columns_input {
  id: String!
}

"""
select columns of table "Task"
"""
enum Task_select_column {
  """column name"""
  assigneeId

  """column name"""
  createdAt

  """column name"""
  creatorId

  """column name"""
  description

  """column name"""
  dueDate

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  parentId

  """column name"""
  priority

  """column name"""
  projectId

  """column name"""
  status

  """column name"""
  teamId

  """column name"""
  title

  """column name"""
  updatedAt
}

"""
input type for updating data in table "Task"
"""
input Task_set_input {
  assigneeId: String
  createdAt: timestamp
  creatorId: String
  description: String
  dueDate: timestamp
  id: String
  organizationId: String
  parentId: String
  priority: TaskPriority
  projectId: String
  status: TaskStatus
  teamId: String
  title: String
  updatedAt: timestamp
}

"""
Streaming cursor of the table "Task"
"""
input Task_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: Task_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input Task_stream_cursor_value_input {
  assigneeId: String
  createdAt: timestamp
  creatorId: String
  description: String
  dueDate: timestamp
  id: String
  organizationId: String
  parentId: String
  priority: TaskPriority
  projectId: String
  status: TaskStatus
  teamId: String
  title: String
  updatedAt: timestamp
}

"""
update columns of table "Task"
"""
enum Task_update_column {
  """column name"""
  assigneeId

  """column name"""
  createdAt

  """column name"""
  creatorId

  """column name"""
  description

  """column name"""
  dueDate

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  parentId

  """column name"""
  priority

  """column name"""
  projectId

  """column name"""
  status

  """column name"""
  teamId

  """column name"""
  title

  """column name"""
  updatedAt
}

input Task_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: Task_set_input
  where: Task_bool_exp!
}

"""
columns and relationships of "Team"
"""
type Team {
  """An array relationship"""
  MemberOnTeams(
    """distinct select on columns"""
    distinct_on: [MemberOnTeams_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnTeams_order_by!]

    """filter the rows returned"""
    where: MemberOnTeams_bool_exp
  ): [MemberOnTeams!]!

  """An aggregate relationship"""
  MemberOnTeams_aggregate(
    """distinct select on columns"""
    distinct_on: [MemberOnTeams_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnTeams_order_by!]

    """filter the rows returned"""
    where: MemberOnTeams_bool_exp
  ): MemberOnTeams_aggregate!

  """An object relationship"""
  Organization: Organization!

  """An array relationship"""
  Tasks(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): [Task!]!

  """An aggregate relationship"""
  Tasks_aggregate(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): Task_aggregate!

  """An object relationship"""
  User: User!
  bio: String!
  createdAt: timestamp!
  creatorId: String!
  description: String!
  id: String!
  managerId: String!
  name: String!
  organizationId: String!
  updatedAt: timestamp!

  """An object relationship"""
  userByManagerid: User!
}

"""
aggregated selection of "Team"
"""
type Team_aggregate {
  aggregate: Team_aggregate_fields
  nodes: [Team!]!
}

input Team_aggregate_bool_exp {
  count: Team_aggregate_bool_exp_count
}

input Team_aggregate_bool_exp_count {
  arguments: [Team_select_column!]
  distinct: Boolean
  filter: Team_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "Team"
"""
type Team_aggregate_fields {
  count(columns: [Team_select_column!], distinct: Boolean): Int!
  max: Team_max_fields
  min: Team_min_fields
}

"""
order by aggregate values of table "Team"
"""
input Team_aggregate_order_by {
  count: order_by
  max: Team_max_order_by
  min: Team_min_order_by
}

"""
input type for inserting array relation for remote table "Team"
"""
input Team_arr_rel_insert_input {
  data: [Team_insert_input!]!

  """upsert condition"""
  on_conflict: Team_on_conflict
}

"""
Boolean expression to filter rows from the table "Team". All fields are combined with a logical 'AND'.
"""
input Team_bool_exp {
  MemberOnTeams: MemberOnTeams_bool_exp
  MemberOnTeams_aggregate: MemberOnTeams_aggregate_bool_exp
  Organization: Organization_bool_exp
  Tasks: Task_bool_exp
  Tasks_aggregate: Task_aggregate_bool_exp
  User: User_bool_exp
  _and: [Team_bool_exp!]
  _not: Team_bool_exp
  _or: [Team_bool_exp!]
  bio: String_comparison_exp
  createdAt: timestamp_comparison_exp
  creatorId: String_comparison_exp
  description: String_comparison_exp
  id: String_comparison_exp
  managerId: String_comparison_exp
  name: String_comparison_exp
  organizationId: String_comparison_exp
  updatedAt: timestamp_comparison_exp
  userByManagerid: User_bool_exp
}

"""
unique or primary key constraints on table "Team"
"""
enum Team_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Team_pkey
}

"""
input type for inserting data into table "Team"
"""
input Team_insert_input {
  MemberOnTeams: MemberOnTeams_arr_rel_insert_input
  Organization: Organization_obj_rel_insert_input
  Tasks: Task_arr_rel_insert_input
  User: User_obj_rel_insert_input
  bio: String
  createdAt: timestamp
  creatorId: String
  description: String
  id: String
  managerId: String
  name: String
  organizationId: String
  updatedAt: timestamp
  userByManagerid: User_obj_rel_insert_input
}

"""aggregate max on columns"""
type Team_max_fields {
  bio: String
  createdAt: timestamp
  creatorId: String
  description: String
  id: String
  managerId: String
  name: String
  organizationId: String
  updatedAt: timestamp
}

"""
order by max() on columns of table "Team"
"""
input Team_max_order_by {
  bio: order_by
  createdAt: order_by
  creatorId: order_by
  description: order_by
  id: order_by
  managerId: order_by
  name: order_by
  organizationId: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type Team_min_fields {
  bio: String
  createdAt: timestamp
  creatorId: String
  description: String
  id: String
  managerId: String
  name: String
  organizationId: String
  updatedAt: timestamp
}

"""
order by min() on columns of table "Team"
"""
input Team_min_order_by {
  bio: order_by
  createdAt: order_by
  creatorId: order_by
  description: order_by
  id: order_by
  managerId: order_by
  name: order_by
  organizationId: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "Team"
"""
type Team_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Team!]!
}

"""
input type for inserting object relation for remote table "Team"
"""
input Team_obj_rel_insert_input {
  data: Team_insert_input!

  """upsert condition"""
  on_conflict: Team_on_conflict
}

"""
on_conflict condition type for table "Team"
"""
input Team_on_conflict {
  constraint: Team_constraint!
  update_columns: [Team_update_column!]! = []
  where: Team_bool_exp
}

"""Ordering options when selecting data from "Team"."""
input Team_order_by {
  MemberOnTeams_aggregate: MemberOnTeams_aggregate_order_by
  Organization: Organization_order_by
  Tasks_aggregate: Task_aggregate_order_by
  User: User_order_by
  bio: order_by
  createdAt: order_by
  creatorId: order_by
  description: order_by
  id: order_by
  managerId: order_by
  name: order_by
  organizationId: order_by
  updatedAt: order_by
  userByManagerid: User_order_by
}

"""primary key columns input for table: Team"""
input Team_pk_columns_input {
  id: String!
}

"""
select columns of table "Team"
"""
enum Team_select_column {
  """column name"""
  bio

  """column name"""
  createdAt

  """column name"""
  creatorId

  """column name"""
  description

  """column name"""
  id

  """column name"""
  managerId

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  updatedAt
}

"""
input type for updating data in table "Team"
"""
input Team_set_input {
  bio: String
  createdAt: timestamp
  creatorId: String
  description: String
  id: String
  managerId: String
  name: String
  organizationId: String
  updatedAt: timestamp
}

"""
Streaming cursor of the table "Team"
"""
input Team_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: Team_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input Team_stream_cursor_value_input {
  bio: String
  createdAt: timestamp
  creatorId: String
  description: String
  id: String
  managerId: String
  name: String
  organizationId: String
  updatedAt: timestamp
}

"""
update columns of table "Team"
"""
enum Team_update_column {
  """column name"""
  bio

  """column name"""
  createdAt

  """column name"""
  creatorId

  """column name"""
  description

  """column name"""
  id

  """column name"""
  managerId

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  updatedAt
}

input Team_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: Team_set_input
  where: Team_bool_exp!
}

type Tokenbe {
  """JWT access token"""
  accessToken: JWTbe!

  """JWT refresh token"""
  refreshToken: JWTbe!
}

"""
columns and relationships of "Trigger"
"""
type Trigger {
  """An object relationship"""
  Activity: Activity!
  activityId: String!
  config(
    """JSON select path"""
    path: String
  ): jsonb!
  createdAt: timestamp!
  description: String!
  id: String!
  name: String!
  type: TriggerType!
  updatedAt: timestamp!
}

scalar TriggerType

"""
Boolean expression to compare columns of type "TriggerType". All fields are combined with logical 'AND'.
"""
input TriggerType_comparison_exp {
  _eq: TriggerType
  _gt: TriggerType
  _gte: TriggerType
  _in: [TriggerType!]
  _is_null: Boolean
  _lt: TriggerType
  _lte: TriggerType
  _neq: TriggerType
  _nin: [TriggerType!]
}

"""
aggregated selection of "Trigger"
"""
type Trigger_aggregate {
  aggregate: Trigger_aggregate_fields
  nodes: [Trigger!]!
}

input Trigger_aggregate_bool_exp {
  count: Trigger_aggregate_bool_exp_count
}

input Trigger_aggregate_bool_exp_count {
  arguments: [Trigger_select_column!]
  distinct: Boolean
  filter: Trigger_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "Trigger"
"""
type Trigger_aggregate_fields {
  count(columns: [Trigger_select_column!], distinct: Boolean): Int!
  max: Trigger_max_fields
  min: Trigger_min_fields
}

"""
order by aggregate values of table "Trigger"
"""
input Trigger_aggregate_order_by {
  count: order_by
  max: Trigger_max_order_by
  min: Trigger_min_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input Trigger_append_input {
  config: jsonb
}

"""
input type for inserting array relation for remote table "Trigger"
"""
input Trigger_arr_rel_insert_input {
  data: [Trigger_insert_input!]!

  """upsert condition"""
  on_conflict: Trigger_on_conflict
}

"""
Boolean expression to filter rows from the table "Trigger". All fields are combined with a logical 'AND'.
"""
input Trigger_bool_exp {
  Activity: Activity_bool_exp
  _and: [Trigger_bool_exp!]
  _not: Trigger_bool_exp
  _or: [Trigger_bool_exp!]
  activityId: String_comparison_exp
  config: jsonb_comparison_exp
  createdAt: timestamp_comparison_exp
  description: String_comparison_exp
  id: String_comparison_exp
  name: String_comparison_exp
  type: TriggerType_comparison_exp
  updatedAt: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "Trigger"
"""
enum Trigger_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Trigger_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input Trigger_delete_at_path_input {
  config: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input Trigger_delete_elem_input {
  config: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input Trigger_delete_key_input {
  config: String
}

"""
input type for inserting data into table "Trigger"
"""
input Trigger_insert_input {
  Activity: Activity_obj_rel_insert_input
  activityId: String
  config: jsonb
  createdAt: timestamp
  description: String
  id: String
  name: String
  type: TriggerType
  updatedAt: timestamp
}

"""aggregate max on columns"""
type Trigger_max_fields {
  activityId: String
  createdAt: timestamp
  description: String
  id: String
  name: String
  type: TriggerType
  updatedAt: timestamp
}

"""
order by max() on columns of table "Trigger"
"""
input Trigger_max_order_by {
  activityId: order_by
  createdAt: order_by
  description: order_by
  id: order_by
  name: order_by
  type: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type Trigger_min_fields {
  activityId: String
  createdAt: timestamp
  description: String
  id: String
  name: String
  type: TriggerType
  updatedAt: timestamp
}

"""
order by min() on columns of table "Trigger"
"""
input Trigger_min_order_by {
  activityId: order_by
  createdAt: order_by
  description: order_by
  id: order_by
  name: order_by
  type: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "Trigger"
"""
type Trigger_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Trigger!]!
}

"""
on_conflict condition type for table "Trigger"
"""
input Trigger_on_conflict {
  constraint: Trigger_constraint!
  update_columns: [Trigger_update_column!]! = []
  where: Trigger_bool_exp
}

"""Ordering options when selecting data from "Trigger"."""
input Trigger_order_by {
  Activity: Activity_order_by
  activityId: order_by
  config: order_by
  createdAt: order_by
  description: order_by
  id: order_by
  name: order_by
  type: order_by
  updatedAt: order_by
}

"""primary key columns input for table: Trigger"""
input Trigger_pk_columns_input {
  id: String!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input Trigger_prepend_input {
  config: jsonb
}

"""
select columns of table "Trigger"
"""
enum Trigger_select_column {
  """column name"""
  activityId

  """column name"""
  config

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name

  """column name"""
  type

  """column name"""
  updatedAt
}

"""
input type for updating data in table "Trigger"
"""
input Trigger_set_input {
  activityId: String
  config: jsonb
  createdAt: timestamp
  description: String
  id: String
  name: String
  type: TriggerType
  updatedAt: timestamp
}

"""
Streaming cursor of the table "Trigger"
"""
input Trigger_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: Trigger_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input Trigger_stream_cursor_value_input {
  activityId: String
  config: jsonb
  createdAt: timestamp
  description: String
  id: String
  name: String
  type: TriggerType
  updatedAt: timestamp
}

"""
update columns of table "Trigger"
"""
enum Trigger_update_column {
  """column name"""
  activityId

  """column name"""
  config

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name

  """column name"""
  type

  """column name"""
  updatedAt
}

input Trigger_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: Trigger_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: Trigger_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: Trigger_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: Trigger_delete_key_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: Trigger_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: Trigger_set_input
  where: Trigger_bool_exp!
}

input UpdateUserInputbe {
  firstname: String
  lastname: String
}

"""
columns and relationships of "User"
"""
type User {
  """An array relationship"""
  Comments(
    """distinct select on columns"""
    distinct_on: [Comment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Comment_order_by!]

    """filter the rows returned"""
    where: Comment_bool_exp
  ): [Comment!]!

  """An aggregate relationship"""
  Comments_aggregate(
    """distinct select on columns"""
    distinct_on: [Comment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Comment_order_by!]

    """filter the rows returned"""
    where: Comment_bool_exp
  ): Comment_aggregate!

  """An array relationship"""
  EventLogs(
    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): [EventLog!]!

  """An aggregate relationship"""
  EventLogs_aggregate(
    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): EventLog_aggregate!

  """An array relationship"""
  MemberOnTeams(
    """distinct select on columns"""
    distinct_on: [MemberOnTeams_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnTeams_order_by!]

    """filter the rows returned"""
    where: MemberOnTeams_bool_exp
  ): [MemberOnTeams!]!

  """An aggregate relationship"""
  MemberOnTeams_aggregate(
    """distinct select on columns"""
    distinct_on: [MemberOnTeams_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnTeams_order_by!]

    """filter the rows returned"""
    where: MemberOnTeams_bool_exp
  ): MemberOnTeams_aggregate!

  """An object relationship"""
  Organization: Organization!

  """An array relationship"""
  Posts(
    """distinct select on columns"""
    distinct_on: [Post_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Post_order_by!]

    """filter the rows returned"""
    where: Post_bool_exp
  ): [Post!]!

  """An aggregate relationship"""
  Posts_aggregate(
    """distinct select on columns"""
    distinct_on: [Post_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Post_order_by!]

    """filter the rows returned"""
    where: Post_bool_exp
  ): Post_aggregate!

  """An array relationship"""
  Teams(
    """distinct select on columns"""
    distinct_on: [Team_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Team_order_by!]

    """filter the rows returned"""
    where: Team_bool_exp
  ): [Team!]!

  """An aggregate relationship"""
  Teams_aggregate(
    """distinct select on columns"""
    distinct_on: [Team_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Team_order_by!]

    """filter the rows returned"""
    where: Team_bool_exp
  ): Team_aggregate!
  createdAt: timestamp!
  email: String!
  firstname: String
  id: String!
  lastname: String
  organizationId: String!
  password: String!
  role: Role!

  """An array relationship"""
  teamsByManagerid(
    """distinct select on columns"""
    distinct_on: [Team_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Team_order_by!]

    """filter the rows returned"""
    where: Team_bool_exp
  ): [Team!]!

  """An aggregate relationship"""
  teamsByManagerid_aggregate(
    """distinct select on columns"""
    distinct_on: [Team_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Team_order_by!]

    """filter the rows returned"""
    where: Team_bool_exp
  ): Team_aggregate!
  updatedAt: timestamp!
}

"""
aggregated selection of "User"
"""
type User_aggregate {
  aggregate: User_aggregate_fields
  nodes: [User!]!
}

input User_aggregate_bool_exp {
  count: User_aggregate_bool_exp_count
}

input User_aggregate_bool_exp_count {
  arguments: [User_select_column!]
  distinct: Boolean
  filter: User_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "User"
"""
type User_aggregate_fields {
  count(columns: [User_select_column!], distinct: Boolean): Int!
  max: User_max_fields
  min: User_min_fields
}

"""
order by aggregate values of table "User"
"""
input User_aggregate_order_by {
  count: order_by
  max: User_max_order_by
  min: User_min_order_by
}

"""
input type for inserting array relation for remote table "User"
"""
input User_arr_rel_insert_input {
  data: [User_insert_input!]!

  """upsert condition"""
  on_conflict: User_on_conflict
}

"""
Boolean expression to filter rows from the table "User". All fields are combined with a logical 'AND'.
"""
input User_bool_exp {
  Comments: Comment_bool_exp
  Comments_aggregate: Comment_aggregate_bool_exp
  EventLogs: EventLog_bool_exp
  EventLogs_aggregate: EventLog_aggregate_bool_exp
  MemberOnTeams: MemberOnTeams_bool_exp
  MemberOnTeams_aggregate: MemberOnTeams_aggregate_bool_exp
  Organization: Organization_bool_exp
  Posts: Post_bool_exp
  Posts_aggregate: Post_aggregate_bool_exp
  Teams: Team_bool_exp
  Teams_aggregate: Team_aggregate_bool_exp
  _and: [User_bool_exp!]
  _not: User_bool_exp
  _or: [User_bool_exp!]
  createdAt: timestamp_comparison_exp
  email: String_comparison_exp
  firstname: String_comparison_exp
  id: String_comparison_exp
  lastname: String_comparison_exp
  organizationId: String_comparison_exp
  password: String_comparison_exp
  role: Role_comparison_exp
  teamsByManagerid: Team_bool_exp
  teamsByManagerid_aggregate: Team_aggregate_bool_exp
  updatedAt: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "User"
"""
enum User_constraint {
  """
  unique or primary key constraint on columns "email"
  """
  User_email_key

  """
  unique or primary key constraint on columns "id"
  """
  User_pkey
}

"""
input type for inserting data into table "User"
"""
input User_insert_input {
  Comments: Comment_arr_rel_insert_input
  EventLogs: EventLog_arr_rel_insert_input
  MemberOnTeams: MemberOnTeams_arr_rel_insert_input
  Organization: Organization_obj_rel_insert_input
  Posts: Post_arr_rel_insert_input
  Teams: Team_arr_rel_insert_input
  createdAt: timestamp
  email: String
  firstname: String
  id: String
  lastname: String
  organizationId: String
  password: String
  role: Role
  teamsByManagerid: Team_arr_rel_insert_input
  updatedAt: timestamp
}

"""aggregate max on columns"""
type User_max_fields {
  createdAt: timestamp
  email: String
  firstname: String
  id: String
  lastname: String
  organizationId: String
  password: String
  role: Role
  updatedAt: timestamp
}

"""
order by max() on columns of table "User"
"""
input User_max_order_by {
  createdAt: order_by
  email: order_by
  firstname: order_by
  id: order_by
  lastname: order_by
  organizationId: order_by
  password: order_by
  role: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type User_min_fields {
  createdAt: timestamp
  email: String
  firstname: String
  id: String
  lastname: String
  organizationId: String
  password: String
  role: Role
  updatedAt: timestamp
}

"""
order by min() on columns of table "User"
"""
input User_min_order_by {
  createdAt: order_by
  email: order_by
  firstname: order_by
  id: order_by
  lastname: order_by
  organizationId: order_by
  password: order_by
  role: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "User"
"""
type User_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [User!]!
}

"""
input type for inserting object relation for remote table "User"
"""
input User_obj_rel_insert_input {
  data: User_insert_input!

  """upsert condition"""
  on_conflict: User_on_conflict
}

"""
on_conflict condition type for table "User"
"""
input User_on_conflict {
  constraint: User_constraint!
  update_columns: [User_update_column!]! = []
  where: User_bool_exp
}

"""Ordering options when selecting data from "User"."""
input User_order_by {
  Comments_aggregate: Comment_aggregate_order_by
  EventLogs_aggregate: EventLog_aggregate_order_by
  MemberOnTeams_aggregate: MemberOnTeams_aggregate_order_by
  Organization: Organization_order_by
  Posts_aggregate: Post_aggregate_order_by
  Teams_aggregate: Team_aggregate_order_by
  createdAt: order_by
  email: order_by
  firstname: order_by
  id: order_by
  lastname: order_by
  organizationId: order_by
  password: order_by
  role: order_by
  teamsByManagerid_aggregate: Team_aggregate_order_by
  updatedAt: order_by
}

"""primary key columns input for table: User"""
input User_pk_columns_input {
  id: String!
}

"""
select columns of table "User"
"""
enum User_select_column {
  """column name"""
  createdAt

  """column name"""
  email

  """column name"""
  firstname

  """column name"""
  id

  """column name"""
  lastname

  """column name"""
  organizationId

  """column name"""
  password

  """column name"""
  role

  """column name"""
  updatedAt
}

"""
input type for updating data in table "User"
"""
input User_set_input {
  createdAt: timestamp
  email: String
  firstname: String
  id: String
  lastname: String
  organizationId: String
  password: String
  role: Role
  updatedAt: timestamp
}

"""
Streaming cursor of the table "User"
"""
input User_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: User_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input User_stream_cursor_value_input {
  createdAt: timestamp
  email: String
  firstname: String
  id: String
  lastname: String
  organizationId: String
  password: String
  role: Role
  updatedAt: timestamp
}

"""
update columns of table "User"
"""
enum User_update_column {
  """column name"""
  createdAt

  """column name"""
  email

  """column name"""
  firstname

  """column name"""
  id

  """column name"""
  lastname

  """column name"""
  organizationId

  """column name"""
  password

  """column name"""
  role

  """column name"""
  updatedAt
}

input User_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: User_set_input
  where: User_bool_exp!
}

type Userbe {
  """Identifies the date and time when the object was created."""
  createdAt: DateTimebe!
  email: String!
  firstname: String
  id: ID!
  lastname: String
  posts: [Postbe!]
  role: Rolebe!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTimebe!
}

"""
columns and relationships of "Workflow"
"""
type Workflow {
  """An array relationship"""
  Activities(
    """distinct select on columns"""
    distinct_on: [Activity_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Activity_order_by!]

    """filter the rows returned"""
    where: Activity_bool_exp
  ): [Activity!]!

  """An aggregate relationship"""
  Activities_aggregate(
    """distinct select on columns"""
    distinct_on: [Activity_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Activity_order_by!]

    """filter the rows returned"""
    where: Activity_bool_exp
  ): Activity_aggregate!

  """An object relationship"""
  Organization: Organization!

  """An array relationship"""
  TaskDefinitions(
    """distinct select on columns"""
    distinct_on: [TaskDefinition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): [TaskDefinition!]!

  """An aggregate relationship"""
  TaskDefinitions_aggregate(
    """distinct select on columns"""
    distinct_on: [TaskDefinition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): TaskDefinition_aggregate!
  config(
    """JSON select path"""
    path: String
  ): jsonb!
  createdAt: timestamp!
  description: String!
  id: String!
  name: String!
  organizationId: String!
  updatedAt: timestamp!
}

"""
aggregated selection of "Workflow"
"""
type Workflow_aggregate {
  aggregate: Workflow_aggregate_fields
  nodes: [Workflow!]!
}

input Workflow_aggregate_bool_exp {
  count: Workflow_aggregate_bool_exp_count
}

input Workflow_aggregate_bool_exp_count {
  arguments: [Workflow_select_column!]
  distinct: Boolean
  filter: Workflow_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "Workflow"
"""
type Workflow_aggregate_fields {
  count(columns: [Workflow_select_column!], distinct: Boolean): Int!
  max: Workflow_max_fields
  min: Workflow_min_fields
}

"""
order by aggregate values of table "Workflow"
"""
input Workflow_aggregate_order_by {
  count: order_by
  max: Workflow_max_order_by
  min: Workflow_min_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input Workflow_append_input {
  config: jsonb
}

"""
input type for inserting array relation for remote table "Workflow"
"""
input Workflow_arr_rel_insert_input {
  data: [Workflow_insert_input!]!

  """upsert condition"""
  on_conflict: Workflow_on_conflict
}

"""
Boolean expression to filter rows from the table "Workflow". All fields are combined with a logical 'AND'.
"""
input Workflow_bool_exp {
  Activities: Activity_bool_exp
  Activities_aggregate: Activity_aggregate_bool_exp
  Organization: Organization_bool_exp
  TaskDefinitions: TaskDefinition_bool_exp
  TaskDefinitions_aggregate: TaskDefinition_aggregate_bool_exp
  _and: [Workflow_bool_exp!]
  _not: Workflow_bool_exp
  _or: [Workflow_bool_exp!]
  config: jsonb_comparison_exp
  createdAt: timestamp_comparison_exp
  description: String_comparison_exp
  id: String_comparison_exp
  name: String_comparison_exp
  organizationId: String_comparison_exp
  updatedAt: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "Workflow"
"""
enum Workflow_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Workflow_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input Workflow_delete_at_path_input {
  config: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input Workflow_delete_elem_input {
  config: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input Workflow_delete_key_input {
  config: String
}

"""
input type for inserting data into table "Workflow"
"""
input Workflow_insert_input {
  Activities: Activity_arr_rel_insert_input
  Organization: Organization_obj_rel_insert_input
  TaskDefinitions: TaskDefinition_arr_rel_insert_input
  config: jsonb
  createdAt: timestamp
  description: String
  id: String
  name: String
  organizationId: String
  updatedAt: timestamp
}

"""aggregate max on columns"""
type Workflow_max_fields {
  createdAt: timestamp
  description: String
  id: String
  name: String
  organizationId: String
  updatedAt: timestamp
}

"""
order by max() on columns of table "Workflow"
"""
input Workflow_max_order_by {
  createdAt: order_by
  description: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type Workflow_min_fields {
  createdAt: timestamp
  description: String
  id: String
  name: String
  organizationId: String
  updatedAt: timestamp
}

"""
order by min() on columns of table "Workflow"
"""
input Workflow_min_order_by {
  createdAt: order_by
  description: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "Workflow"
"""
type Workflow_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Workflow!]!
}

"""
input type for inserting object relation for remote table "Workflow"
"""
input Workflow_obj_rel_insert_input {
  data: Workflow_insert_input!

  """upsert condition"""
  on_conflict: Workflow_on_conflict
}

"""
on_conflict condition type for table "Workflow"
"""
input Workflow_on_conflict {
  constraint: Workflow_constraint!
  update_columns: [Workflow_update_column!]! = []
  where: Workflow_bool_exp
}

"""Ordering options when selecting data from "Workflow"."""
input Workflow_order_by {
  Activities_aggregate: Activity_aggregate_order_by
  Organization: Organization_order_by
  TaskDefinitions_aggregate: TaskDefinition_aggregate_order_by
  config: order_by
  createdAt: order_by
  description: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  updatedAt: order_by
}

"""primary key columns input for table: Workflow"""
input Workflow_pk_columns_input {
  id: String!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input Workflow_prepend_input {
  config: jsonb
}

"""
select columns of table "Workflow"
"""
enum Workflow_select_column {
  """column name"""
  config

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  updatedAt
}

"""
input type for updating data in table "Workflow"
"""
input Workflow_set_input {
  config: jsonb
  createdAt: timestamp
  description: String
  id: String
  name: String
  organizationId: String
  updatedAt: timestamp
}

"""
Streaming cursor of the table "Workflow"
"""
input Workflow_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: Workflow_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input Workflow_stream_cursor_value_input {
  config: jsonb
  createdAt: timestamp
  description: String
  id: String
  name: String
  organizationId: String
  updatedAt: timestamp
}

"""
update columns of table "Workflow"
"""
enum Workflow_update_column {
  """column name"""
  config

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  updatedAt
}

input Workflow_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: Workflow_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: Workflow_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: Workflow_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: Workflow_delete_key_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: Workflow_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: Workflow_set_input
  where: Workflow_bool_exp!
}

"""
columns and relationships of "_prisma_migrations"
"""
type _prisma_migrations {
  applied_steps_count: Int!
  checksum: String!
  finished_at: timestamptz
  id: String!
  logs: String
  migration_name: String!
  rolled_back_at: timestamptz
  started_at: timestamptz!
}

"""
aggregated selection of "_prisma_migrations"
"""
type _prisma_migrations_aggregate {
  aggregate: _prisma_migrations_aggregate_fields
  nodes: [_prisma_migrations!]!
}

"""
aggregate fields of "_prisma_migrations"
"""
type _prisma_migrations_aggregate_fields {
  avg: _prisma_migrations_avg_fields
  count(columns: [_prisma_migrations_select_column!], distinct: Boolean): Int!
  max: _prisma_migrations_max_fields
  min: _prisma_migrations_min_fields
  stddev: _prisma_migrations_stddev_fields
  stddev_pop: _prisma_migrations_stddev_pop_fields
  stddev_samp: _prisma_migrations_stddev_samp_fields
  sum: _prisma_migrations_sum_fields
  var_pop: _prisma_migrations_var_pop_fields
  var_samp: _prisma_migrations_var_samp_fields
  variance: _prisma_migrations_variance_fields
}

"""aggregate avg on columns"""
type _prisma_migrations_avg_fields {
  applied_steps_count: Float
}

"""
Boolean expression to filter rows from the table "_prisma_migrations". All fields are combined with a logical 'AND'.
"""
input _prisma_migrations_bool_exp {
  _and: [_prisma_migrations_bool_exp!]
  _not: _prisma_migrations_bool_exp
  _or: [_prisma_migrations_bool_exp!]
  applied_steps_count: Int_comparison_exp
  checksum: String_comparison_exp
  finished_at: timestamptz_comparison_exp
  id: String_comparison_exp
  logs: String_comparison_exp
  migration_name: String_comparison_exp
  rolled_back_at: timestamptz_comparison_exp
  started_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "_prisma_migrations"
"""
enum _prisma_migrations_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  _prisma_migrations_pkey
}

"""
input type for incrementing numeric columns in table "_prisma_migrations"
"""
input _prisma_migrations_inc_input {
  applied_steps_count: Int
}

"""
input type for inserting data into table "_prisma_migrations"
"""
input _prisma_migrations_insert_input {
  applied_steps_count: Int
  checksum: String
  finished_at: timestamptz
  id: String
  logs: String
  migration_name: String
  rolled_back_at: timestamptz
  started_at: timestamptz
}

"""aggregate max on columns"""
type _prisma_migrations_max_fields {
  applied_steps_count: Int
  checksum: String
  finished_at: timestamptz
  id: String
  logs: String
  migration_name: String
  rolled_back_at: timestamptz
  started_at: timestamptz
}

"""aggregate min on columns"""
type _prisma_migrations_min_fields {
  applied_steps_count: Int
  checksum: String
  finished_at: timestamptz
  id: String
  logs: String
  migration_name: String
  rolled_back_at: timestamptz
  started_at: timestamptz
}

"""
response of any mutation on the table "_prisma_migrations"
"""
type _prisma_migrations_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [_prisma_migrations!]!
}

"""
on_conflict condition type for table "_prisma_migrations"
"""
input _prisma_migrations_on_conflict {
  constraint: _prisma_migrations_constraint!
  update_columns: [_prisma_migrations_update_column!]! = []
  where: _prisma_migrations_bool_exp
}

"""Ordering options when selecting data from "_prisma_migrations"."""
input _prisma_migrations_order_by {
  applied_steps_count: order_by
  checksum: order_by
  finished_at: order_by
  id: order_by
  logs: order_by
  migration_name: order_by
  rolled_back_at: order_by
  started_at: order_by
}

"""primary key columns input for table: _prisma_migrations"""
input _prisma_migrations_pk_columns_input {
  id: String!
}

"""
select columns of table "_prisma_migrations"
"""
enum _prisma_migrations_select_column {
  """column name"""
  applied_steps_count

  """column name"""
  checksum

  """column name"""
  finished_at

  """column name"""
  id

  """column name"""
  logs

  """column name"""
  migration_name

  """column name"""
  rolled_back_at

  """column name"""
  started_at
}

"""
input type for updating data in table "_prisma_migrations"
"""
input _prisma_migrations_set_input {
  applied_steps_count: Int
  checksum: String
  finished_at: timestamptz
  id: String
  logs: String
  migration_name: String
  rolled_back_at: timestamptz
  started_at: timestamptz
}

"""aggregate stddev on columns"""
type _prisma_migrations_stddev_fields {
  applied_steps_count: Float
}

"""aggregate stddev_pop on columns"""
type _prisma_migrations_stddev_pop_fields {
  applied_steps_count: Float
}

"""aggregate stddev_samp on columns"""
type _prisma_migrations_stddev_samp_fields {
  applied_steps_count: Float
}

"""
Streaming cursor of the table "_prisma_migrations"
"""
input _prisma_migrations_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: _prisma_migrations_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input _prisma_migrations_stream_cursor_value_input {
  applied_steps_count: Int
  checksum: String
  finished_at: timestamptz
  id: String
  logs: String
  migration_name: String
  rolled_back_at: timestamptz
  started_at: timestamptz
}

"""aggregate sum on columns"""
type _prisma_migrations_sum_fields {
  applied_steps_count: Int
}

"""
update columns of table "_prisma_migrations"
"""
enum _prisma_migrations_update_column {
  """column name"""
  applied_steps_count

  """column name"""
  checksum

  """column name"""
  finished_at

  """column name"""
  id

  """column name"""
  logs

  """column name"""
  migration_name

  """column name"""
  rolled_back_at

  """column name"""
  started_at
}

input _prisma_migrations_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: _prisma_migrations_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: _prisma_migrations_set_input
  where: _prisma_migrations_bool_exp!
}

"""aggregate var_pop on columns"""
type _prisma_migrations_var_pop_fields {
  applied_steps_count: Float
}

"""aggregate var_samp on columns"""
type _prisma_migrations_var_samp_fields {
  applied_steps_count: Float
}

"""aggregate variance on columns"""
type _prisma_migrations_variance_fields {
  applied_steps_count: Float
}

"""ordering argument of a cursor"""
enum cursor_ordering {
  """ascending ordering of the cursor"""
  ASC

  """descending ordering of the cursor"""
  DESC
}

scalar jsonb

  """Type of the discount: fixed or percent"""
  valueType: DiscountValueTypeEnum!

  """Value of the discount. Can store fixed value or percent value"""
  value: PositiveDecimal!

  """
  Explanation for the applied discount.
  
  Requires one of the following permissions: MANAGE_ORDERS.
  """
  reason: String

  """Returns amount of discount."""
  amount: Money!
}

"""
Adds discount to the order. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type OrderDiscountAdd {
  """Order which has been discounted."""
  order: Order
  orderErrors: [OrderError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [OrderError!]!
}

input OrderDiscountCommonInput {
  """Type of the discount: fixed or percent"""
  valueType: DiscountValueTypeEnum!

  """Value of the discount. Can store fixed value or percent value"""
  value: PositiveDecimal!

  """Explanation for the applied discount."""
  reason: String
}

"""
Remove discount from the order. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type OrderDiscountDelete {
  """Order which has removed discount."""
  order: Order
  orderErrors: [OrderError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [OrderError!]!
}

"""An enumeration."""
enum OrderDiscountType {
  VOUCHER
  MANUAL
}

"""
Update discount for the order. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type OrderDiscountUpdate {
  """Order which has been discounted."""
  order: Order
  orderErrors: [OrderError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [OrderError!]!
}

input OrderDraftFilterInput {
  customer: String
  created: DateRangeInput
  search: String
  metadata: [MetadataFilter!]
  channels: [ID!]
}

type OrderError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: OrderErrorCode!

  """Warehouse ID which causes the error."""
  warehouse: ID

  """List of order line IDs that cause the error."""
  orderLines: [ID!]

  """List of product variants that are associated with the error"""
  variants: [ID!]

  """A type of address that causes the error."""
  addressType: AddressTypeEnum
}

"""An enumeration."""
enum OrderErrorCode {
  BILLING_ADDRESS_NOT_SET
  CANNOT_CANCEL_FULFILLMENT
  CANNOT_CANCEL_ORDER
  CANNOT_DELETE
  CANNOT_DISCOUNT
  CANNOT_REFUND
  CANNOT_FULFILL_UNPAID_ORDER
  CAPTURE_INACTIVE_PAYMENT
  GIFT_CARD_LINE
  NOT_EDITABLE
  FULFILL_ORDER_LINE
  GRAPHQL_ERROR
  INVALID
  PRODUCT_NOT_PUBLISHED
  PRODUCT_UNAVAILABLE_FOR_PURCHASE
  NOT_FOUND
  ORDER_NO_SHIPPING_ADDRESS
  PAYMENT_ERROR
  PAYMENT_MISSING
  REQUIRED
  SHIPPING_METHOD_NOT_APPLICABLE
  SHIPPING_METHOD_REQUIRED
  TAX_ERROR
  UNIQUE
  VOID_INACTIVE_PAYMENT
  ZERO_QUANTITY
  INVALID_QUANTITY
  INSUFFICIENT_STOCK
  DUPLICATED_INPUT_ITEM
  NOT_AVAILABLE_IN_CHANNEL
  CHANNEL_INACTIVE
  MISSING_TRANSACTION_ACTION_REQUEST_WEBHOOK
}

"""History log of the order."""
type OrderEvent implements Node {
  id: ID!

  """Date when event happened at in ISO 8601 format."""
  date: DateTime

  """Order event type."""
  type: OrderEventsEnum

  """User who performed the action."""
  user: User

  """
  App that performed the action. Requires of of the following permissions: MANAGE_APPS, MANAGE_ORDERS, OWNER.
  """
  app: App

  """Content of the event."""
  message: String

  """Email of the customer."""
  email: String

  """Type of an email sent to the customer."""
  emailType: OrderEventsEmailsEnum

  """Amount of money."""
  amount: Float

  """The payment reference from the payment provider."""
  paymentId: String

  """The payment gateway of the payment."""
  paymentGateway: String

  """Number of items."""
  quantity: Int

  """Composed ID of the Fulfillment."""
  composedId: String

  """User-friendly number of an order."""
  orderNumber: String

  """Number of an invoice related to the order."""
  invoiceNumber: String

  """List of oversold lines names."""
  oversoldItems: [String!]

  """The concerned lines."""
  lines: [OrderEventOrderLineObject!]

  """The lines fulfilled."""
  fulfilledItems: [FulfillmentLine!]

  """The warehouse were items were restocked."""
  warehouse: Warehouse

  """The transaction reference of captured payment."""
  transactionReference: String

  """Define if shipping costs were included to the refund."""
  shippingCostsIncluded: Boolean

  """The order which is related to this order."""
  relatedOrder: Order

  """The discount applied to the order."""
  discount: OrderEventDiscountObject

  """The status of payment's transaction."""
  status: TransactionStatus

  """The reference of payment's transaction."""
  reference: String
}

type OrderEventCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [OrderEventCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type OrderEventCountableEdge {
  """The item at the end of the edge."""
  node: OrderEvent!

  """A cursor for use in pagination."""
  cursor: String!
}

type OrderEventDiscountObject {
  """Type of the discount: fixed or percent."""
  valueType: DiscountValueTypeEnum!

  """Value of the discount. Can store fixed value or percent value."""
  value: PositiveDecimal!

  """Explanation for the applied discount."""
  reason: String

  """Returns amount of discount."""
  amount: Money

  """Type of the discount: fixed or percent."""
  oldValueType: DiscountValueTypeEnum

  """Value of the discount. Can store fixed value or percent value."""
  oldValue: PositiveDecimal

  """Returns amount of discount."""
  oldAmount: Money
}

type OrderEventOrderLineObject {
  """The variant quantity."""
  quantity: Int

  """The order line."""
  orderLine: OrderLine

  """The variant name."""
  itemName: String

  """The discount applied to the order line."""
  discount: OrderEventDiscountObject
}

"""An enumeration."""
enum OrderEventsEmailsEnum {
  PAYMENT_CONFIRMATION
  CONFIRMED
  SHIPPING_CONFIRMATION
  TRACKING_UPDATED
  ORDER_CONFIRMATION
  ORDER_CANCEL
  ORDER_REFUND
  FULFILLMENT_CONFIRMATION
  DIGITAL_LINKS
}

"""An enumeration."""
enum OrderEventsEnum {
  DRAFT_CREATED
  DRAFT_CREATED_FROM_REPLACE
  ADDED_PRODUCTS
  REMOVED_PRODUCTS
  PLACED
  PLACED_FROM_DRAFT
  OVERSOLD_ITEMS
  CANCELED
  ORDER_MARKED_AS_PAID
  ORDER_FULLY_PAID
  ORDER_REPLACEMENT_CREATED
  ORDER_DISCOUNT_ADDED
  ORDER_DISCOUNT_AUTOMATICALLY_UPDATED
  ORDER_DISCOUNT_UPDATED
  ORDER_DISCOUNT_DELETED
  ORDER_LINE_DISCOUNT_UPDATED
  ORDER_LINE_DISCOUNT_REMOVED
  ORDER_LINE_PRODUCT_DELETED
  ORDER_LINE_VARIANT_DELETED
  UPDATED_ADDRESS
  EMAIL_SENT
  CONFIRMED
  PAYMENT_AUTHORIZED
  PAYMENT_CAPTURED
  EXTERNAL_SERVICE_NOTIFICATION
  PAYMENT_REFUNDED
  PAYMENT_VOIDED
  PAYMENT_FAILED
  TRANSACTION_EVENT
  TRANSACTION_CAPTURE_REQUESTED
  TRANSACTION_REFUND_REQUESTED
  TRANSACTION_VOID_REQUESTED
  INVOICE_REQUESTED
  INVOICE_GENERATED
  INVOICE_UPDATED
  INVOICE_SENT
  FULFILLMENT_CANCELED
  FULFILLMENT_RESTOCKED_ITEMS
  FULFILLMENT_FULFILLED_ITEMS
  FULFILLMENT_REFUNDED
  FULFILLMENT_RETURNED
  FULFILLMENT_REPLACED
  FULFILLMENT_AWAITS_APPROVAL
  TRACKING_UPDATED
  NOTE_ADDED
  OTHER
}

input OrderFilterInput {
  paymentStatus: [PaymentChargeStatusEnum!]
  status: [OrderStatusFilter!]
  customer: String
  created: DateRangeInput
  search: String
  metadata: [MetadataFilter!]
  channels: [ID!]
  authorizeStatus: [OrderAuthorizeStatusEnum!]
  chargeStatus: [OrderChargeStatusEnum!]
  updatedAt: DateTimeRangeInput
  isClickAndCollect: Boolean
  isPreorder: Boolean
  ids: [ID!]
  giftCardUsed: Boolean
  giftCardBought: Boolean
  numbers: [String!]
}

"""
Filter shipping methods for order.

Added in Saleor 3.6.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type OrderFilterShippingMethods implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The order the event relates to."""
  order: Order

  """
  Shipping methods that can be used with this checkout.
  
  Added in Saleor 3.6.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  shippingMethods: [ShippingMethod!]
}

"""
Creates new fulfillments for an order. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type OrderFulfill {
  """List of created fulfillments."""
  fulfillments: [Fulfillment!]

  """Fulfilled order."""
  order: Order
  orderErrors: [OrderError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [OrderError!]!
}

input OrderFulfillInput {
  """List of items informing how to fulfill the order."""
  lines: [OrderFulfillLineInput!]!

  """If true, send an email notification to the customer."""
  notifyCustomer: Boolean

  """If true, then allow proceed fulfillment when stock is exceeded."""
  allowStockToBeExceeded: Boolean = false

  """
  Fulfillment tracking number.
  
  Added in Saleor 3.6.
  """
  trackingNumber: String
}

input OrderFulfillLineInput {
  """The ID of the order line."""
  orderLineId: ID

  """List of stock items to create."""
  stocks: [OrderFulfillStockInput!]!
}

input OrderFulfillStockInput {
  """The number of line items to be fulfilled from given warehouse."""
  quantity: Int!

  """ID of the warehouse from which the item will be fulfilled."""
  warehouse: ID!
}

"""
Event sent when order is fulfilled.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type OrderFulfilled implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The order the event relates to."""
  order: Order
}

"""
Event sent when order is fully paid.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type OrderFullyPaid implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The order the event relates to."""
  order: Order
}

"""Represents order line of particular order."""
type OrderLine implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  productName: String!
  variantName: String!
  productSku: String
  productVariantId: String
  isShippingRequired: Boolean!
  quantity: Int!
  quantityFulfilled: Int!
  unitDiscountReason: String
  taxRate: Float!
  digitalContentUrl: DigitalContentUrl
  thumbnail(
    """
    Size of the image. If not provided, the original image will be returned.
    """
    size: Int

    """
    The format of the image. When not provided, format of the original image will be used. Must be provided together with the size value, otherwise original image will be returned.
    
    Added in Saleor 3.6.
    
    Note: this API is currently in Feature Preview and can be subject to changes at later point.
    """
    format: ThumbnailFormatEnum
  ): Image

  """Price of the single item in the order line."""
  unitPrice: TaxedMoney!

  """
  Price of the single item in the order line without applied an order line discount.
  """
  undiscountedUnitPrice: TaxedMoney!

  """The discount applied to the single order line."""
  unitDiscount: Money!

  """Value of the discount. Can store fixed value or percent value"""
  unitDiscountValue: PositiveDecimal!

  """Price of the order line."""
  totalPrice: TaxedMoney!

  """
  A purchased product variant. Note: this field may be null if the variant has been removed from stock at all. Requires one of the following permissions to include the unpublished items: MANAGE_ORDERS, MANAGE_DISCOUNTS, MANAGE_PRODUCTS.
  """
  variant: ProductVariant

  """Product name in the customer's language"""
  translatedProductName: String!

  """Variant name in the customer's language"""
  translatedVariantName: String!

  """
  List of allocations across warehouses.
  
  Requires one of the following permissions: MANAGE_PRODUCTS, MANAGE_ORDERS.
  """
  allocations: [Allocation!]

  """
  A quantity of items remaining to be fulfilled.
  
  Added in Saleor 3.1.
  """
  quantityToFulfill: Int!

  """Type of the discount: fixed or percent"""
  unitDiscountType: DiscountValueTypeEnum

  """
  Denormalized tax class of the product in this order line.
  
  Added in Saleor 3.9.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  
  Requires one of the following permissions: AUTHENTICATED_STAFF_USER.
  """
  taxClass: TaxClass

  """
  Denormalized name of the tax class.
  
  Added in Saleor 3.9.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  taxClassName: String

  """
  Denormalized public metadata of the tax class.
  
  Added in Saleor 3.9.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  taxClassMetadata: [MetadataItem!]!

  """
  Denormalized private metadata of the tax class. Requires staff permissions to access.
  
  Added in Saleor 3.9.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  taxClassPrivateMetadata: [MetadataItem!]!
}

input OrderLineCreateInput {
  """Number of variant items ordered."""
  quantity: Int!

  """Product variant ID."""
  variantId: ID!

  """
  Flag that allow force splitting the same variant into multiple lines by skipping the matching logic. 
  
  Added in Saleor 3.6.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  forceNewLine: Boolean = false
}

"""
Deletes an order line from an order. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type OrderLineDelete {
  """A related order."""
  order: Order

  """An order line that was deleted."""
  orderLine: OrderLine
  orderErrors: [OrderError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [OrderError!]!
}

"""
Remove discount applied to the order line. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type OrderLineDiscountRemove {
  """Order line which has removed discount."""
  orderLine: OrderLine

  """Order which is related to line which has removed discount."""
  order: Order
  orderErrors: [OrderError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [OrderError!]!
}

"""
Update discount for the order line. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type OrderLineDiscountUpdate {
  """Order line which has been discounted."""
  orderLine: OrderLine

  """Order which is related to the discounted line."""
  order: Order
  orderErrors: [OrderError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [OrderError!]!
}

input OrderLineInput {
  """Number of variant items ordered."""
  quantity: Int!
}

"""
Updates an order line of an order. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type OrderLineUpdate {
  """Related order."""
  order: Order
  orderErrors: [OrderError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [OrderError!]!
  orderLine: OrderLine
}

"""
Create order lines for an order. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type OrderLinesCreate {
  """Related order."""
  order: Order

  """List of added order lines."""
  orderLines: [OrderLine!]
  orderErrors: [OrderError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [OrderError!]!
}

"""
Mark order as manually paid. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type OrderMarkAsPaid {
  """Order marked as paid."""
  order: Order
  orderErrors: [OrderError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [OrderError!]!
}

"""
Event sent when order metadata is updated.

Added in Saleor 3.8.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type OrderMetadataUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The order the event relates to."""
  order: Order
}

"""An enumeration."""
enum OrderOriginEnum {
  CHECKOUT
  DRAFT
  REISSUE
}

"""
Refund an order. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type OrderRefund {
  """A refunded order."""
  order: Order
  orderErrors: [OrderError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [OrderError!]!
}

input OrderRefundFulfillmentLineInput {
  """The ID of the fulfillment line to refund."""
  fulfillmentLineId: ID!

  """The number of items to be refunded."""
  quantity: Int!
}

input OrderRefundLineInput {
  """The ID of the order line to refund."""
  orderLineId: ID!

  """The number of items to be refunded."""
  quantity: Int!
}

input OrderRefundProductsInput {
  """List of unfulfilled lines to refund."""
  orderLines: [OrderRefundLineInput!]

  """List of fulfilled lines to refund."""
  fulfillmentLines: [OrderRefundFulfillmentLineInput!]

  """The total amount of refund when the value is provided manually."""
  amountToRefund: PositiveDecimal

  """
  If true, Saleor will refund shipping costs. If amountToRefund is providedincludeShippingCosts will be ignored.
  """
  includeShippingCosts: Boolean = false
}

input OrderReturnFulfillmentLineInput {
  """The ID of the fulfillment line to return."""
  fulfillmentLineId: ID!

  """The number of items to be returned."""
  quantity: Int!

  """Determines, if the line should be added to replace order."""
  replace: Boolean = false
}

input OrderReturnLineInput {
  """The ID of the order line to return."""
  orderLineId: ID!

  """The number of items to be returned."""
  quantity: Int!

  """Determines, if the line should be added to replace order."""
  replace: Boolean = false
}

input OrderReturnProductsInput {
  """List of unfulfilled lines to return."""
  orderLines: [OrderReturnLineInput!]

  """List of fulfilled lines to return."""
  fulfillmentLines: [OrderReturnFulfillmentLineInput!]

  """The total amount of refund when the value is provided manually."""
  amountToRefund: PositiveDecimal

  """
  If true, Saleor will refund shipping costs. If amountToRefund is providedincludeShippingCosts will be ignored.
  """
  includeShippingCosts: Boolean = false

  """If true, Saleor will call refund action for all lines."""
  refund: Boolean = false
}

"""Order related settings from site settings."""
type OrderSettings {
  automaticallyConfirmAllNewOrders: Boolean!
  automaticallyFulfillNonShippableGiftCard: Boolean!
}

type OrderSettingsError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: OrderSettingsErrorCode!
}

"""An enumeration."""
enum OrderSettingsErrorCode {
  INVALID
}

"""
Update shop order settings. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type OrderSettingsUpdate {
  """Order settings."""
  orderSettings: OrderSettings
  orderSettingsErrors: [OrderSettingsError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [OrderSettingsError!]!
}

input OrderSettingsUpdateInput {
  """
  When disabled, all new orders from checkout will be marked as unconfirmed. When enabled orders from checkout will become unfulfilled immediately.
  """
  automaticallyConfirmAllNewOrders: Boolean

  """
  When enabled, all non-shippable gift card orders will be fulfilled automatically.
  """
  automaticallyFulfillNonShippableGiftCard: Boolean
}

enum OrderSortField {
  """Sort orders by number."""
  NUMBER

  """
  Sort orders by rank. Note: This option is available only with the `search` filter.
  """
  RANK

  """
  Sort orders by creation date. 
  
  DEPRECATED: this field will be removed in Saleor 4.0.
  """
  CREATION_DATE

  """
  Sort orders by creation date. 
  
  DEPRECATED: this field will be removed in Saleor 4.0.
  """
  CREATED_AT

  """Sort orders by last modified at."""
  LAST_MODIFIED_AT

  """Sort orders by customer."""
  CUSTOMER

  """Sort orders by payment."""
  PAYMENT

  """Sort orders by fulfillment status."""
  FULFILLMENT_STATUS
}

input OrderSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort orders by the selected field."""
  field: OrderSortField!
}

"""An enumeration."""
enum OrderStatus {
  DRAFT
  UNCONFIRMED
  UNFULFILLED
  PARTIALLY_FULFILLED
  PARTIALLY_RETURNED
  RETURNED
  FULFILLED
  CANCELED
}

enum OrderStatusFilter {
  READY_TO_FULFILL
  READY_TO_CAPTURE
  UNFULFILLED
  UNCONFIRMED
  PARTIALLY_FULFILLED
  FULFILLED
  CANCELED
}

"""
Updates an order. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type OrderUpdate {
  orderErrors: [OrderError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [OrderError!]!
  order: Order
}

input OrderUpdateInput {
  """Billing address of the customer."""
  billingAddress: AddressInput

  """Email address of the customer."""
  userEmail: String

  """Shipping address of the customer."""
  shippingAddress: AddressInput
}

"""
Updates a shipping method of the order. Requires shipping method ID to update, when null is passed then currently assigned shipping method is removed. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type OrderUpdateShipping {
  """Order with updated shipping method."""
  order: Order
  orderErrors: [OrderError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [OrderError!]!
}

input OrderUpdateShippingInput {
  """
  ID of the selected shipping method, pass null to remove currently assigned shipping method.
  """
  shippingMethod: ID
}

"""
Event sent when order is updated.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type OrderUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The order the event relates to."""
  order: Order
}

"""
Void an order. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type OrderVoid {
  """A voided order."""
  order: Order
  orderErrors: [OrderError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [OrderError!]!
}

"""
A static page that can be manually added by a shop operator through the dashboard.
"""
type Page implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  seoTitle: String
  seoDescription: String
  title: String!

  """
  Content of the page.
  
  Rich text format. For reference see https://editorjs.io/
  """
  content: JSONString
  publicationDate: Date @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `publishedAt` field to fetch the publication date.")

  """
  The page publication date.
  
  Added in Saleor 3.3.
  """
  publishedAt: DateTime
  isPublished: Boolean!
  slug: String!
  pageType: PageType!
  created: DateTime!

  """
  Content of the page.
  
  Rich text format. For reference see https://editorjs.io/
  """
  contentJson: JSONString! @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `content` field instead.")

  """Returns translated page fields for the given language code."""
  translation(
    """A language code to return the translation for page."""
    languageCode: LanguageCodeEnum!
  ): PageTranslation

  """List of attributes assigned to this product."""
  attributes: [SelectedAttribute!]!
}

"""
Assign attributes to a given page type. 

Requires one of the following permissions: MANAGE_PAGE_TYPES_AND_ATTRIBUTES.
"""
type PageAttributeAssign {
  """The updated page type."""
  pageType: PageType
  pageErrors: [PageError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PageError!]!
}

"""
Unassign attributes from a given page type. 

Requires one of the following permissions: MANAGE_PAGE_TYPES_AND_ATTRIBUTES.
"""
type PageAttributeUnassign {
  """The updated page type."""
  pageType: PageType
  pageErrors: [PageError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PageError!]!
}

"""
Deletes pages. 

Requires one of the following permissions: MANAGE_PAGES.
"""
type PageBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  pageErrors: [PageError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PageError!]!
}

"""
Publish pages. 

Requires one of the following permissions: MANAGE_PAGES.
"""
type PageBulkPublish {
  """Returns how many objects were affected."""
  count: Int!
  pageErrors: [PageError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PageError!]!
}

type PageCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [PageCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type PageCountableEdge {
  """The item at the end of the edge."""
  node: Page!

  """A cursor for use in pagination."""
  cursor: String!
}

"""
Creates a new page. 

Requires one of the following permissions: MANAGE_PAGES.
"""
type PageCreate {
  pageErrors: [PageError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PageError!]!
  page: Page
}

input PageCreateInput {
  """Page internal name."""
  slug: String

  """Page title."""
  title: String

  """
  Page content.
  
  Rich text format. For reference see https://editorjs.io/
  """
  content: JSONString

  """List of attributes."""
  attributes: [AttributeValueInput!]

  """Determines if page is visible in the storefront."""
  isPublished: Boolean

  """
  Publication date. ISO 8601 standard. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use `publishedAt` field instead.
  """
  publicationDate: String

  """
  Publication date time. ISO 8601 standard.
  
  Added in Saleor 3.3.
  """
  publishedAt: DateTime

  """Search engine optimization fields."""
  seo: SeoInput

  """ID of the page type that page belongs to."""
  pageType: ID!
}

"""
Event sent when new page is created.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PageCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The page the event relates to."""
  page: Page
}

"""
Deletes a page. 

Requires one of the following permissions: MANAGE_PAGES.
"""
type PageDelete {
  pageErrors: [PageError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PageError!]!
  page: Page
}

"""
Event sent when page is deleted.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PageDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The page the event relates to."""
  page: Page
}

type PageError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: PageErrorCode!

  """List of attributes IDs which causes the error."""
  attributes: [ID!]

  """List of attribute values IDs which causes the error."""
  values: [ID!]
}

"""An enumeration."""
enum PageErrorCode {
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  REQUIRED
  UNIQUE
  DUPLICATED_INPUT_ITEM
  ATTRIBUTE_ALREADY_ASSIGNED
}

input PageFilterInput {
  search: String
  metadata: [MetadataFilter!]
  pageTypes: [ID!]
  ids: [ID!]
  slugs: [String!]
}

"""
The Relay compliant `PageInfo` type, containing data necessary to paginate this connection.
"""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

input PageInput {
  """Page internal name."""
  slug: String

  """Page title."""
  title: String

  """
  Page content.
  
  Rich text format. For reference see https://editorjs.io/
  """
  content: JSONString

  """List of attributes."""
  attributes: [AttributeValueInput!]

  """Determines if page is visible in the storefront."""
  isPublished: Boolean

  """
  Publication date. ISO 8601 standard. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use `publishedAt` field instead.
  """
  publicationDate: String

  """
  Publication date time. ISO 8601 standard.
  
  Added in Saleor 3.3.
  """
  publishedAt: DateTime

  """Search engine optimization fields."""
  seo: SeoInput
}

"""
Reorder page attribute values. 

Requires one of the following permissions: MANAGE_PAGES.
"""
type PageReorderAttributeValues {
  """Page from which attribute values are reordered."""
  page: Page
  pageErrors: [PageError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PageError!]!
}

enum PageSortField {
  """Sort pages by title."""
  TITLE

  """Sort pages by slug."""
  SLUG

  """Sort pages by visibility."""
  VISIBILITY

  """
  Sort pages by creation date.
  
  DEPRECATED: this field will be removed in Saleor 4.0.
  """
  CREATION_DATE

  """
  Sort pages by publication date.
  
  DEPRECATED: this field will be removed in Saleor 4.0.
  """
  PUBLICATION_DATE

  """
  Sort pages by publication date.
  
  DEPRECATED: this field will be removed in Saleor 4.0.
  """
  PUBLISHED_AT

  """
  Sort pages by creation date.
  
  DEPRECATED: this field will be removed in Saleor 4.0.
  """
  CREATED_AT
}

input PageSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort pages by the selected field."""
  field: PageSortField!
}

type PageTranslatableContent implements Node {
  id: ID!
  seoTitle: String
  seoDescription: String
  title: String!

  """
  Content of the page.
  
  Rich text format. For reference see https://editorjs.io/
  """
  content: JSONString

  """
  Content of the page.
  
  Rich text format. For reference see https://editorjs.io/
  """
  contentJson: JSONString @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `content` field instead.")

  """Returns translated page fields for the given language code."""
  translation(
    """A language code to return the translation for page."""
    languageCode: LanguageCodeEnum!
  ): PageTranslation

  """
  A static page that can be manually added by a shop operator through the dashboard.
  """
  page: Page @deprecated(reason: "This field will be removed in Saleor 4.0. Get model fields from the root level queries.")

  """List of page content attribute values that can be translated."""
  attributeValues: [AttributeValueTranslatableContent!]!
}

"""
Creates/updates translations for a page. 

Requires one of the following permissions: MANAGE_TRANSLATIONS.
"""
type PageTranslate {
  translationErrors: [TranslationError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [TranslationError!]!
  page: PageTranslatableContent
}

type PageTranslation implements Node {
  id: ID!

  """Translation language."""
  language: LanguageDisplay!
  seoTitle: String
  seoDescription: String
  title: String

  """
  Translated content of the page.
  
  Rich text format. For reference see https://editorjs.io/
  """
  content: JSONString

  """
  Translated description of the page.
  
  Rich text format. For reference see https://editorjs.io/
  """
  contentJson: JSONString @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `content` field instead.")
}

input PageTranslationInput {
  seoTitle: String
  seoDescription: String
  title: String

  """
  Translated page content.
  
  Rich text format. For reference see https://editorjs.io/
  """
  content: JSONString
}

"""
Represents a type of page. It defines what attributes are available to pages of this type.
"""
type PageType implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  name: String!
  slug: String!

  """Page attributes of that page type."""
  attributes: [Attribute!]

  """
  Attributes that can be assigned to the page type.
  
  Requires one of the following permissions: MANAGE_PAGES.
  """
  availableAttributes(
    filter: AttributeFilterInput

    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): AttributeCountableConnection

  """
  Whether page type has pages assigned.
  
  Requires one of the following permissions: MANAGE_PAGES.
  """
  hasPages: Boolean
}

"""
Delete page types. 

Requires one of the following permissions: MANAGE_PAGE_TYPES_AND_ATTRIBUTES.
"""
type PageTypeBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  pageErrors: [PageError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PageError!]!
}

type PageTypeCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [PageTypeCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type PageTypeCountableEdge {
  """The item at the end of the edge."""
  node: PageType!

  """A cursor for use in pagination."""
  cursor: String!
}

"""
Create a new page type. 

Requires one of the following permissions: MANAGE_PAGE_TYPES_AND_ATTRIBUTES.
"""
type PageTypeCreate {
  pageErrors: [PageError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PageError!]!
  pageType: PageType
}

input PageTypeCreateInput {
  """Name of the page type."""
  name: String

  """Page type slug."""
  slug: String

  """List of attribute IDs to be assigned to the page type."""
  addAttributes: [ID!]
}

"""
Event sent when new page type is created.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PageTypeCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The page type the event relates to."""
  pageType: PageType
}

"""
Delete a page type. 

Requires one of the following permissions: MANAGE_PAGE_TYPES_AND_ATTRIBUTES.
"""
type PageTypeDelete {
  pageErrors: [PageError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PageError!]!
  pageType: PageType
}

"""
Event sent when page type is deleted.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PageTypeDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The page type the event relates to."""
  pageType: PageType
}

input PageTypeFilterInput {
  search: String
  slugs: [String!]
}

"""
Reorder the attributes of a page type. 

Requires one of the following permissions: MANAGE_PAGE_TYPES_AND_ATTRIBUTES.
"""
type PageTypeReorderAttributes {
  """Page type from which attributes are reordered."""
  pageType: PageType
  pageErrors: [PageError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PageError!]!
}

enum PageTypeSortField {
  """Sort page types by name."""
  NAME

  """Sort page types by slug."""
  SLUG
}

input PageTypeSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort page types by the selected field."""
  field: PageTypeSortField!
}

"""
Update page type. 

Requires one of the following permissions: MANAGE_PAGE_TYPES_AND_ATTRIBUTES.
"""
type PageTypeUpdate {
  pageErrors: [PageError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PageError!]!
  pageType: PageType
}

input PageTypeUpdateInput {
  """Name of the page type."""
  name: String

  """Page type slug."""
  slug: String

  """List of attribute IDs to be assigned to the page type."""
  addAttributes: [ID!]

  """List of attribute IDs to be assigned to the page type."""
  removeAttributes: [ID!]
}

"""
Event sent when page type is updated.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PageTypeUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The page type the event relates to."""
  pageType: PageType
}

"""
Updates an existing page. 

Requires one of the following permissions: MANAGE_PAGES.
"""
type PageUpdate {
  pageErrors: [PageError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PageError!]!
  page: Page
}

"""
Event sent when page is updated.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PageUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The page the event relates to."""
  page: Page
}

"""
Change the password of the logged in user. 

Requires one of the following permissions: AUTHENTICATED_USER.
"""
type PasswordChange {
  """A user instance with a new password."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""Represents a payment of a given type."""
type Payment implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  gateway: String!
  isActive: Boolean!
  created: DateTime!
  modified: DateTime!
  token: String!
  checkout: Checkout
  order: Order
  paymentMethodType: String!

  """
  IP address of the user who created the payment.
  
  Requires one of the following permissions: MANAGE_ORDERS.
  """
  customerIpAddress: String

  """Internal payment status."""
  chargeStatus: PaymentChargeStatusEnum!

  """
  List of actions that can be performed in the current state of a payment.
  
  Requires one of the following permissions: MANAGE_ORDERS.
  """
  actions: [OrderAction!]!

  """Total amount of the payment."""
  total: Money

  """Total amount captured for this payment."""
  capturedAmount: Money

  """
  List of all transactions within this payment.
  
  Requires one of the following permissions: MANAGE_ORDERS.
  """
  transactions: [Transaction!]

  """
  Maximum amount of money that can be captured.
  
  Requires one of the following permissions: MANAGE_ORDERS.
  """
  availableCaptureAmount: Money

  """
  Maximum amount of money that can be refunded.
  
  Requires one of the following permissions: MANAGE_ORDERS.
  """
  availableRefundAmount: Money

  """The details of the card used for this payment."""
  creditCard: CreditCard
}

"""
Authorize payment.

Added in Saleor 3.6.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PaymentAuthorize implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """Look up a payment."""
  payment: Payment
}

"""
Captures the authorized payment amount. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type PaymentCapture {
  """Updated payment."""
  payment: Payment
  paymentErrors: [PaymentError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PaymentError!]!
}

"""
Capture payment.

Added in Saleor 3.6.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PaymentCaptureEvent implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """Look up a payment."""
  payment: Payment
}

"""An enumeration."""
enum PaymentChargeStatusEnum {
  NOT_CHARGED
  PENDING
  PARTIALLY_CHARGED
  FULLY_CHARGED
  PARTIALLY_REFUNDED
  FULLY_REFUNDED
  REFUSED
  CANCELLED
}

"""Check payment balance."""
type PaymentCheckBalance {
  """Response from the gateway."""
  data: JSONString
  paymentErrors: [PaymentError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PaymentError!]!
}

input PaymentCheckBalanceInput {
  """An ID of a payment gateway to check."""
  gatewayId: String!

  """Payment method name."""
  method: String!

  """Slug of a channel for which the data should be returned."""
  channel: String!

  """Information about card."""
  card: CardInput!
}

"""
Confirm payment.

Added in Saleor 3.6.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PaymentConfirmEvent implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """Look up a payment."""
  payment: Payment
}

type PaymentCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [PaymentCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type PaymentCountableEdge {
  """The item at the end of the edge."""
  node: Payment!

  """A cursor for use in pagination."""
  cursor: String!
}

type PaymentError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: PaymentErrorCode!

  """List of variant IDs which causes the error."""
  variants: [ID!]
}

"""An enumeration."""
enum PaymentErrorCode {
  BILLING_ADDRESS_NOT_SET
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  REQUIRED
  UNIQUE
  PARTIAL_PAYMENT_NOT_ALLOWED
  SHIPPING_ADDRESS_NOT_SET
  INVALID_SHIPPING_METHOD
  SHIPPING_METHOD_NOT_SET
  PAYMENT_ERROR
  NOT_SUPPORTED_GATEWAY
  CHANNEL_INACTIVE
  BALANCE_CHECK_ERROR
  CHECKOUT_EMAIL_NOT_SET
  UNAVAILABLE_VARIANT_IN_CHANNEL
  NO_CHECKOUT_LINES
}

input PaymentFilterInput {
  """
  Filter by ids. 
  
  Added in Saleor 3.8.
  """
  ids: [ID!]
  checkouts: [ID!]
}

"""
Available payment gateway backend with configuration necessary to setup client.
"""
type PaymentGateway {
  """Payment gateway name."""
  name: String!

  """Payment gateway ID."""
  id: ID!

  """Payment gateway client configuration."""
  config: [GatewayConfigLine!]!

  """Payment gateway supported currencies."""
  currencies: [String!]!
}

"""Initializes payment process when it is required by gateway."""
type PaymentInitialize {
  initializedPayment: PaymentInitialized
  paymentErrors: [PaymentError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PaymentError!]!
}

"""
Server-side data generated by a payment gateway. Optional step when the payment provider requires an additional action to initialize payment session.
"""
type PaymentInitialized {
  """ID of a payment gateway."""
  gateway: String!

  """Payment gateway name."""
  name: String!

  """Initialized data by gateway."""
  data: JSONString
}

input PaymentInput {
  """A gateway to use with that payment."""
  gateway: String!

  """
  Client-side generated payment token, representing customer's billing data in a secure manner.
  """
  token: String

  """
  Total amount of the transaction, including all taxes and discounts. If no amount is provided, the checkout total will be used.
  """
  amount: PositiveDecimal

  """
  URL of a storefront view where user should be redirected after requiring additional actions. Payment with additional actions will not be finished if this field is not provided.
  """
  returnUrl: String

  """
  Payment store type.
  
  Added in Saleor 3.1.
  """
  storePaymentMethod: StorePaymentMethodEnum

  """
  User public metadata.
  
  Added in Saleor 3.1.
  """
  metadata: [MetadataInput!]
}

"""
List payment gateways.

Added in Saleor 3.6.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PaymentListGateways implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The checkout the event relates to."""
  checkout: Checkout
}

"""
Process payment.

Added in Saleor 3.6.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PaymentProcessEvent implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """Look up a payment."""
  payment: Payment
}

"""
Refunds the captured payment amount. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type PaymentRefund {
  """Updated payment."""
  payment: Payment
  paymentErrors: [PaymentError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PaymentError!]!
}

"""
Refund payment.

Added in Saleor 3.6.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PaymentRefundEvent implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """Look up a payment."""
  payment: Payment
}

"""
Represents a payment source stored for user in payment gateway, such as credit card.
"""
type PaymentSource {
  """Payment gateway name."""
  gateway: String!

  """ID of stored payment method."""
  paymentMethodId: String

  """Stored credit card details if available."""
  creditCardInfo: CreditCard

  """
  List of public metadata items.
  
  Added in Saleor 3.1.
  
  Can be accessed without permissions.
  """
  metadata: [MetadataItem!]!
}

"""
Voids the authorized payment. 

Requires one of the following permissions: MANAGE_ORDERS.
"""
type PaymentVoid {
  """Updated payment."""
  payment: Payment
  paymentErrors: [PaymentError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PaymentError!]!
}

"""
Void payment.

Added in Saleor 3.6.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PaymentVoidEvent implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """Look up a payment."""
  payment: Payment
}

"""Represents a permission object in a friendly form."""
type Permission {
  """Internal code for permission."""
  code: PermissionEnum!

  """Describe action(s) allowed to do by permission."""
  name: String!
}

"""An enumeration."""
enum PermissionEnum {
  MANAGE_USERS
  MANAGE_STAFF
  IMPERSONATE_USER
  MANAGE_APPS
  MANAGE_OBSERVABILITY
  MANAGE_CHECKOUTS
  HANDLE_CHECKOUTS
  HANDLE_TAXES
  MANAGE_TAXES
  MANAGE_CHANNELS
  MANAGE_DISCOUNTS
  MANAGE_GIFT_CARD
  MANAGE_MENUS
  MANAGE_ORDERS
  MANAGE_PAGES
  MANAGE_PAGE_TYPES_AND_ATTRIBUTES
  HANDLE_PAYMENTS
  MANAGE_PLUGINS
  MANAGE_PRODUCTS
  MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES
  MANAGE_SHIPPING
  MANAGE_SETTINGS
  MANAGE_TRANSLATIONS
}

"""
Create new permission group. Apps are not allowed to perform this mutation. 

Requires one of the following permissions: MANAGE_STAFF.
"""
type PermissionGroupCreate {
  permissionGroupErrors: [PermissionGroupError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PermissionGroupError!]!
  group: Group
}

input PermissionGroupCreateInput {
  """List of permission code names to assign to this group."""
  addPermissions: [PermissionEnum!]

  """List of users to assign to this group."""
  addUsers: [ID!]

  """Group name."""
  name: String!
}

"""
Event sent when new permission group is created.

Added in Saleor 3.6.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PermissionGroupCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The permission group the event relates to."""
  permissionGroup: Group
}

"""
Delete permission group. Apps are not allowed to perform this mutation. 

Requires one of the following permissions: MANAGE_STAFF.
"""
type PermissionGroupDelete {
  permissionGroupErrors: [PermissionGroupError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PermissionGroupError!]!
  group: Group
}

"""
Event sent when permission group is deleted.

Added in Saleor 3.6.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PermissionGroupDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The permission group the event relates to."""
  permissionGroup: Group
}

type PermissionGroupError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: PermissionGroupErrorCode!

  """List of permissions which causes the error."""
  permissions: [PermissionEnum!]

  """List of user IDs which causes the error."""
  users: [ID!]
}

"""An enumeration."""
enum PermissionGroupErrorCode {
  ASSIGN_NON_STAFF_MEMBER
  DUPLICATED_INPUT_ITEM
  CANNOT_REMOVE_FROM_LAST_GROUP
  LEFT_NOT_MANAGEABLE_PERMISSION
  OUT_OF_SCOPE_PERMISSION
  OUT_OF_SCOPE_USER
  REQUIRED
  UNIQUE
}

input PermissionGroupFilterInput {
  search: String
  ids: [ID!]
}

enum PermissionGroupSortField {
  """Sort permission group accounts by name."""
  NAME
}

input PermissionGroupSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort permission group by the selected field."""
  field: PermissionGroupSortField!
}

"""
Update permission group. Apps are not allowed to perform this mutation. 

Requires one of the following permissions: MANAGE_STAFF.
"""
type PermissionGroupUpdate {
  permissionGroupErrors: [PermissionGroupError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PermissionGroupError!]!
  group: Group
}

input PermissionGroupUpdateInput {
  """List of permission code names to assign to this group."""
  addPermissions: [PermissionEnum!]

  """List of users to assign to this group."""
  addUsers: [ID!]

  """Group name."""
  name: String

  """List of permission code names to unassign from this group."""
  removePermissions: [PermissionEnum!]

  """List of users to unassign from this group."""
  removeUsers: [ID!]
}

"""
Event sent when permission group is updated.

Added in Saleor 3.6.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PermissionGroupUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The permission group the event relates to."""
  permissionGroup: Group
}

"""Plugin."""
type Plugin {
  """Identifier of the plugin."""
  id: ID!

  """Name of the plugin."""
  name: String!

  """Description of the plugin."""
  description: String!

  """Global configuration of the plugin (not channel-specific)."""
  globalConfiguration: PluginConfiguration

  """Channel-specific plugin configuration."""
  channelConfigurations: [PluginConfiguration!]!
}

"""Stores information about a configuration of plugin."""
type PluginConfiguration {
  """Determines if plugin is active or not."""
  active: Boolean!

  """The channel to which the plugin configuration is assigned to."""
  channel: Channel

  """Configuration of the plugin."""
  configuration: [ConfigurationItem!]
}

enum PluginConfigurationType {
  PER_CHANNEL
  GLOBAL
}

type PluginCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [PluginCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type PluginCountableEdge {
  """The item at the end of the edge."""
  node: Plugin!

  """A cursor for use in pagination."""
  cursor: String!
}

type PluginError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: PluginErrorCode!
}

"""An enumeration."""
enum PluginErrorCode {
  GRAPHQL_ERROR
  INVALID
  PLUGIN_MISCONFIGURED
  NOT_FOUND
  REQUIRED
  UNIQUE
}

input PluginFilterInput {
  statusInChannels: PluginStatusInChannelsInput
  search: String
  type: PluginConfigurationType
}

enum PluginSortField {
  NAME
  IS_ACTIVE
}

input PluginSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort plugins by the selected field."""
  field: PluginSortField!
}

input PluginStatusInChannelsInput {
  active: Boolean!
  channels: [ID!]!
}

"""
Update plugin configuration. 

Requires one of the following permissions: MANAGE_PLUGINS.
"""
type PluginUpdate {
  plugin: Plugin
  pluginsErrors: [PluginError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PluginError!]!
}

input PluginUpdateInput {
  """Indicates whether the plugin should be enabled."""
  active: Boolean

  """Configuration of the plugin."""
  configuration: [ConfigurationItemInput!]
}

"""
Positive Decimal scalar implementation.

Should be used in places where value must be positive.
"""
scalar PositiveDecimal

"""An enumeration."""
enum PostalCodeRuleInclusionTypeEnum {
  INCLUDE
  EXCLUDE
}

"""Represents preorder settings for product variant."""
type PreorderData {
  """
  The global preorder threshold for product variant.
  
  Requires one of the following permissions: MANAGE_PRODUCTS.
  """
  globalThreshold: Int

  """
  Total number of sold product variant during preorder.
  
  Requires one of the following permissions: MANAGE_PRODUCTS.
  """
  globalSoldUnits: Int!

  """Preorder end date."""
  endDate: DateTime
}

input PreorderSettingsInput {
  """The global threshold for preorder variant."""
  globalThreshold: Int

  """The end date for preorder."""
  endDate: DateTime
}

"""Represents preorder variant data for channel."""
type PreorderThreshold {
  """Preorder threshold for product variant in this channel."""
  quantity: Int

  """Number of sold product variant in this channel."""
  soldUnits: Int!
}

input PriceInput {
  """Currency code."""
  currency: String!

  """Amount of money."""
  amount: PositiveDecimal!
}

input PriceRangeInput {
  """Price greater than or equal to."""
  gte: Float

  """Price less than or equal to."""
  lte: Float
}

"""Represents an individual item for sale in the storefront."""
type Product implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  seoTitle: String
  seoDescription: String
  name: String!

  """
  Description of the product.
  
  Rich text format. For reference see https://editorjs.io/
  """
  description: JSONString
  productType: ProductType!
  slug: String!
  category: Category
  created: DateTime!
  updatedAt: DateTime!
  chargeTaxes: Boolean! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `Channel.taxConfiguration` field to determine whether tax collection is enabled.")
  weight: Weight
  defaultVariant: ProductVariant
  rating: Float

  """
  Channel given to retrieve this product. Also used by federation gateway to resolve this object in a federated query.
  """
  channel: String

  """
  Description of the product.
  
  Rich text format. For reference see https://editorjs.io/
  """
  descriptionJson: JSONString @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `description` field instead.")
  thumbnail(
    """
    Size of the image. If not provided, the original image will be returned.
    """
    size: Int

    """
    The format of the image. When not provided, format of the original image will be used. Must be provided together with the size value, otherwise original image will be returned.
    
    Added in Saleor 3.6.
    
    Note: this API is currently in Feature Preview and can be subject to changes at later point.
    """
    format: ThumbnailFormatEnum
  ): Image

  """
  Lists the storefront product's pricing, the current price and discounts, only meant for displaying.
  """
  pricing(
    """
    Destination address used to find warehouses where stock availability for this product is checked. If address is empty, uses `Shop.companyAddress` or fallbacks to server's `settings.DEFAULT_COUNTRY` configuration.
    """
    address: AddressInput
  ): ProductPricingInfo

  """Whether the product is in stock and visible or not."""
  isAvailable(
    """
    Destination address used to find warehouses where stock availability for this product is checked. If address is empty, uses `Shop.companyAddress` or fallbacks to server's `settings.DEFAULT_COUNTRY` configuration.
    """
    address: AddressInput
  ): Boolean

  """A type of tax. Assigned by enabled tax gateway"""
  taxType: TaxType @deprecated(reason: "This field will be removed in Saleor 4.0. Use `taxClass` field instead.")

  """
  Get a single attribute attached to product by attribute slug.
  
  Added in Saleor 3.9.
  """
  attribute(
    """Slug of the attribute"""
    slug: String!
  ): SelectedAttribute

  """List of attributes assigned to this product."""
  attributes: [SelectedAttribute!]!

  """
  List of availability in channels for the product.
  
  Requires one of the following permissions: MANAGE_PRODUCTS.
  """
  channelListings: [ProductChannelListing!]

  """Get a single product media by ID."""
  mediaById(
    """ID of a product media."""
    id: ID
  ): ProductMedia

  """Get a single product image by ID."""
  imageById(
    """ID of a product image."""
    id: ID
  ): ProductImage @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `mediaById` field instead.")

  """
  Get a single variant by SKU or ID. 
  
  Added in Saleor 3.9.
  """
  variant(
    """ID of the variant."""
    id: ID

    """SKU of the variant."""
    sku: String
  ): ProductVariant

  """
  List of variants for the product. Requires the following permissions to include the unpublished items: MANAGE_ORDERS, MANAGE_DISCOUNTS, MANAGE_PRODUCTS.
  """
  variants: [ProductVariant!]

  """List of media for the product."""
  media(
    """
    Sort media. 
    
    Added in Saleor 3.9.
    """
    sortBy: MediaSortingInput
  ): [ProductMedia!]

  """List of images for the product."""
  images: [ProductImage!] @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `media` field instead.")

  """
  List of collections for the product. Requires the following permissions to include the unpublished items: MANAGE_ORDERS, MANAGE_DISCOUNTS, MANAGE_PRODUCTS.
  """
  collections: [Collection!]

  """Returns translated product fields for the given language code."""
  translation(
    """A language code to return the translation for product."""
    languageCode: LanguageCodeEnum!
  ): ProductTranslation

  """Date when product is available for purchase."""
  availableForPurchase: Date @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `availableForPurchaseAt` field to fetch the available for purchase date.")

  """Date when product is available for purchase."""
  availableForPurchaseAt: DateTime

  """Whether the product is available for purchase."""
  isAvailableForPurchase: Boolean

  """
  Tax class assigned to this product type. All products of this product type use this tax class, unless it's overridden in the `Product` type.
  
  Requires one of the following permissions: AUTHENTICATED_STAFF_USER.
  """
  taxClass: TaxClass
}

"""
Assign attributes to a given product type. 

Requires one of the following permissions: MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES.
"""
type ProductAttributeAssign {
  """The updated product type."""
  productType: ProductType
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
}

input ProductAttributeAssignInput {
  """The ID of the attribute to assign."""
  id: ID!

  """The attribute type to be assigned as."""
  type: ProductAttributeType!

  """
  Whether attribute is allowed in variant selection. Allowed types are: ['dropdown', 'boolean', 'swatch', 'numeric'].
  
  Added in Saleor 3.1.
  """
  variantSelection: Boolean
}

"""
Update attributes assigned to product variant for given product type.

Added in Saleor 3.1. 

Requires one of the following permissions: MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES.
"""
type ProductAttributeAssignmentUpdate {
  """The updated product type."""
  productType: ProductType
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
}

input ProductAttributeAssignmentUpdateInput {
  """The ID of the attribute to assign."""
  id: ID!

  """
  Whether attribute is allowed in variant selection. Allowed types are: ['dropdown', 'boolean', 'swatch', 'numeric'].
  
  Added in Saleor 3.1.
  """
  variantSelection: Boolean!
}

enum ProductAttributeType {
  PRODUCT
  VARIANT
}

"""
Un-assign attributes from a given product type. 

Requires one of the following permissions: MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES.
"""
type ProductAttributeUnassign {
  """The updated product type."""
  productType: ProductType
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
}

"""
Deletes products. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type ProductBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
}

"""Represents product channel listing."""
type ProductChannelListing implements Node {
  id: ID!
  publicationDate: Date @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `publishedAt` field to fetch the publication date.")

  """
  The product publication date time.
  
  Added in Saleor 3.3.
  """
  publishedAt: DateTime
  isPublished: Boolean!
  channel: Channel!
  visibleInListings: Boolean!
  availableForPurchase: Date @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `availableForPurchaseAt` field to fetch the available for purchase date.")

  """
  The product available for purchase date time.
  
  Added in Saleor 3.3.
  """
  availableForPurchaseAt: DateTime

  """The price of the cheapest variant (including discounts)."""
  discountedPrice: Money

  """
  Purchase cost of product.
  
  Requires one of the following permissions: MANAGE_PRODUCTS.
  """
  purchaseCost: MoneyRange

  """
  Range of margin percentage value.
  
  Requires one of the following permissions: MANAGE_PRODUCTS.
  """
  margin: Margin

  """Whether the product is available for purchase."""
  isAvailableForPurchase: Boolean

  """
  Lists the storefront product's pricing, the current price and discounts, only meant for displaying.
  """
  pricing(
    """
    Destination address used to find warehouses where stock availability for this product is checked. If address is empty, uses `Shop.companyAddress` or fallbacks to server's `settings.DEFAULT_COUNTRY` configuration.
    """
    address: AddressInput
  ): ProductPricingInfo
}

input ProductChannelListingAddInput {
  """ID of a channel."""
  channelId: ID!

  """Determines if object is visible to customers."""
  isPublished: Boolean

  """
  Publication date. ISO 8601 standard. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use `publishedAt` field instead.
  """
  publicationDate: Date

  """
  Publication date time. ISO 8601 standard.
  
  Added in Saleor 3.3.
  """
  publishedAt: DateTime

  """
  Determines if product is visible in product listings (doesn't apply to product collections).
  """
  visibleInListings: Boolean

  """Determine if product should be available for purchase."""
  isAvailableForPurchase: Boolean

  """
  A start date from which a product will be available for purchase. When not set and isAvailable is set to True, the current day is assumed. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use `availableForPurchaseAt` field instead.
  """
  availableForPurchaseDate: Date

  """
  A start date time from which a product will be available for purchase. When not set and `isAvailable` is set to True, the current day is assumed.
  
  Added in Saleor 3.3.
  """
  availableForPurchaseAt: DateTime

  """List of variants to which the channel should be assigned."""
  addVariants: [ID!]

  """List of variants from which the channel should be unassigned."""
  removeVariants: [ID!]
}

type ProductChannelListingError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: ProductErrorCode!

  """List of attributes IDs which causes the error."""
  attributes: [ID!]

  """List of attribute values IDs which causes the error."""
  values: [ID!]

  """List of channels IDs which causes the error."""
  channels: [ID!]

  """List of variants IDs which causes the error."""
  variants: [ID!]
}

"""
Manage product's availability in channels. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type ProductChannelListingUpdate {
  """An updated product instance."""
  product: Product
  productChannelListingErrors: [ProductChannelListingError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductChannelListingError!]!
}

input ProductChannelListingUpdateInput {
  """List of channels to which the product should be assigned or updated."""
  updateChannels: [ProductChannelListingAddInput!]

  """List of channels from which the product should be unassigned."""
  removeChannels: [ID!]
}

type ProductCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [ProductCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type ProductCountableEdge {
  """The item at the end of the edge."""
  node: Product!

  """A cursor for use in pagination."""
  cursor: String!
}

"""
Creates a new product. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type ProductCreate {
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
  product: Product
}

input ProductCreateInput {
  """List of attributes."""
  attributes: [AttributeValueInput!]

  """ID of the product's category."""
  category: ID

  """
  Determine if taxes are being charged for the product. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use `Channel.taxConfiguration` to configure whether tax collection is enabled.
  """
  chargeTaxes: Boolean

  """List of IDs of collections that the product belongs to."""
  collections: [ID!]

  """
  Product description.
  
  Rich text format. For reference see https://editorjs.io/
  """
  description: JSONString

  """Product name."""
  name: String

  """Product slug."""
  slug: String

  """
  ID of a tax class to assign to this product. If not provided, product will use the tax class which is assigned to the product type.
  """
  taxClass: ID

  """
  Tax rate for enabled tax gateway. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use tax classes to control the tax calculation for a product.
  """
  taxCode: String

  """Search engine optimization fields."""
  seo: SeoInput

  """Weight of the Product."""
  weight: WeightScalar

  """Defines the product rating value."""
  rating: Float

  """
  Fields required to update the product metadata.
  
  Added in Saleor 3.8.
  """
  metadata: [MetadataInput!]

  """
  Fields required to update the product private metadata.
  
  Added in Saleor 3.8.
  """
  privateMetadata: [MetadataInput!]

  """ID of the type that product belongs to."""
  productType: ID!
}

"""
Event sent when new product is created.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ProductCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The product the event relates to."""
  product(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): Product

  """The category of the product."""
  category: Category
}

"""
Deletes a product. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type ProductDelete {
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
  product: Product
}

"""
Event sent when product is deleted.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ProductDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The product the event relates to."""
  product(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): Product

  """The category of the product."""
  category: Category
}

type ProductError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: ProductErrorCode!

  """List of attributes IDs which causes the error."""
  attributes: [ID!]

  """List of attribute values IDs which causes the error."""
  values: [ID!]
}

"""An enumeration."""
enum ProductErrorCode {
  ALREADY_EXISTS
  ATTRIBUTE_ALREADY_ASSIGNED
  ATTRIBUTE_CANNOT_BE_ASSIGNED
  ATTRIBUTE_VARIANTS_DISABLED
  MEDIA_ALREADY_ASSIGNED
  DUPLICATED_INPUT_ITEM
  GRAPHQL_ERROR
  INVALID
  PRODUCT_WITHOUT_CATEGORY
  NOT_PRODUCTS_IMAGE
  NOT_PRODUCTS_VARIANT
  NOT_FOUND
  REQUIRED
  UNIQUE
  VARIANT_NO_DIGITAL_CONTENT
  CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT
  PRODUCT_NOT_ASSIGNED_TO_CHANNEL
  UNSUPPORTED_MEDIA_PROVIDER
  PREORDER_VARIANT_CANNOT_BE_DEACTIVATED
}

enum ProductFieldEnum {
  NAME
  DESCRIPTION
  PRODUCT_TYPE
  CATEGORY
  PRODUCT_WEIGHT
  COLLECTIONS
  CHARGE_TAXES
  PRODUCT_MEDIA
  VARIANT_ID
  VARIANT_SKU
  VARIANT_WEIGHT
  VARIANT_MEDIA
}

input ProductFilterInput {
  isPublished: Boolean
  collections: [ID!]
  categories: [ID!]
  hasCategory: Boolean
  attributes: [AttributeInput!]

  """Filter by variants having specific stock status."""
  stockAvailability: StockAvailability
  stocks: ProductStockFilterInput
  search: String
  metadata: [MetadataFilter!]

  """
  Filter by the publication date. 
  
  Added in Saleor 3.8.
  """
  publishedFrom: DateTime

  """
  Filter by availability for purchase. 
  
  Added in Saleor 3.8.
  """
  isAvailable: Boolean

  """
  Filter by the date of availability for purchase. 
  
  Added in Saleor 3.8.
  """
  availableFrom: DateTime

  """
  Filter by visibility in product listings. 
  
  Added in Saleor 3.8.
  """
  isVisibleInListing: Boolean
  price: PriceRangeInput

  """Filter by the lowest variant price after discounts."""
  minimalPrice: PriceRangeInput

  """Filter by when was the most recent update."""
  updatedAt: DateTimeRangeInput
  productTypes: [ID!]

  """Filter on whether product is a gift card or not."""
  giftCard: Boolean
  ids: [ID!]
  hasPreorderedVariants: Boolean
  slugs: [String!]

  """
  Specifies the channel by which the data should be filtered. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use root-level channel argument instead.
  """
  channel: String
}

"""Represents a product image."""
type ProductImage {
  """The ID of the image."""
  id: ID!

  """The alt text of the image."""
  alt: String

  """
  The new relative sorting position of the item (from -inf to +inf). 1 moves the item one position forward, -1 moves the item one position backward, 0 leaves the item unchanged.
  """
  sortOrder: Int
  url(
    """
    Size of the image. If not provided, the original image will be returned.
    """
    size: Int

    """
    The format of the image. When not provided, format of the original image will be used. Must be provided together with the size value, otherwise original image will be returned.
    
    Added in Saleor 3.6.
    
    Note: this API is currently in Feature Preview and can be subject to changes at later point.
    """
    format: ThumbnailFormatEnum
  ): String!
}

input ProductInput {
  """List of attributes."""
  attributes: [AttributeValueInput!]

  """ID of the product's category."""
  category: ID

  """
  Determine if taxes are being charged for the product. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use `Channel.taxConfiguration` to configure whether tax collection is enabled.
  """
  chargeTaxes: Boolean

  """List of IDs of collections that the product belongs to."""
  collections: [ID!]

  """
  Product description.
  
  Rich text format. For reference see https://editorjs.io/
  """
  description: JSONString

  """Product name."""
  name: String

  """Product slug."""
  slug: String

  """
  ID of a tax class to assign to this product. If not provided, product will use the tax class which is assigned to the product type.
  """
  taxClass: ID

  """
  Tax rate for enabled tax gateway. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use tax classes to control the tax calculation for a product.
  """
  taxCode: String

  """Search engine optimization fields."""
  seo: SeoInput

  """Weight of the Product."""
  weight: WeightScalar

  """Defines the product rating value."""
  rating: Float

  """
  Fields required to update the product metadata.
  
  Added in Saleor 3.8.
  """
  metadata: [MetadataInput!]

  """
  Fields required to update the product private metadata.
  
  Added in Saleor 3.8.
  """
  privateMetadata: [MetadataInput!]
}

"""Represents a product media."""
type ProductMedia implements Node {
  id: ID!
  sortOrder: Int
  alt: String!
  type: ProductMediaType!
  oembedData: JSONString!
  url(
    """
    Size of the image. If not provided, the original image will be returned.
    """
    size: Int

    """
    The format of the image. When not provided, format of the original image will be used. Must be provided together with the size value, otherwise original image will be returned.
    
    Added in Saleor 3.6.
    
    Note: this API is currently in Feature Preview and can be subject to changes at later point.
    """
    format: ThumbnailFormatEnum
  ): String!
}

"""
Deletes product media. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type ProductMediaBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
}

"""
Create a media object (image or video URL) associated with product. For image, this mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type ProductMediaCreate {
  product: Product
  media: ProductMedia
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
}

input ProductMediaCreateInput {
  """Alt text for a product media."""
  alt: String

  """Represents an image file in a multipart request."""
  image: Upload

  """ID of an product."""
  product: ID!

  """Represents an URL to an external media."""
  mediaUrl: String
}

"""
Deletes a product media. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type ProductMediaDelete {
  product: Product
  media: ProductMedia
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
}

"""
Changes ordering of the product media. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type ProductMediaReorder {
  product: Product
  media: [ProductMedia!]
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
}

"""An enumeration."""
enum ProductMediaType {
  IMAGE
  VIDEO
}

"""
Updates a product media. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type ProductMediaUpdate {
  product: Product
  media: ProductMedia
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
}

input ProductMediaUpdateInput {
  """Alt text for a product media."""
  alt: String
}

"""
Event sent when product metadata is updated.

Added in Saleor 3.8.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ProductMetadataUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The product the event relates to."""
  product(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): Product

  """The category of the product."""
  category: Category
}

input ProductOrder {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """
  Specifies the channel in which to sort the data.
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use root-level channel argument instead.
  """
  channel: String

  """
  Sort product by the selected attribute's values.
  Note: this doesn't take translations into account yet.
  """
  attributeId: ID

  """Sort products by the selected field."""
  field: ProductOrderField
}

enum ProductOrderField {
  """Sort products by name."""
  NAME

  """
  Sort products by rank. Note: This option is available only with the `search` filter.
  """
  RANK

  """
  Sort products by price.
  
  This option requires a channel filter to work as the values can vary between channels.
  """
  PRICE

  """
  Sort products by a minimal price of a product's variant.
  
  This option requires a channel filter to work as the values can vary between channels.
  """
  MINIMAL_PRICE

  """Sort products by update date."""
  LAST_MODIFIED

  """Sort products by update date."""
  DATE

  """Sort products by type."""
  TYPE

  """
  Sort products by publication status.
  
  This option requires a channel filter to work as the values can vary between channels.
  """
  PUBLISHED

  """
  Sort products by publication date.
  
  This option requires a channel filter to work as the values can vary between channels.
  """
  PUBLICATION_DATE

  """
  Sort products by publication date.
  
  This option requires a channel filter to work as the values can vary between channels.
  """
  PUBLISHED_AT

  """Sort products by update date."""
  LAST_MODIFIED_AT

  """
  Sort products by collection. Note: This option is available only for the `Collection.products` query.
  
  This option requires a channel filter to work as the values can vary between channels.
  """
  COLLECTION

  """Sort products by rating."""
  RATING

  """
  Sort products by creation date.
  
  Added in Saleor 3.8.
  """
  CREATED_AT
}

"""Represents availability of a product in the storefront."""
type ProductPricingInfo {
  """Whether it is in sale or not."""
  onSale: Boolean

  """The discount amount if in sale (null otherwise)."""
  discount: TaxedMoney

  """The discount amount in the local currency."""
  discountLocalCurrency: TaxedMoney

  """The discounted price range of the product variants."""
  priceRange: TaxedMoneyRange

  """The undiscounted price range of the product variants."""
  priceRangeUndiscounted: TaxedMoneyRange

  """
  The discounted price range of the product variants in the local currency.
  """
  priceRangeLocalCurrency: TaxedMoneyRange

  """
  Determines whether this product's price displayed in a storefront should include taxes.
  
  Added in Saleor 3.9.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  displayGrossPrices: Boolean!
}

"""
Reorder product attribute values. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type ProductReorderAttributeValues {
  """Product from which attribute values are reordered."""
  product: Product
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
}

input ProductStockFilterInput {
  warehouseIds: [ID!]
  quantity: IntRangeInput
}

type ProductTranslatableContent implements Node {
  id: ID!
  seoTitle: String
  seoDescription: String
  name: String!

  """
  Description of the product.
  
  Rich text format. For reference see https://editorjs.io/
  """
  description: JSONString

  """
  Description of the product.
  
  Rich text format. For reference see https://editorjs.io/
  """
  descriptionJson: JSONString @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `description` field instead.")

  """Returns translated product fields for the given language code."""
  translation(
    """A language code to return the translation for product."""
    languageCode: LanguageCodeEnum!
  ): ProductTranslation

  """Represents an individual item for sale in the storefront."""
  product: Product @deprecated(reason: "This field will be removed in Saleor 4.0. Get model fields from the root level queries.")

  """List of product attribute values that can be translated."""
  attributeValues: [AttributeValueTranslatableContent!]!
}

"""
Creates/updates translations for a product. 

Requires one of the following permissions: MANAGE_TRANSLATIONS.
"""
type ProductTranslate {
  translationErrors: [TranslationError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [TranslationError!]!
  product: Product
}

type ProductTranslation implements Node {
  id: ID!

  """Translation language."""
  language: LanguageDisplay!
  seoTitle: String
  seoDescription: String
  name: String

  """
  Translated description of the product.
  
  Rich text format. For reference see https://editorjs.io/
  """
  description: JSONString

  """
  Translated description of the product.
  
  Rich text format. For reference see https://editorjs.io/
  """
  descriptionJson: JSONString @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `description` field instead.")
}

"""
Represents a type of product. It defines what attributes are available to products of this type.
"""
type ProductType implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  name: String!
  slug: String!
  hasVariants: Boolean!
  isShippingRequired: Boolean!
  isDigital: Boolean!
  weight: Weight

  """The product type kind."""
  kind: ProductTypeKindEnum!

  """List of products of this type."""
  products(
    """Slug of a channel for which the data should be returned."""
    channel: String

    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): ProductCountableConnection @deprecated(reason: "This field will be removed in Saleor 4.0. Use the top-level `products` query with the `productTypes` filter.")

  """A type of tax. Assigned by enabled tax gateway"""
  taxType: TaxType @deprecated(reason: "This field will be removed in Saleor 4.0. Use `taxClass` field instead.")

  """
  Tax class assigned to this product type. All products of this product type use this tax class, unless it's overridden in the `Product` type.
  
  Requires one of the following permissions: AUTHENTICATED_STAFF_USER.
  """
  taxClass: TaxClass

  """Variant attributes of that product type."""
  variantAttributes(
    """Define scope of returned attributes."""
    variantSelection: VariantAttributeScope
  ): [Attribute!] @deprecated(reason: "This field will be removed in Saleor 4.0. Use `assignedVariantAttributes` instead.")

  """
  Variant attributes of that product type with attached variant selection.
  
  Added in Saleor 3.1.
  """
  assignedVariantAttributes(
    """Define scope of returned attributes."""
    variantSelection: VariantAttributeScope
  ): [AssignedVariantAttribute!]

  """Product attributes of that product type."""
  productAttributes: [Attribute!]

  """
  List of attributes which can be assigned to this product type.
  
  Requires one of the following permissions: MANAGE_PRODUCTS.
  """
  availableAttributes(
    filter: AttributeFilterInput

    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): AttributeCountableConnection
}

"""
Deletes product types. 

Requires one of the following permissions: MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES.
"""
type ProductTypeBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
}

enum ProductTypeConfigurable {
  CONFIGURABLE
  SIMPLE
}

type ProductTypeCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [ProductTypeCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type ProductTypeCountableEdge {
  """The item at the end of the edge."""
  node: ProductType!

  """A cursor for use in pagination."""
  cursor: String!
}

"""
Creates a new product type. 

Requires one of the following permissions: MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES.
"""
type ProductTypeCreate {
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
  productType: ProductType
}

"""
Deletes a product type. 

Requires one of the following permissions: MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES.
"""
type ProductTypeDelete {
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
  productType: ProductType
}

enum ProductTypeEnum {
  DIGITAL
  SHIPPABLE
}

input ProductTypeFilterInput {
  search: String
  configurable: ProductTypeConfigurable
  productType: ProductTypeEnum
  metadata: [MetadataFilter!]
  kind: ProductTypeKindEnum
  ids: [ID!]
  slugs: [String!]
}

input ProductTypeInput {
  """Name of the product type."""
  name: String

  """Product type slug."""
  slug: String

  """The product type kind."""
  kind: ProductTypeKindEnum

  """
  Determines if product of this type has multiple variants. This option mainly simplifies product management in the dashboard. There is always at least one variant created under the hood.
  """
  hasVariants: Boolean

  """List of attributes shared among all product variants."""
  productAttributes: [ID!]

  """
  List of attributes used to distinguish between different variants of a product.
  """
  variantAttributes: [ID!]

  """Determines if shipping is required for products of this variant."""
  isShippingRequired: Boolean

  """Determines if products are digital."""
  isDigital: Boolean

  """Weight of the ProductType items."""
  weight: WeightScalar

  """
  Tax rate for enabled tax gateway. 
  
  DEPRECATED: this field will be removed in Saleor 4.0.. Use tax classes to control the tax calculation for a product type.
  """
  taxCode: String

  """
  ID of a tax class to assign to this product type. All products of this product type would use this tax class, unless it's overridden in the `Product` type.
  """
  taxClass: ID
}

"""An enumeration."""
enum ProductTypeKindEnum {
  NORMAL
  GIFT_CARD
}

"""
Reorder the attributes of a product type. 

Requires one of the following permissions: MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES.
"""
type ProductTypeReorderAttributes {
  """Product type from which attributes are reordered."""
  productType: ProductType
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
}

enum ProductTypeSortField {
  """Sort products by name."""
  NAME

  """Sort products by type."""
  DIGITAL

  """Sort products by shipping."""
  SHIPPING_REQUIRED
}

input ProductTypeSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort product types by the selected field."""
  field: ProductTypeSortField!
}

"""
Updates an existing product type. 

Requires one of the following permissions: MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES.
"""
type ProductTypeUpdate {
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
  productType: ProductType
}

"""
Updates an existing product. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type ProductUpdate {
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
  product: Product
}

"""
Event sent when product is updated.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ProductUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The product the event relates to."""
  product(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): Product

  """The category of the product."""
  category: Category
}

"""Represents a version of a product such as different size or color."""
type ProductVariant implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  name: String!
  sku: String
  product: Product!
  trackInventory: Boolean!
  quantityLimitPerCustomer: Int
  weight: Weight

  """
  Channel given to retrieve this product variant. Also used by federation gateway to resolve this object in a federated query.
  """
  channel: String

  """
  List of price information in channels for the product.
  
  Requires one of the following permissions: AUTHENTICATED_APP, AUTHENTICATED_STAFF_USER.
  """
  channelListings: [ProductVariantChannelListing!]

  """
  Lists the storefront variant's pricing, the current price and discounts, only meant for displaying.
  """
  pricing(
    """
    Destination address used to find warehouses where stock availability for this product is checked. If address is empty, uses `Shop.companyAddress` or fallbacks to server's `settings.DEFAULT_COUNTRY` configuration.
    """
    address: AddressInput
  ): VariantPricingInfo

  """List of attributes assigned to this variant."""
  attributes(
    """Define scope of returned attributes."""
    variantSelection: VariantAttributeScope
  ): [SelectedAttribute!]!

  """Gross margin percentage value."""
  margin: Int

  """
  Total quantity ordered.
  
  Requires one of the following permissions: MANAGE_PRODUCTS.
  """
  quantityOrdered: Int

  """
  Total revenue generated by a variant in given period of time. Note: this field should be queried using `reportProductSales` query as it uses optimizations suitable for such calculations.
  
  Requires one of the following permissions: MANAGE_PRODUCTS.
  """
  revenue(period: ReportingPeriod): TaxedMoney

  """List of images for the product variant."""
  images: [ProductImage!] @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `media` field instead.")

  """List of media for the product variant."""
  media: [ProductMedia!]

  """Returns translated product variant fields for the given language code."""
  translation(
    """A language code to return the translation for product variant."""
    languageCode: LanguageCodeEnum!
  ): ProductVariantTranslation

  """
  Digital content for the product variant.
  
  Requires one of the following permissions: MANAGE_PRODUCTS.
  """
  digitalContent: DigitalContent

  """
  Stocks for the product variant.
  
  Requires one of the following permissions: MANAGE_PRODUCTS, MANAGE_ORDERS.
  """
  stocks(
    """
    Destination address used to find warehouses where stock availability for this product is checked. If address is empty, uses `Shop.companyAddress` or fallbacks to server's `settings.DEFAULT_COUNTRY` configuration.
    """
    address: AddressInput

    """
    Two-letter ISO 3166-1 country code. 
    
    DEPRECATED: this field will be removed in Saleor 4.0. Use `address` argument instead.
    """
    countryCode: CountryCode
  ): [Stock!]

  """
  Quantity of a product available for sale in one checkout. Field value will be `null` when no `limitQuantityPerCheckout` in global settings has been set, and `productVariant` stocks are not tracked.
  """
  quantityAvailable(
    """
    Destination address used to find warehouses where stock availability for this product is checked. If address is empty, uses `Shop.companyAddress` or fallbacks to server's `settings.DEFAULT_COUNTRY` configuration.
    """
    address: AddressInput

    """
    Two-letter ISO 3166-1 country code. When provided, the exact quantity from a warehouse operating in shipping zones that contain this country will be returned. Otherwise, it will return the maximum quantity from all shipping zones. 
    
    DEPRECATED: this field will be removed in Saleor 4.0. Use `address` argument instead.
    """
    countryCode: CountryCode
  ): Int

  """
  Preorder data for product variant.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  preorder: PreorderData
  created: DateTime!
  updatedAt: DateTime!
}

"""
Event sent when product variant is back in stock.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ProductVariantBackInStock implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The product variant the event relates to."""
  productVariant(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): ProductVariant

  """Look up a warehouse."""
  warehouse: Warehouse
}

"""
Creates product variants for a given product. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type ProductVariantBulkCreate {
  """Returns how many objects were created."""
  count: Int!

  """List of the created variants."""
  productVariants: [ProductVariant!]!
  bulkProductErrors: [BulkProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [BulkProductError!]!
}

input ProductVariantBulkCreateInput {
  """List of attributes specific to this variant."""
  attributes: [BulkAttributeValueInput!]!

  """Stock keeping unit."""
  sku: String

  """Variant name."""
  name: String

  """
  Determines if the inventory of this variant should be tracked. If false, the quantity won't change when customers buy this item.
  """
  trackInventory: Boolean

  """Weight of the Product Variant."""
  weight: WeightScalar

  """
  Determines if variant is in preorder.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  preorder: PreorderSettingsInput

  """
  Determines maximum quantity of `ProductVariant`,that can be bought in a single checkout.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  quantityLimitPerCustomer: Int

  """
  Fields required to update the product variant metadata.
  
  Added in Saleor 3.8.
  """
  metadata: [MetadataInput!]

  """
  Fields required to update the product variant private metadata.
  
  Added in Saleor 3.8.
  """
  privateMetadata: [MetadataInput!]

  """Stocks of a product available for sale."""
  stocks: [StockInput!]

  """List of prices assigned to channels."""
  channelListings: [ProductVariantChannelListingAddInput!]
}

"""
Deletes product variants. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type ProductVariantBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
}

"""Represents product varaint channel listing."""
type ProductVariantChannelListing implements Node {
  id: ID!
  channel: Channel!
  price: Money

  """Cost price of the variant."""
  costPrice: Money

  """
  Gross margin percentage value.
  
  Requires one of the following permissions: MANAGE_PRODUCTS.
  """
  margin: Int

  """
  Preorder variant data.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  preorderThreshold: PreorderThreshold
}

input ProductVariantChannelListingAddInput {
  """ID of a channel."""
  channelId: ID!

  """Price of the particular variant in channel."""
  price: PositiveDecimal!

  """Cost price of the variant in channel."""
  costPrice: PositiveDecimal

  """
  The threshold for preorder variant in channel.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  preorderThreshold: Int
}

"""
Manage product variant prices in channels. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type ProductVariantChannelListingUpdate {
  """An updated product variant instance."""
  variant: ProductVariant
  productChannelListingErrors: [ProductChannelListingError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductChannelListingError!]!
}

type ProductVariantCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [ProductVariantCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type ProductVariantCountableEdge {
  """The item at the end of the edge."""
  node: ProductVariant!

  """A cursor for use in pagination."""
  cursor: String!
}

"""
Creates a new variant for a product. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type ProductVariantCreate {
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
  productVariant: ProductVariant
}

input ProductVariantCreateInput {
  """List of attributes specific to this variant."""
  attributes: [AttributeValueInput!]!

  """Stock keeping unit."""
  sku: String

  """Variant name."""
  name: String

  """
  Determines if the inventory of this variant should be tracked. If false, the quantity won't change when customers buy this item.
  """
  trackInventory: Boolean

  """Weight of the Product Variant."""
  weight: WeightScalar

  """
  Determines if variant is in preorder.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  preorder: PreorderSettingsInput

  """
  Determines maximum quantity of `ProductVariant`,that can be bought in a single checkout.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  quantityLimitPerCustomer: Int

  """
  Fields required to update the product variant metadata.
  
  Added in Saleor 3.8.
  """
  metadata: [MetadataInput!]

  """
  Fields required to update the product variant private metadata.
  
  Added in Saleor 3.8.
  """
  privateMetadata: [MetadataInput!]

  """Product ID of which type is the variant."""
  product: ID!

  """Stocks of a product available for sale."""
  stocks: [StockInput!]
}

"""
Event sent when new product variant is created.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ProductVariantCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The product variant the event relates to."""
  productVariant(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): ProductVariant
}

"""
Deletes a product variant. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type ProductVariantDelete {
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
  productVariant: ProductVariant
}

"""
Event sent when product variant is deleted.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ProductVariantDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The product variant the event relates to."""
  productVariant(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): ProductVariant
}

input ProductVariantFilterInput {
  search: String
  sku: [String!]
  metadata: [MetadataFilter!]
  isPreorder: Boolean
  updatedAt: DateTimeRangeInput
}

input ProductVariantInput {
  """List of attributes specific to this variant."""
  attributes: [AttributeValueInput!]

  """Stock keeping unit."""
  sku: String

  """Variant name."""
  name: String

  """
  Determines if the inventory of this variant should be tracked. If false, the quantity won't change when customers buy this item.
  """
  trackInventory: Boolean

  """Weight of the Product Variant."""
  weight: WeightScalar

  """
  Determines if variant is in preorder.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  preorder: PreorderSettingsInput

  """
  Determines maximum quantity of `ProductVariant`,that can be bought in a single checkout.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  quantityLimitPerCustomer: Int

  """
  Fields required to update the product variant metadata.
  
  Added in Saleor 3.8.
  """
  metadata: [MetadataInput!]

  """
  Fields required to update the product variant private metadata.
  
  Added in Saleor 3.8.
  """
  privateMetadata: [MetadataInput!]
}

"""
Event sent when product variant metadata is updated.

Added in Saleor 3.8.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ProductVariantMetadataUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The product variant the event relates to."""
  productVariant(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): ProductVariant
}

"""
Event sent when product variant is out of stock.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ProductVariantOutOfStock implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The product variant the event relates to."""
  productVariant(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): ProductVariant

  """Look up a warehouse."""
  warehouse: Warehouse
}

"""
Deactivates product variant preorder. It changes all preorder allocation into regular allocation.

Added in Saleor 3.1.

Note: this API is currently in Feature Preview and can be subject to changes at later point. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type ProductVariantPreorderDeactivate {
  """Product variant with ended preorder."""
  productVariant: ProductVariant
  errors: [ProductError!]!
}

"""
Reorder the variants of a product. Mutation updates updated_at on product and triggers PRODUCT_UPDATED webhook. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type ProductVariantReorder {
  product: Product
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
}

"""
Reorder product variant attribute values. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type ProductVariantReorderAttributeValues {
  """Product variant from which attribute values are reordered."""
  productVariant: ProductVariant
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
}

"""
Set default variant for a product. Mutation triggers PRODUCT_UPDATED webhook. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type ProductVariantSetDefault {
  product: Product
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
}

enum ProductVariantSortField {
  """Sort products variants by last modified at."""
  LAST_MODIFIED_AT
}

"""
Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'.
"""
input jsonb_comparison_exp {
  _cast: jsonb_cast_exp

  """is the column contained in the given json value"""
  _contained_in: jsonb

  """does the column contain the given json value at the top level"""
  _contains: jsonb
  _eq: jsonb
  _gt: jsonb
  _gte: jsonb

  """does the string exist as a top-level key in the column"""
  _has_key: String

  """do all of these strings exist as top-level keys in the column"""
  _has_keys_all: [String!]

  """do any of these strings exist as top-level keys in the column"""
  _has_keys_any: [String!]
  _in: [jsonb!]
  _is_null: Boolean
  _lt: jsonb
  _lte: jsonb
  _neq: jsonb
  _nin: [jsonb!]
}

"""mutation root"""
type mutation_root {
  changePassword(data: ChangePasswordInputbe!): Userbe!
  createPost(data: CreatePostInputbe!): Postbe!

  """
  delete data from the table: "Action"
  """
  delete_Action(
    """filter the rows which have to be deleted"""
    where: Action_bool_exp!
  ): Action_mutation_response

  """
  delete single row from the table: "Action"
  """
  delete_Action_by_pk(id: String!): Action

  """
  delete data from the table: "Activity"
  """
  delete_Activity(
    """filter the rows which have to be deleted"""
    where: Activity_bool_exp!
  ): Activity_mutation_response

  """
  delete single row from the table: "Activity"
  """
  delete_Activity_by_pk(id: String!): Activity

  """
  delete data from the table: "Comment"
  """
  delete_Comment(
    """filter the rows which have to be deleted"""
    where: Comment_bool_exp!
  ): Comment_mutation_response

  """
  delete single row from the table: "Comment"
  """
  delete_Comment_by_pk(id: String!): Comment

  """
  delete data from the table: "EventLog"
  """
  delete_EventLog(
    """filter the rows which have to be deleted"""
    where: EventLog_bool_exp!
  ): EventLog_mutation_response

  """
  delete single row from the table: "EventLog"
  """
  delete_EventLog_by_pk(id: String!): EventLog

  """
  delete data from the table: "File"
  """
  delete_File(
    """filter the rows which have to be deleted"""
    where: File_bool_exp!
  ): File_mutation_response

  """
  delete single row from the table: "File"
  """
  delete_File_by_pk(id: String!): File

  """
  delete data from the table: "MemberOnTeams"
  """
  delete_MemberOnTeams(
    """filter the rows which have to be deleted"""
    where: MemberOnTeams_bool_exp!
  ): MemberOnTeams_mutation_response

  """
  delete single row from the table: "MemberOnTeams"
  """
  delete_MemberOnTeams_by_pk(teamId: String!, userId: String!): MemberOnTeams

  """
  delete data from the table: "Organization"
  """
  delete_Organization(
    """filter the rows which have to be deleted"""
    where: Organization_bool_exp!
  ): Organization_mutation_response

  """
  delete single row from the table: "Organization"
  """
  delete_Organization_by_pk(id: String!): Organization

  """
  delete data from the table: "Permission"
  """
  delete_Permission(
    """filter the rows which have to be deleted"""
    where: Permission_bool_exp!
  ): Permission_mutation_response

  """
  delete data from the table: "PermissionGroup"
  """
  delete_PermissionGroup(
    """filter the rows which have to be deleted"""
    where: PermissionGroup_bool_exp!
  ): PermissionGroup_mutation_response

  """
  delete single row from the table: "PermissionGroup"
  """
  delete_PermissionGroup_by_pk(id: String!): PermissionGroup

  """
  delete single row from the table: "Permission"
  """
  delete_Permission_by_pk(id: String!): Permission

  """
  delete data from the table: "Post"
  """
  delete_Post(
    """filter the rows which have to be deleted"""
    where: Post_bool_exp!
  ): Post_mutation_response

  """
  delete single row from the table: "Post"
  """
  delete_Post_by_pk(id: String!): Post

  """
  delete data from the table: "Settings"
  """
  delete_Settings(
    """filter the rows which have to be deleted"""
    where: Settings_bool_exp!
  ): Settings_mutation_response

  """
  delete single row from the table: "Settings"
  """
  delete_Settings_by_pk(id: String!): Settings

  """
  delete data from the table: "Task"
  """
  delete_Task(
    """filter the rows which have to be deleted"""
    where: Task_bool_exp!
  ): Task_mutation_response

  """
  delete data from the table: "TaskDefinition"
  """
  delete_TaskDefinition(
    """filter the rows which have to be deleted"""
    where: TaskDefinition_bool_exp!
  ): TaskDefinition_mutation_response

  """
  delete single row from the table: "TaskDefinition"
  """
  delete_TaskDefinition_by_pk(id: String!): TaskDefinition

  """
  delete single row from the table: "Task"
  """
  delete_Task_by_pk(id: String!): Task

  """
  delete data from the table: "Team"
  """
  delete_Team(
    """filter the rows which have to be deleted"""
    where: Team_bool_exp!
  ): Team_mutation_response

  """
  delete single row from the table: "Team"
  """
  delete_Team_by_pk(id: String!): Team

  """
  delete data from the table: "Trigger"
  """
  delete_Trigger(
    """filter the rows which have to be deleted"""
    where: Trigger_bool_exp!
  ): Trigger_mutation_response

  """
  delete single row from the table: "Trigger"
  """
  delete_Trigger_by_pk(id: String!): Trigger

  """
  delete data from the table: "User"
  """
  delete_User(
    """filter the rows which have to be deleted"""
    where: User_bool_exp!
  ): User_mutation_response

  """
  delete single row from the table: "User"
  """
  delete_User_by_pk(id: String!): User

  """
  delete data from the table: "Workflow"
  """
  delete_Workflow(
    """filter the rows which have to be deleted"""
    where: Workflow_bool_exp!
  ): Workflow_mutation_response

  """
  delete single row from the table: "Workflow"
  """
  delete_Workflow_by_pk(id: String!): Workflow

  """
  delete data from the table: "_prisma_migrations"
  """
  delete__prisma_migrations(
    """filter the rows which have to be deleted"""
    where: _prisma_migrations_bool_exp!
  ): _prisma_migrations_mutation_response

  """
  delete single row from the table: "_prisma_migrations"
  """
  delete__prisma_migrations_by_pk(id: String!): _prisma_migrations

  """
  insert data into the table: "Action"
  """
  insert_Action(
    """the rows to be inserted"""
    objects: [Action_insert_input!]!

    """upsert condition"""
    on_conflict: Action_on_conflict
  ): Action_mutation_response

  """
  insert a single row into the table: "Action"
  """
  insert_Action_one(
    """the row to be inserted"""
    object: Action_insert_input!

    """upsert condition"""
    on_conflict: Action_on_conflict
  ): Action

  """
  insert data into the table: "Activity"
  """
  insert_Activity(
    """the rows to be inserted"""
    objects: [Activity_insert_input!]!

    """upsert condition"""
    on_conflict: Activity_on_conflict
  ): Activity_mutation_response

  """
  insert a single row into the table: "Activity"
  """
  insert_Activity_one(
    """the row to be inserted"""
    object: Activity_insert_input!

    """upsert condition"""
    on_conflict: Activity_on_conflict
  ): Activity

  """
  insert data into the table: "Comment"
  """
  insert_Comment(
    """the rows to be inserted"""
    objects: [Comment_insert_input!]!

    """upsert condition"""
    on_conflict: Comment_on_conflict
  ): Comment_mutation_response

  """
  insert a single row into the table: "Comment"
  """
  insert_Comment_one(
    """the row to be inserted"""
    object: Comment_insert_input!

    """upsert condition"""
    on_conflict: Comment_on_conflict
  ): Comment

  """
  insert data into the table: "EventLog"
  """
  insert_EventLog(
    """the rows to be inserted"""
    objects: [EventLog_insert_input!]!

    """upsert condition"""
    on_conflict: EventLog_on_conflict
  ): EventLog_mutation_response

  """
  insert a single row into the table: "EventLog"
  """
  insert_EventLog_one(
    """the row to be inserted"""
    object: EventLog_insert_input!

    """upsert condition"""
    on_conflict: EventLog_on_conflict
  ): EventLog

  """
  insert data into the table: "File"
  """
  insert_File(
    """the rows to be inserted"""
    objects: [File_insert_input!]!

    """upsert condition"""
    on_conflict: File_on_conflict
  ): File_mutation_response

  """
  insert a single row into the table: "File"
  """
  insert_File_one(
    """the row to be inserted"""
    object: File_insert_input!

    """upsert condition"""
    on_conflict: File_on_conflict
  ): File

  """
  insert data into the table: "MemberOnTeams"
  """
  insert_MemberOnTeams(
    """the rows to be inserted"""
    objects: [MemberOnTeams_insert_input!]!

    """upsert condition"""
    on_conflict: MemberOnTeams_on_conflict
  ): MemberOnTeams_mutation_response

  """
  insert a single row into the table: "MemberOnTeams"
  """
  insert_MemberOnTeams_one(
    """the row to be inserted"""
    object: MemberOnTeams_insert_input!

    """upsert condition"""
    on_conflict: MemberOnTeams_on_conflict
  ): MemberOnTeams

  """
  insert data into the table: "Organization"
  """
  insert_Organization(
    """the rows to be inserted"""
    objects: [Organization_insert_input!]!

    """upsert condition"""
    on_conflict: Organization_on_conflict
  ): Organization_mutation_response

  """
  insert a single row into the table: "Organization"
  """
  insert_Organization_one(
    """the row to be inserted"""
    object: Organization_insert_input!

    """upsert condition"""
    on_conflict: Organization_on_conflict
  ): Organization

  """
  insert data into the table: "Permission"
  """
  insert_Permission(
    """the rows to be inserted"""
    objects: [Permission_insert_input!]!

    """upsert condition"""
    on_conflict: Permission_on_conflict
  ): Permission_mutation_response

  """
  insert data into the table: "PermissionGroup"
  """
  insert_PermissionGroup(
    """the rows to be inserted"""
    objects: [PermissionGroup_insert_input!]!

    """upsert condition"""
    on_conflict: PermissionGroup_on_conflict
  ): PermissionGroup_mutation_response

  """
  insert a single row into the table: "PermissionGroup"
  """
  insert_PermissionGroup_one(
    """the row to be inserted"""
    object: PermissionGroup_insert_input!

    """upsert condition"""
    on_conflict: PermissionGroup_on_conflict
  ): PermissionGroup

  """
  insert a single row into the table: "Permission"
  """
  insert_Permission_one(
    """the row to be inserted"""
    object: Permission_insert_input!

    """upsert condition"""
    on_conflict: Permission_on_conflict
  ): Permission

  """
  insert data into the table: "Post"
  """
  insert_Post(
    """the rows to be inserted"""
    objects: [Post_insert_input!]!

    """upsert condition"""
    on_conflict: Post_on_conflict
  ): Post_mutation_response

  """
  insert a single row into the table: "Post"
  """
  insert_Post_one(
    """the row to be inserted"""
    object: Post_insert_input!

    """upsert condition"""
    on_conflict: Post_on_conflict
  ): Post

  """
  insert data into the table: "Settings"
  """
  insert_Settings(
    """the rows to be inserted"""
    objects: [Settings_insert_input!]!

    """upsert condition"""
    on_conflict: Settings_on_conflict
  ): Settings_mutation_response

  """
  insert a single row into the table: "Settings"
  """
  insert_Settings_one(
    """the row to be inserted"""
    object: Settings_insert_input!

    """upsert condition"""
    on_conflict: Settings_on_conflict
  ): Settings

  """
  insert data into the table: "Task"
  """
  insert_Task(
    """the rows to be inserted"""
    objects: [Task_insert_input!]!

    """upsert condition"""
    on_conflict: Task_on_conflict
  ): Task_mutation_response

  """
  insert data into the table: "TaskDefinition"
  """
  insert_TaskDefinition(
    """the rows to be inserted"""
    objects: [TaskDefinition_insert_input!]!

    """upsert condition"""
    on_conflict: TaskDefinition_on_conflict
  ): TaskDefinition_mutation_response

  """
  insert a single row into the table: "TaskDefinition"
  """
  insert_TaskDefinition_one(
    """the row to be inserted"""
    object: TaskDefinition_insert_input!

    """upsert condition"""
    on_conflict: TaskDefinition_on_conflict
  ): TaskDefinition

  """
  insert a single row into the table: "Task"
  """
  insert_Task_one(
    """the row to be inserted"""
    object: Task_insert_input!

    """upsert condition"""
    on_conflict: Task_on_conflict
  ): Task

  """
  insert data into the table: "Team"
  """
  insert_Team(
    """the rows to be inserted"""
    objects: [Team_insert_input!]!

    """upsert condition"""
    on_conflict: Team_on_conflict
  ): Team_mutation_response

  """
  insert a single row into the table: "Team"
  """
  insert_Team_one(
    """the row to be inserted"""
    object: Team_insert_input!

    """upsert condition"""
    on_conflict: Team_on_conflict
  ): Team

  """
  insert data into the table: "Trigger"
  """
  insert_Trigger(
    """the rows to be inserted"""
    objects: [Trigger_insert_input!]!

    """upsert condition"""
    on_conflict: Trigger_on_conflict
  ): Trigger_mutation_response

  """
  insert a single row into the table: "Trigger"
  """
  insert_Trigger_one(
    """the row to be inserted"""
    object: Trigger_insert_input!

    """upsert condition"""
    on_conflict: Trigger_on_conflict
  ): Trigger

  """
  insert data into the table: "User"
  """
  insert_User(
    """the rows to be inserted"""
    objects: [User_insert_input!]!

    """upsert condition"""
    on_conflict: User_on_conflict
  ): User_mutation_response

  """
  insert a single row into the table: "User"
  """
  insert_User_one(
    """the row to be inserted"""
    object: User_insert_input!

    """upsert condition"""
    on_conflict: User_on_conflict
  ): User

"""Represents a reduced VAT rate for a particular type of goods."""
type ReducedRate {
  """Reduced VAT rate in percent."""
  rate: Float!

  """A type of goods."""
  rateType: String!
}

"""
Refresh JWT token. Mutation tries to take refreshToken from the input.If it fails it will try to take refreshToken from the http-only cookie -refreshToken. csrfToken is required when refreshToken is provided as a cookie.
"""
type RefreshToken {
  """JWT token, required to authenticate."""
  token: String

  """A user instance."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

input ReorderInput {
  """The ID of the item to move."""
  id: ID!

  """
  The new relative sorting position of the item (from -inf to +inf). 1 moves the item one position forward, -1 moves the item one position backward, 0 leaves the item unchanged.
  """
  sortOrder: Int
}

enum ReportingPeriod {
  TODAY
  THIS_MONTH
}

"""
Request email change of the logged in user. 

Requires one of the following permissions: AUTHENTICATED_USER.
"""
type RequestEmailChange {
  """A user instance."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""Sends an email with the account password modification link."""
type RequestPasswordReset {
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""
Sales allow creating discounts for categories, collections or products and are visible to all the customers.
"""
type Sale implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  name: String!
  type: SaleType!
  startDate: DateTime!
  endDate: DateTime
  created: DateTime!
  updatedAt: DateTime!

  """List of categories this sale applies to."""
  categories(
    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): CategoryCountableConnection

  """
  List of collections this sale applies to.
  
  Requires one of the following permissions: MANAGE_DISCOUNTS.
  """
  collections(
    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): CollectionCountableConnection

  """
  List of products this sale applies to.
  
  Requires one of the following permissions: MANAGE_DISCOUNTS.
  """
  products(
    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): ProductCountableConnection

  """
  List of product variants this sale applies to.
  
  Added in Saleor 3.1.
  
  Requires one of the following permissions: MANAGE_DISCOUNTS.
  """
  variants(
    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): ProductVariantCountableConnection

  """Returns translated sale fields for the given language code."""
  translation(
    """A language code to return the translation for sale."""
    languageCode: LanguageCodeEnum!
  ): SaleTranslation

  """
  List of channels available for the sale.
  
  Requires one of the following permissions: MANAGE_DISCOUNTS.
  """
  channelListings: [SaleChannelListing!]

  """Sale value."""
  discountValue: Float

  """Currency code for sale."""
  currency: String
}

"""
Adds products, categories, collections to a voucher. 

Requires one of the following permissions: MANAGE_DISCOUNTS.
"""
type SaleAddCatalogues {
  """Sale of which catalogue IDs will be modified."""
  sale: Sale
  discountErrors: [DiscountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [DiscountError!]!
}

"""
Deletes sales. 

Requires one of the following permissions: MANAGE_DISCOUNTS.
"""
type SaleBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  discountErrors: [DiscountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [DiscountError!]!
}

"""Represents sale channel listing."""
type SaleChannelListing implements Node {
  id: ID!
  channel: Channel!
  discountValue: Float!
  currency: String!
}

input SaleChannelListingAddInput {
  """ID of a channel."""
  channelId: ID!

  """The value of the discount."""
  discountValue: PositiveDecimal!
}

input SaleChannelListingInput {
  """List of channels to which the sale should be assigned."""
  addChannels: [SaleChannelListingAddInput!]

  """List of channels from which the sale should be unassigned."""
  removeChannels: [ID!]
}

"""
Manage sale's availability in channels. 

Requires one of the following permissions: MANAGE_DISCOUNTS.
"""
type SaleChannelListingUpdate {
  """An updated sale instance."""
  sale: Sale
  discountErrors: [DiscountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [DiscountError!]!
}

type SaleCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [SaleCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type SaleCountableEdge {
  """The item at the end of the edge."""
  node: Sale!

  """A cursor for use in pagination."""
  cursor: String!
}

"""
Creates a new sale. 

Requires one of the following permissions: MANAGE_DISCOUNTS.
"""
type SaleCreate {
  discountErrors: [DiscountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [DiscountError!]!
  sale: Sale
}

"""
Event sent when new sale is created.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type SaleCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The sale the event relates to."""
  sale(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): Sale
}

"""
Deletes a sale. 

Requires one of the following permissions: MANAGE_DISCOUNTS.
"""
type SaleDelete {
  discountErrors: [DiscountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [DiscountError!]!
  sale: Sale
}

"""
Event sent when sale is deleted.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type SaleDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The sale the event relates to."""
  sale(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): Sale
}

input SaleFilterInput {
  status: [DiscountStatusEnum!]
  saleType: DiscountValueTypeEnum
  started: DateTimeRangeInput
  search: String
  metadata: [MetadataFilter!]
  updatedAt: DateTimeRangeInput
}

input SaleInput {
  """Voucher name."""
  name: String

  """Fixed or percentage."""
  type: DiscountValueTypeEnum

  """Value of the voucher."""
  value: PositiveDecimal

  """Products related to the discount."""
  products: [ID!]
  variants: [ID!]

  """Categories related to the discount."""
  categories: [ID!]

  """Collections related to the discount."""
  collections: [ID!]

  """Start date of the voucher in ISO 8601 format."""
  startDate: DateTime

  """End date of the voucher in ISO 8601 format."""
  endDate: DateTime
}

"""
Removes products, categories, collections from a sale. 

Requires one of the following permissions: MANAGE_DISCOUNTS.
"""
type SaleRemoveCatalogues {
  """Sale of which catalogue IDs will be modified."""
  sale: Sale
  discountErrors: [DiscountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [DiscountError!]!
}

enum SaleSortField {
  """Sort sales by name."""
  NAME

  """Sort sales by start date."""
  START_DATE

  """Sort sales by end date."""
  END_DATE

  """
  Sort sales by value.
  
  This option requires a channel filter to work as the values can vary between channels.
  """
  VALUE

  """Sort sales by type."""
  TYPE

  """Sort sales by created at."""
  CREATED_AT

  """Sort sales by last modified at."""
  LAST_MODIFIED_AT
}

input SaleSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """
  Specifies the channel in which to sort the data.
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use root-level channel argument instead.
  """
  channel: String

  """Sort sales by the selected field."""
  field: SaleSortField!
}

"""
The event informs about the start or end of the sale.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type SaleToggle implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """
  The sale the event relates to.
  
  Added in Saleor 3.5.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  sale(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): Sale
}

type SaleTranslatableContent implements Node {
  id: ID!
  name: String!

  """Returns translated sale fields for the given language code."""
  translation(
    """A language code to return the translation for sale."""
    languageCode: LanguageCodeEnum!
  ): SaleTranslation

  """
  Sales allow creating discounts for categories, collections or products and are visible to all the customers.
  
  Requires one of the following permissions: MANAGE_DISCOUNTS.
  """
  sale: Sale @deprecated(reason: "This field will be removed in Saleor 4.0. Get model fields from the root level queries.")
}

"""
Creates/updates translations for a sale. 

Requires one of the following permissions: MANAGE_TRANSLATIONS.
"""
type SaleTranslate {
  translationErrors: [TranslationError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [TranslationError!]!
  sale: Sale
}

type SaleTranslation implements Node {
  id: ID!

  """Translation language."""
  language: LanguageDisplay!
  name: String
}

enum SaleType {
  FIXED
  PERCENTAGE
}

"""
Updates a sale. 

Requires one of the following permissions: MANAGE_DISCOUNTS.
"""
type SaleUpdate {
  discountErrors: [DiscountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [DiscountError!]!
  sale: Sale
}

"""
Event sent when sale is updated.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type SaleUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The sale the event relates to."""
  sale(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): Sale
}

"""Represents a custom attribute."""
type SelectedAttribute {
  """Name of an attribute displayed in the interface."""
  attribute: Attribute!

  """Values of an attribute."""
  values: [AttributeValue!]!
}

input SeoInput {
  """SEO title."""
  title: String

  """SEO description."""
  description: String
}

"""
Sets the user's password from the token sent by email using the RequestPasswordReset mutation.
"""
type SetPassword {
  """JWT token, required to authenticate."""
  token: String

  """JWT refresh token, required to re-generate access token."""
  refreshToken: String

  """CSRF token required to re-generate access token."""
  csrfToken: String

  """A user instance."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

type ShippingError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: ShippingErrorCode!

  """List of warehouse IDs which causes the error."""
  warehouses: [ID!]

  """List of channels IDs which causes the error."""
  channels: [ID!]
}

"""An enumeration."""
enum ShippingErrorCode {
  ALREADY_EXISTS
  GRAPHQL_ERROR
  INVALID
  MAX_LESS_THAN_MIN
  NOT_FOUND
  REQUIRED
  UNIQUE
  DUPLICATED_INPUT_ITEM
}

"""
List shipping methods for checkout.

Added in Saleor 3.6.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ShippingListMethodsForCheckout implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The checkout the event relates to."""
  checkout: Checkout

  """
  Shipping methods that can be used with this checkout.
  
  Added in Saleor 3.6.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  shippingMethods: [ShippingMethod!]
}

"""
Shipping methods that can be used as means of shipping for orders and checkouts.
"""
type ShippingMethod implements Node & ObjectWithMetadata {
  """Unique ID of ShippingMethod available for Order."""
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata

  """Type of the shipping method."""
  type: ShippingMethodTypeEnum @deprecated(reason: "This field will be removed in Saleor 4.0.")

  """Shipping method name."""
  name: String!

  """
  Shipping method description.
  
  Rich text format. For reference see https://editorjs.io/
  """
  description: JSONString

  """Maximum delivery days for this shipping method."""
  maximumDeliveryDays: Int

  """Minimum delivery days for this shipping method."""
  minimumDeliveryDays: Int

  """Maximum order weight for this shipping method."""
  maximumOrderWeight: Weight @deprecated(reason: "This field will be removed in Saleor 4.0.")

  """Minimum order weight for this shipping method."""
  minimumOrderWeight: Weight @deprecated(reason: "This field will be removed in Saleor 4.0.")

  """Returns translated shipping method fields for the given language code."""
  translation(
    """A language code to return the translation for shipping method."""
    languageCode: LanguageCodeEnum!
  ): ShippingMethodTranslation

  """The price of selected shipping method."""
  price: Money!

  """Maximum order price for this shipping method."""
  maximumOrderPrice: Money

  """Minimal order price for this shipping method."""
  minimumOrderPrice: Money

  """Describes if this shipping method is active and can be selected."""
  active: Boolean!

  """Message connected to this shipping method."""
  message: String
}

"""Represents shipping method channel listing."""
type ShippingMethodChannelListing implements Node {
  id: ID!
  channel: Channel!
  maximumOrderPrice: Money
  minimumOrderPrice: Money
  price: Money
}

input ShippingMethodChannelListingAddInput {
  """ID of a channel."""
  channelId: ID!

  """Shipping price of the shipping method in this channel."""
  price: PositiveDecimal

  """Minimum order price to use this shipping method."""
  minimumOrderPrice: PositiveDecimal

  """Maximum order price to use this shipping method."""
  maximumOrderPrice: PositiveDecimal
}

input ShippingMethodChannelListingInput {
  """List of channels to which the shipping method should be assigned."""
  addChannels: [ShippingMethodChannelListingAddInput!]

  """List of channels from which the shipping method should be unassigned."""
  removeChannels: [ID!]
}

"""
Manage shipping method's availability in channels. 

Requires one of the following permissions: MANAGE_SHIPPING.
"""
type ShippingMethodChannelListingUpdate {
  """An updated shipping method instance."""
  shippingMethod: ShippingMethodType
  shippingErrors: [ShippingError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ShippingError!]!
}

"""Represents shipping method postal code rule."""
type ShippingMethodPostalCodeRule implements Node {
  """The ID of the object."""
  id: ID!

  """Start address range."""
  start: String

  """End address range."""
  end: String

  """Inclusion type of the postal code rule."""
  inclusionType: PostalCodeRuleInclusionTypeEnum
}

type ShippingMethodTranslatableContent implements Node {
  id: ID!
  name: String!

  """
  Description of the shipping method.
  
  Rich text format. For reference see https://editorjs.io/
  """
  description: JSONString

  """Returns translated shipping method fields for the given language code."""
  translation(
    """A language code to return the translation for shipping method."""
    languageCode: LanguageCodeEnum!
  ): ShippingMethodTranslation

  """
  Shipping method are the methods you'll use to get customer's orders  to them. They are directly exposed to the customers.
  
  Requires one of the following permissions: MANAGE_SHIPPING.
  """
  shippingMethod: ShippingMethodType @deprecated(reason: "This field will be removed in Saleor 4.0. Get model fields from the root level queries.")
}

type ShippingMethodTranslation implements Node {
  id: ID!

  """Translation language."""
  language: LanguageDisplay!
  name: String

  """
  Translated description of the shipping method.
  
  Rich text format. For reference see https://editorjs.io/
  """
  description: JSONString
}

"""
Shipping method are the methods you'll use to get customer's orders to them. They are directly exposed to the customers.
"""
type ShippingMethodType implements Node & ObjectWithMetadata {
  """Shipping method ID."""
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata

  """Shipping method name."""
  name: String!

  """
  Shipping method description.
  
  Rich text format. For reference see https://editorjs.io/
  """
  description: JSONString

  """Type of the shipping method."""
  type: ShippingMethodTypeEnum

  """Returns translated shipping method fields for the given language code."""
  translation(
    """A language code to return the translation for shipping method."""
    languageCode: LanguageCodeEnum!
  ): ShippingMethodTranslation

  """
  List of channels available for the method.
  
  Requires one of the following permissions: MANAGE_SHIPPING.
  """
  channelListings: [ShippingMethodChannelListing!]

  """The price of the cheapest variant (including discounts)."""
  maximumOrderPrice: Money

  """The price of the cheapest variant (including discounts)."""
  minimumOrderPrice: Money

  """
  Postal code ranges rule of exclusion or inclusion of the shipping method.
  """
  postalCodeRules: [ShippingMethodPostalCodeRule!]

  """
  List of excluded products for the shipping method.
  
  Requires one of the following permissions: MANAGE_SHIPPING.
  """
  excludedProducts(
    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): ProductCountableConnection

  """Minimum order weight to use this shipping method."""
  minimumOrderWeight: Weight

  """Maximum order weight to use this shipping method."""
  maximumOrderWeight: Weight

  """Maximum number of days for delivery."""
  maximumDeliveryDays: Int

  """Minimal number of days for delivery."""
  minimumDeliveryDays: Int

  """
  Tax class assigned to this shipping method.
  
  Requires one of the following permissions: MANAGE_TAXES, MANAGE_SHIPPING.
  """
  taxClass: TaxClass
}

"""An enumeration."""
enum ShippingMethodTypeEnum {
  PRICE
  WEIGHT
}

"""
List of shipping methods available for the country.

Added in Saleor 3.6.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ShippingMethodsPerCountry {
  """The country code."""
  countryCode: CountryCode!

  """List of available shipping methods."""
  shippingMethods: [ShippingMethod!]
}

input ShippingPostalCodeRulesCreateInputRange {
  """Start range of the postal code."""
  start: String!

  """End range of the postal code."""
  end: String
}

"""
Deletes shipping prices. 

Requires one of the following permissions: MANAGE_SHIPPING.
"""
type ShippingPriceBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  shippingErrors: [ShippingError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ShippingError!]!
}

"""
Creates a new shipping price. 

Requires one of the following permissions: MANAGE_SHIPPING.
"""
type ShippingPriceCreate {
  """A shipping zone to which the shipping method belongs."""
  shippingZone: ShippingZone
  shippingMethod: ShippingMethodType
  shippingErrors: [ShippingError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ShippingError!]!
}

"""
Event sent when new shipping price is created.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ShippingPriceCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The shipping method the event relates to."""
  shippingMethod(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): ShippingMethodType

  """The shipping zone the shipping method belongs to."""
  shippingZone(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): ShippingZone
}

"""
Deletes a shipping price. 

Requires one of the following permissions: MANAGE_SHIPPING.
"""
type ShippingPriceDelete {
  """A shipping method to delete."""
  shippingMethod: ShippingMethodType

  """A shipping zone to which the shipping method belongs."""
  shippingZone: ShippingZone
  shippingErrors: [ShippingError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ShippingError!]!
}

"""
Event sent when shipping price is deleted.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ShippingPriceDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The shipping method the event relates to."""
  shippingMethod(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): ShippingMethodType

  """The shipping zone the shipping method belongs to."""
  shippingZone(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): ShippingZone
}

"""
Exclude products from shipping price. 

Requires one of the following permissions: MANAGE_SHIPPING.
"""
type ShippingPriceExcludeProducts {
  """A shipping method with new list of excluded products."""
  shippingMethod: ShippingMethodType
  shippingErrors: [ShippingError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ShippingError!]!
}

input ShippingPriceExcludeProductsInput {
  """List of products which will be excluded."""
  products: [ID!]!
}

input ShippingPriceInput {
  """Name of the shipping method."""
  name: String

  """Shipping method description."""
  description: JSONString

  """Minimum order weight to use this shipping method."""
  minimumOrderWeight: WeightScalar

  """Maximum order weight to use this shipping method."""
  maximumOrderWeight: WeightScalar

  """Maximum number of days for delivery."""
  maximumDeliveryDays: Int

  """Minimal number of days for delivery."""
  minimumDeliveryDays: Int

  """Shipping type: price or weight based."""
  type: ShippingMethodTypeEnum

  """Shipping zone this method belongs to."""
  shippingZone: ID

  """Postal code rules to add."""
  addPostalCodeRules: [ShippingPostalCodeRulesCreateInputRange!]

  """Postal code rules to delete."""
  deletePostalCodeRules: [ID!]

  """Inclusion type for currently assigned postal code rules."""
  inclusionType: PostalCodeRuleInclusionTypeEnum

  """
  ID of a tax class to assign to this shipping method. If not provided, the default tax class will be used.
  """
  taxClass: ID
}

"""
Remove product from excluded list for shipping price. 

Requires one of the following permissions: MANAGE_SHIPPING.
"""
type ShippingPriceRemoveProductFromExclude {
  """A shipping method with new list of excluded products."""
  shippingMethod: ShippingMethodType
  shippingErrors: [ShippingError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ShippingError!]!
}

"""
Creates/updates translations for a shipping method. 

Requires one of the following permissions: MANAGE_TRANSLATIONS.
"""
type ShippingPriceTranslate {
  translationErrors: [TranslationError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [TranslationError!]!
  shippingMethod: ShippingMethodType
}

input ShippingPriceTranslationInput {
  name: String

  """
  Translated shipping method description.
  
  Rich text format. For reference see https://editorjs.io/
  """
  description: JSONString
}

"""
Updates a new shipping price. 

Requires one of the following permissions: MANAGE_SHIPPING.
"""
type ShippingPriceUpdate {
  """A shipping zone to which the shipping method belongs."""
  shippingZone: ShippingZone
  shippingMethod: ShippingMethodType
  shippingErrors: [ShippingError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ShippingError!]!
}

"""
Event sent when shipping price is updated.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ShippingPriceUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The shipping method the event relates to."""
  shippingMethod(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): ShippingMethodType

  """The shipping zone the shipping method belongs to."""
  shippingZone(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): ShippingZone
}

"""
Represents a shipping zone in the shop. Zones are the concept used only for grouping shipping methods in the dashboard, and are never exposed to the customers directly.
"""
type ShippingZone implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  name: String!
  default: Boolean!

  """Lowest and highest prices for the shipping."""
  priceRange: MoneyRange

  """List of countries available for the method."""
  countries: [CountryDisplay!]!

  """
  List of shipping methods available for orders shipped to countries within this shipping zone.
  """
  shippingMethods: [ShippingMethodType!]

  """List of warehouses for shipping zone."""
  warehouses: [Warehouse!]!

  """List of channels for shipping zone."""
  channels: [Channel!]!

  """Description of a shipping zone."""
  description: String
}

"""
Deletes shipping zones. 

Requires one of the following permissions: MANAGE_SHIPPING.
"""
type ShippingZoneBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  shippingErrors: [ShippingError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ShippingError!]!
}

type ShippingZoneCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [ShippingZoneCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type ShippingZoneCountableEdge {
  """The item at the end of the edge."""
  node: ShippingZone!

  """A cursor for use in pagination."""
  cursor: String!
}

"""
Creates a new shipping zone. 

Requires one of the following permissions: MANAGE_SHIPPING.
"""
type ShippingZoneCreate {
  shippingErrors: [ShippingError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ShippingError!]!
  shippingZone: ShippingZone
}

input ShippingZoneCreateInput {
  """Shipping zone's name. Visible only to the staff."""
  name: String

  """Description of the shipping zone."""
  description: String

  """List of countries in this shipping zone."""
  countries: [String!]

  """
  Default shipping zone will be used for countries not covered by other zones.
  """
  default: Boolean

  """List of warehouses to assign to a shipping zone"""
  addWarehouses: [ID!]

  """List of channels to assign to the shipping zone."""
  addChannels: [ID!]
}

"""
Event sent when new shipping zone is created.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ShippingZoneCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The shipping zone the event relates to."""
  shippingZone(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): ShippingZone
}

"""
Deletes a shipping zone. 

Requires one of the following permissions: MANAGE_SHIPPING.
"""
type ShippingZoneDelete {
  shippingErrors: [ShippingError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ShippingError!]!
  shippingZone: ShippingZone
}

"""
Event sent when shipping zone is deleted.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ShippingZoneDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The shipping zone the event relates to."""
  shippingZone(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): ShippingZone
}

input ShippingZoneFilterInput {
  search: String
  channels: [ID!]
}

"""
Event sent when shipping zone metadata is updated.

Added in Saleor 3.8.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ShippingZoneMetadataUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The shipping zone the event relates to."""
  shippingZone(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): ShippingZone
}

"""
Updates a new shipping zone. 

Requires one of the following permissions: MANAGE_SHIPPING.
"""
type ShippingZoneUpdate {
  shippingErrors: [ShippingError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ShippingError!]!
  shippingZone: ShippingZone
}

input ShippingZoneUpdateInput {
  """Shipping zone's name. Visible only to the staff."""
  name: String

  """Description of the shipping zone."""
  description: String

  """List of countries in this shipping zone."""
  countries: [String!]

  """
  Default shipping zone will be used for countries not covered by other zones.
  """
  default: Boolean

  """List of warehouses to assign to a shipping zone"""
  addWarehouses: [ID!]

  """List of channels to assign to the shipping zone."""
  addChannels: [ID!]

  """List of warehouses to unassign from a shipping zone"""
  removeWarehouses: [ID!]

  """List of channels to unassign from the shipping zone."""
  removeChannels: [ID!]
}

"""
Event sent when shipping zone is updated.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ShippingZoneUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The shipping zone the event relates to."""
  shippingZone(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): ShippingZone
}

"""
Represents a shop resource containing general shop data and configuration.
"""
type Shop {
  """List of available payment gateways."""
  availablePaymentGateways(
    """
    A currency for which gateways will be returned. 
    
    DEPRECATED: this field will be removed in Saleor 4.0. Use `channel` argument instead.
    """
    currency: String

    """Slug of a channel for which the data should be returned."""
    channel: String
  ): [PaymentGateway!]!

  """List of available external authentications."""
  availableExternalAuthentications: [ExternalAuthentication!]!

  """Shipping methods that are available for the shop."""
  availableShippingMethods(
    """Slug of a channel for which the data should be returned."""
    channel: String!

    """Address for which available shipping methods should be returned."""
    address: AddressInput
  ): [ShippingMethod!]

  """
  List of all currencies supported by shop's channels.
  
  Added in Saleor 3.1.
  
  Requires one of the following permissions: AUTHENTICATED_STAFF_USER, AUTHENTICATED_APP.
  """
  channelCurrencies: [String!]!

  """List of countries available in the shop."""
  countries(
    """
    A language code to return the translation for. 
    
    DEPRECATED: this field will be removed in Saleor 4.0.
    """
    languageCode: LanguageCodeEnum

    """Filtering options for countries"""
    filter: CountryFilterInput
  ): [CountryDisplay!]!

  """Shop's default country."""
  defaultCountry: CountryDisplay

  """
  Default shop's email sender's name.
  
  Requires one of the following permissions: MANAGE_SETTINGS.
  """
  defaultMailSenderName: String

  """
  Default shop's email sender's address.
  
  Requires one of the following permissions: MANAGE_SETTINGS.
  """
  defaultMailSenderAddress: String

  """Shop's description."""
  description: String

  """Shop's domain data."""
  domain: Domain!

  """List of the shops's supported languages."""
  languages: [LanguageDisplay!]!

  """Shop's name."""
  name: String!

  """List of available permissions."""
  permissions: [Permission!]!

  """List of possible phone prefixes."""
  phonePrefixes: [String!]!

  """Header text."""
  headerText: String

  """
  Automatically approve all new fulfillments.
  
  Added in Saleor 3.1.
  """
  fulfillmentAutoApprove: Boolean!

  """
  Allow to approve fulfillments which are unpaid.
  
  Added in Saleor 3.1.
  """
  fulfillmentAllowUnpaid: Boolean!

  """Enable inventory tracking."""
  trackInventoryByDefault: Boolean

  """Default weight unit."""
  defaultWeightUnit: WeightUnitsEnum

  """Returns translated shop fields for the given language code."""
  translation(
    """A language code to return the translation for shop."""
    languageCode: LanguageCodeEnum!
  ): ShopTranslation

  """
  Enable automatic fulfillment for all digital products.
  
  Requires one of the following permissions: MANAGE_SETTINGS.
  """
  automaticFulfillmentDigitalProducts: Boolean

  """
  Default number of minutes stock will be reserved for anonymous checkout or null when stock reservation is disabled.
  
  Added in Saleor 3.1.
  
  Requires one of the following permissions: MANAGE_SETTINGS.
  """
  reserveStockDurationAnonymousUser: Int

  """
  Default number of minutes stock will be reserved for authenticated checkout or null when stock reservation is disabled.
  
  Added in Saleor 3.1.
  
  Requires one of the following permissions: MANAGE_SETTINGS.
  """
  reserveStockDurationAuthenticatedUser: Int

  """
  Default number of maximum line quantity in single checkout (per single checkout line).
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  
  Requires one of the following permissions: MANAGE_SETTINGS.
  """
  limitQuantityPerCheckout: Int

  """
  Default number of max downloads per digital content URL.
  
  Requires one of the following permissions: MANAGE_SETTINGS.
  """
  defaultDigitalMaxDownloads: Int

  """
  Default number of days which digital content URL will be valid.
  
  Requires one of the following permissions: MANAGE_SETTINGS.
  """
  defaultDigitalUrlValidDays: Int

  """Company address."""
  companyAddress: Address

  """URL of a view where customers can set their password."""
  customerSetPasswordUrl: String

  """
  List of staff notification recipients.
  
  Requires one of the following permissions: MANAGE_SETTINGS.
  """
  staffNotificationRecipients: [StaffNotificationRecipient!]

  """
  Resource limitations and current usage if any set for a shop
  
  Requires one of the following permissions: AUTHENTICATED_STAFF_USER.
  """
  limits: LimitInfo!

  """
  Saleor API version.
  
  Requires one of the following permissions: AUTHENTICATED_STAFF_USER, AUTHENTICATED_APP.
  """
  version: String!

  """
  Minor Saleor API version.
  
  Added in Saleor 3.5.
  """
  schemaVersion: String!

  """Include taxes in prices."""
  includeTaxesInPrices: Boolean! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `Channel.taxConfiguration.pricesEnteredWithTax` to determine whether prices are entered with tax.")

  """Display prices with tax in store."""
  displayGrossPrices: Boolean! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `Channel.taxConfiguration` to determine whether to display gross or net prices.")

  """Charge taxes on shipping."""
  chargeTaxesOnShipping: Boolean! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `ShippingMethodType.taxClass` to determine whether taxes are calculated for shipping methods; if a tax class is set, the taxes will be calculated, otherwise no tax rate will be applied.")
}

"""
Update the shop's address. If the `null` value is passed, the currently selected address will be deleted. 

Requires one of the following permissions: MANAGE_SETTINGS.
"""
type ShopAddressUpdate {
  """Updated shop."""
  shop: Shop
  shopErrors: [ShopError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ShopError!]!
}

"""
Updates site domain of the shop. 

Requires one of the following permissions: MANAGE_SETTINGS.
"""
type ShopDomainUpdate {
  """Updated shop."""
  shop: Shop
  shopErrors: [ShopError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ShopError!]!
}

type ShopError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: ShopErrorCode!
}

"""An enumeration."""
enum ShopErrorCode {
  ALREADY_EXISTS
  CANNOT_FETCH_TAX_RATES
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  REQUIRED
  UNIQUE
}

"""
Fetch tax rates. 

Requires one of the following permissions: MANAGE_SETTINGS.
"""
type ShopFetchTaxRates {
  """Updated shop."""
  shop: Shop
  shopErrors: [ShopError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ShopError!]!
}

input ShopSettingsInput {
  """Header text."""
  headerText: String

  """SEO description."""
  description: String

  """Enable inventory tracking."""
  trackInventoryByDefault: Boolean

  """Default weight unit."""
  defaultWeightUnit: WeightUnitsEnum

  """Enable automatic fulfillment for all digital products."""
  automaticFulfillmentDigitalProducts: Boolean

  """
  Enable automatic approval of all new fulfillments.
  
  Added in Saleor 3.1.
  """
  fulfillmentAutoApprove: Boolean

  """
  Enable ability to approve fulfillments which are unpaid.
  
  Added in Saleor 3.1.
  """
  fulfillmentAllowUnpaid: Boolean

  """Default number of max downloads per digital content URL."""
  defaultDigitalMaxDownloads: Int

  """Default number of days which digital content URL will be valid."""
  defaultDigitalUrlValidDays: Int

  """Default email sender's name."""
  defaultMailSenderName: String

  """Default email sender's address."""
  defaultMailSenderAddress: String

  """URL of a view where customers can set their password."""
  customerSetPasswordUrl: String

  """
  Default number of minutes stock will be reserved for anonymous checkout. Enter 0 or null to disable.
  
  Added in Saleor 3.1.
  """
  reserveStockDurationAnonymousUser: Int

  """
  Default number of minutes stock will be reserved for authenticated checkout. Enter 0 or null to disable.
  
  Added in Saleor 3.1.
  """
  reserveStockDurationAuthenticatedUser: Int

  """
  Default number of maximum line quantity in single checkout. Minimum possible value is 1, default value is 50.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  limitQuantityPerCheckout: Int

  """
  Include taxes in prices. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use `taxConfigurationUpdate` mutation to configure this setting per channel or country.
  """
  includeTaxesInPrices: Boolean

  """
  Display prices with tax in store. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use `taxConfigurationUpdate` mutation to configure this setting per channel or country.
  """
  displayGrossPrices: Boolean

  """
  Charge taxes on shipping. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. To enable taxes for a shipping method, assign a tax class to the shipping method with `shippingPriceCreate` or `shippingPriceUpdate` mutations.
  """
  chargeTaxesOnShipping: Boolean
}

"""
Creates/updates translations for shop settings. 

Requires one of the following permissions: MANAGE_TRANSLATIONS.
"""
type ShopSettingsTranslate {
  """Updated shop settings."""
  shop: Shop
  translationErrors: [TranslationError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [TranslationError!]!
}

input ShopSettingsTranslationInput {
  headerText: String
  description: String
}

"""
Updates shop settings. 

Requires one of the following permissions: MANAGE_SETTINGS.
"""
type ShopSettingsUpdate {
  """Updated shop."""
  shop: Shop
  shopErrors: [ShopError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ShopError!]!
}

type ShopTranslation implements Node {
  id: ID!

  """Translation language."""
  language: LanguageDisplay!
  headerText: String!
  description: String!
}

input SiteDomainInput {
  """Domain name for shop."""
  domain: String

  """Shop site name."""
  name: String
}

"""
Deletes staff users. Apps are not allowed to perform this mutation. 

Requires one of the following permissions: MANAGE_STAFF.
"""
type StaffBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  staffErrors: [StaffError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [StaffError!]!
}

"""
Creates a new staff user. Apps are not allowed to perform this mutation. 

Requires one of the following permissions: MANAGE_STAFF.
"""
type StaffCreate {
  staffErrors: [StaffError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [StaffError!]!
  user: User
}

input StaffCreateInput {
  """Given name."""
  firstName: String

  """Family name."""
  lastName: String

  """The unique email address of the user."""
  email: String

  """User account is active."""
  isActive: Boolean

  """A note about the user."""
  note: String

  """List of permission group IDs to which user should be assigned."""
  addGroups: [ID!]

  """
  URL of a view where users should be redirected to set the password. URL in RFC 1808 format.
  """
  redirectUrl: String
}

"""
Event sent when new staff user is created.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type StaffCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The user the event relates to."""
  user: User
}

"""
Deletes a staff user. Apps are not allowed to perform this mutation. 

Requires one of the following permissions: MANAGE_STAFF.
"""
type StaffDelete {
  staffErrors: [StaffError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [StaffError!]!
  user: User
}

"""
Event sent when staff user is deleted.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type StaffDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The user the event relates to."""
  user: User
}

type StaffError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: AccountErrorCode!

  """A type of address that causes the error."""
  addressType: AddressTypeEnum

  """List of permissions which causes the error."""
  permissions: [PermissionEnum!]

  """List of permission group IDs which cause the error."""
  groups: [ID!]

  """List of user IDs which causes the error."""
  users: [ID!]
}

enum StaffMemberStatus {
  """User account has been activated."""
  ACTIVE

  """User account has not been activated yet."""
  DEACTIVATED
}

"""
Represents a recipient of email notifications send by Saleor, such as notifications about new orders. Notifications can be assigned to staff users or arbitrary email addresses.
"""
type StaffNotificationRecipient implements Node {
  id: ID!

  """Returns a user subscribed to email notifications."""
  user: User

  """Returns email address of a user subscribed to email notifications."""
  email: String

  """Determines if a notification active."""
  active: Boolean
}

"""
Creates a new staff notification recipient. 

Requires one of the following permissions: MANAGE_SETTINGS.
"""
type StaffNotificationRecipientCreate {
  shopErrors: [ShopError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ShopError!]!
  staffNotificationRecipient: StaffNotificationRecipient
}

"""
Delete staff notification recipient. 

Requires one of the following permissions: MANAGE_SETTINGS.
"""
type StaffNotificationRecipientDelete {
  shopErrors: [ShopError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ShopError!]!
  staffNotificationRecipient: StaffNotificationRecipient
}

input StaffNotificationRecipientInput {
  """The ID of the user subscribed to email notifications.."""
  user: ID

  """Email address of a user subscribed to email notifications."""
  email: String

  """Determines if a notification active."""
  active: Boolean
}

"""
Updates a staff notification recipient. 

Requires one of the following permissions: MANAGE_SETTINGS.
"""
type StaffNotificationRecipientUpdate {
  shopErrors: [ShopError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ShopError!]!
  staffNotificationRecipient: StaffNotificationRecipient
}

"""
Updates an existing staff user. Apps are not allowed to perform this mutation. 

Requires one of the following permissions: MANAGE_STAFF.
"""
type StaffUpdate {
  staffErrors: [StaffError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [StaffError!]!
  user: User
}

input StaffUpdateInput {
  """Given name."""
  firstName: String

  """Family name."""
  lastName: String

  """The unique email address of the user."""
  email: String

  """User account is active."""
  isActive: Boolean

  """A note about the user."""
  note: String

  """List of permission group IDs to which user should be assigned."""
  addGroups: [ID!]

  """List of permission group IDs from which user should be unassigned."""
  removeGroups: [ID!]
}

"""
Event sent when staff user is updated.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type StaffUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The user the event relates to."""
  user: User
}

input StaffUserInput {
  status: StaffMemberStatus
  search: String
  ids: [ID!]
}

"""Represents stock."""
type Stock implements Node {
  id: ID!
  warehouse: Warehouse!
  productVariant: ProductVariant!

  """
  Quantity of a product in the warehouse's possession, including the allocated stock that is waiting for shipment.
  
  Requires one of the following permissions: MANAGE_PRODUCTS, MANAGE_ORDERS.
  """
  quantity: Int!

  """
  Quantity allocated for orders.
  
  Requires one of the following permissions: MANAGE_PRODUCTS, MANAGE_ORDERS.
  """
  quantityAllocated: Int!

  """
  Quantity reserved for checkouts.
  
  Requires one of the following permissions: MANAGE_PRODUCTS, MANAGE_ORDERS.
  """
  quantityReserved: Int!
}

enum StockAvailability {
  IN_STOCK
  OUT_OF_STOCK
}

type StockCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [StockCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type StockCountableEdge {
  """The item at the end of the edge."""
  node: Stock!

  """A cursor for use in pagination."""
  cursor: String!
}

type StockError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: StockErrorCode!
}

"""An enumeration."""
enum StockErrorCode {
  ALREADY_EXISTS
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  REQUIRED
  UNIQUE
}

input StockFilterInput {
  quantity: Float
  search: String
}

input StockInput {
  """Warehouse in which stock is located."""
  warehouse: ID!

  """Quantity of items available for sell."""
  quantity: Int!
}

"""
Represents the channel stock settings.

Added in Saleor 3.7.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type StockSettings {
  """
  Allocation strategy defines the preference of warehouses for allocations and reservations.
  """
  allocationStrategy: AllocationStrategyEnum!
}

input StockSettingsInput {
  """
  Allocation strategy options. Strategy defines the preference of warehouses for allocations and reservations.
  """
  allocationStrategy: AllocationStrategyEnum!
}

"""Enum representing the type of a payment storage in a gateway."""
enum StorePaymentMethodEnum {
  """
  On session storage type. The payment is stored only to be reused when the customer is present in the checkout flow.
  """
  ON_SESSION

  """
  Off session storage type. The payment is stored to be reused even if the customer is absent.
  """
  OFF_SESSION

  """Storage is disabled. The payment is not stored."""
  NONE
}

type Subscription {
  """
  Look up subscription event.
  
  Added in Saleor 3.2.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  event: Event
}

enum TaxCalculationStrategy {
  FLAT_RATES
  TAX_APP
}

"""
Tax class is a named object used to define tax rates per country. Tax class can be assigned to product types, products and shipping methods to define their tax rates.

Added in Saleor 3.9.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type TaxClass implements Node & ObjectWithMetadata {
  """The ID of the object."""
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata

  """Name of the tax class."""
  name: String!

  """Country-specific tax rates for this tax class."""
  countries: [TaxClassCountryRate!]!
}

type TaxClassCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [TaxClassCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type TaxClassCountableEdge {
  """The item at the end of the edge."""
  node: TaxClass!

  """A cursor for use in pagination."""
  cursor: String!
}

"""
Tax rate for a country. When tax class is null, it represents the default tax rate for that country; otherwise it's a country tax rate specific to the given tax class.

Added in Saleor 3.9.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type TaxClassCountryRate {
  """Country in which this tax rate applies."""
  country: CountryDisplay!

  """Tax rate value."""
  rate: Float!

  """Related tax class."""
  taxClass: TaxClass
}

"""
Create a tax class.

Added in Saleor 3.9.

Note: this API is currently in Feature Preview and can be subject to changes at later point. 

Requires one of the following permissions: MANAGE_TAXES.
"""
type TaxClassCreate {
  errors: [TaxClassCreateError!]!
  taxClass: TaxClass
}

type TaxClassCreateError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: TaxClassCreateErrorCode!

  """List of country codes for which the configuration is invalid."""
  countryCodes: [String!]!
}

"""An enumeration."""
enum TaxClassCreateErrorCode {
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
}

input TaxClassCreateInput {
  """Name of the tax class."""
  name: String!

  """List of country-specific tax rates to create for this tax class."""
  createCountryRates: [CountryRateInput!]
}

"""
Delete a tax class. After deleting the tax class any products, product types or shipping methods using it are updated to use the default tax class.

Added in Saleor 3.9.

Note: this API is currently in Feature Preview and can be subject to changes at later point. 

Requires one of the following permissions: MANAGE_TAXES.
"""
type TaxClassDelete {
  errors: [TaxClassDeleteError!]!
  taxClass: TaxClass
}

type TaxClassDeleteError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: TaxClassDeleteErrorCode!
}

"""An enumeration."""
enum TaxClassDeleteErrorCode {
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
}

input TaxClassFilterInput {
  metadata: [MetadataFilter!]
  ids: [ID!]
  countries: [CountryCode!]
}

input TaxClassRateInput {
  """ID of a tax class for which to update the tax rate"""
  taxClassId: ID

  """Tax rate value."""
  rate: Float
}

enum TaxClassSortField {
  """Sort tax classes by name."""
  NAME
}

input TaxClassSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort tax classes by the selected field."""
  field: TaxClassSortField!
}

"""
Update a tax class.

Added in Saleor 3.9.

Note: this API is currently in Feature Preview and can be subject to changes at later point. 

Requires one of the following permissions: MANAGE_TAXES.
"""
type TaxClassUpdate {
  errors: [TaxClassUpdateError!]!
  taxClass: TaxClass
}

type TaxClassUpdateError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: TaxClassUpdateErrorCode!

  """List of country codes for which the configuration is invalid."""
  countryCodes: [String!]!
}

"""An enumeration."""
enum TaxClassUpdateErrorCode {
  DUPLICATED_INPUT_ITEM
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
}

input TaxClassUpdateInput {
  """Name of the tax class."""
  name: String

  """
  List of country-specific tax rates to create or update for this tax class.
  """
  updateCountryRates: [CountryRateUpdateInput!]

  """
  List of country codes for which to remove the tax class rates. Note: It removes all rates for given country code.
  """
  removeCountryRates: [CountryCode!]
}

"""
Channel-specific tax configuration.

Added in Saleor 3.9.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type TaxConfiguration implements Node & ObjectWithMetadata {
  """The ID of the object."""
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata

  """A channel to which the tax configuration applies to."""
  channel: Channel!

  """Determines whether taxes are charged in the given channel."""
  chargeTaxes: Boolean!

  """
  The default strategy to use for tax calculation in the given channel. Taxes can be calculated either using user-defined flat rates or with a tax app. Empty value means that no method is selected and taxes are not calculated.
  """
  taxCalculationStrategy: TaxCalculationStrategy

  """
  Determines whether prices displayed in a storefront should include taxes.
  """
  displayGrossPrices: Boolean!

  """Determines whether prices are entered with the tax included."""
  pricesEnteredWithTax: Boolean!

  """List of country-specific exceptions in tax configuration."""
  countries: [TaxConfigurationPerCountry!]!
}

type TaxConfigurationCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [TaxConfigurationCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type TaxConfigurationCountableEdge {
  """The item at the end of the edge."""
  node: TaxConfiguration!

  """A cursor for use in pagination."""
  cursor: String!
}

input TaxConfigurationFilterInput {
  metadata: [MetadataFilter!]
  ids: [ID!]
}

"""
Country-specific exceptions of a channel's tax configuration.

Added in Saleor 3.9.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type TaxConfigurationPerCountry {
  """Country in which this configuration applies."""
  country: CountryDisplay!

  """Determines whether taxes are charged in this country."""
  chargeTaxes: Boolean!

  """
  A country-specific strategy to use for tax calculation. Taxes can be calculated either using user-defined flat rates or with a tax app. If not provided, use the value from the channel's tax configuration.
  """
  taxCalculationStrategy: TaxCalculationStrategy

  """
  Determines whether prices displayed in a storefront should include taxes for this country.
  """
  displayGrossPrices: Boolean!
}

input TaxConfigurationPerCountryInput {
  """Country in which this configuration applies."""
  countryCode: CountryCode!

  """Determines whether taxes are charged in this country."""
  chargeTaxes: Boolean!

  """
  A country-specific strategy to use for tax calculation. Taxes can be calculated either using user-defined flat rates or with a tax app. If not provided, use the value from the channel's tax configuration.
  """
  taxCalculationStrategy: TaxCalculationStrategy

  """
  Determines whether prices displayed in a storefront should include taxes for this country.
  """
  displayGrossPrices: Boolean!
}

"""
Update tax configuration for a channel.

Added in Saleor 3.9.

Note: this API is currently in Feature Preview and can be subject to changes at later point. 

Requires one of the following permissions: MANAGE_TAXES.
"""
type TaxConfigurationUpdate {
  errors: [TaxConfigurationUpdateError!]!
  taxConfiguration: TaxConfiguration
}

type TaxConfigurationUpdateError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: TaxConfigurationUpdateErrorCode!

  """List of country codes for which the configuration is invalid."""
  countryCodes: [String!]!
}

"""An enumeration."""
enum TaxConfigurationUpdateErrorCode {
  DUPLICATED_INPUT_ITEM
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
}

input TaxConfigurationUpdateInput {
  """Determines whether taxes are charged in the given channel."""
  chargeTaxes: Boolean

  """
  The default strategy to use for tax calculation in the given channel. Taxes can be calculated either using user-defined flat rates or with a tax app. Empty value means that no method is selected and taxes are not calculated.
  """
  taxCalculationStrategy: TaxCalculationStrategy

  """
  Determines whether prices displayed in a storefront should include taxes.
  """
  displayGrossPrices: Boolean

  """Determines whether prices are entered with the tax included."""
  pricesEnteredWithTax: Boolean

  """
  List of tax country configurations to create or update (identified by a country code).
  """
  updateCountriesConfiguration: [TaxConfigurationPerCountryInput!]

  """List of country codes for which to remove the tax configuration."""
  removeCountriesConfiguration: [CountryCode!]
}

"""
Tax class rates grouped by country.

Added in Saleor 3.9.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type TaxCountryConfiguration {
  """A country for which tax class rates are grouped."""
  country: CountryDisplay!

  """List of tax class rates."""
  taxClassCountryRates: [TaxClassCountryRate!]!
}

"""
Remove all tax class rates for a specific country.

Added in Saleor 3.9.

Note: this API is currently in Feature Preview and can be subject to changes at later point. 

Requires one of the following permissions: MANAGE_TAXES.
"""
type TaxCountryConfigurationDelete {
  """Updated tax class rates grouped by a country."""
  taxCountryConfiguration: TaxCountryConfiguration
  errors: [TaxCountryConfigurationDeleteError!]!
}

type TaxCountryConfigurationDeleteError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: TaxCountryConfigurationDeleteErrorCode!
}

"""An enumeration."""
enum TaxCountryConfigurationDeleteErrorCode {
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
}

"""
Update tax class rates for a specific country.

Added in Saleor 3.9.

Note: this API is currently in Feature Preview and can be subject to changes at later point. 

Requires one of the following permissions: MANAGE_TAXES.
"""
type TaxCountryConfigurationUpdate {
  """Updated tax class rates grouped by a country."""
  taxCountryConfiguration: TaxCountryConfiguration
  errors: [TaxCountryConfigurationUpdateError!]!
}

type TaxCountryConfigurationUpdateError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: TaxCountryConfigurationUpdateErrorCode!

  """List of tax class IDs for which the update failed."""
  taxClassIds: [String!]!
}

"""An enumeration."""
enum TaxCountryConfigurationUpdateErrorCode {
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  ONLY_ONE_DEFAULT_COUNTRY_RATE_ALLOWED
  CANNOT_CREATE_NEGATIVE_RATE
}

"""
Exempt checkout or order from charging the taxes. When tax exemption is enabled, taxes won't be charged for the checkout or order. Taxes may still be calculated in cases when product prices are entered with the tax included and the net price needs to be known.

Added in Saleor 3.8.

Note: this API is currently in Feature Preview and can be subject to changes at later point. 

Requires one of the following permissions: MANAGE_TAXES.
"""
type TaxExemptionManage {
  taxableObject: TaxSourceObject
  errors: [TaxExemptionManageError!]!
}

type TaxExemptionManageError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: TaxExemptionManageErrorCode!
}

"""An enumeration."""
enum TaxExemptionManageErrorCode {
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  NOT_EDITABLE_ORDER
}

union TaxSourceLine = CheckoutLine | OrderLine

union TaxSourceObject = Checkout | Order

"""Representation of tax types fetched from tax gateway."""
type TaxType {
  """Description of the tax type."""
  description: String

  """External tax code used to identify given tax group."""
  taxCode: String
}

"""Taxable object."""
type TaxableObject {
  """The source object related to this tax object."""
  sourceObject: TaxSourceObject!

  """Determines if prices contain entered tax.."""
  pricesEnteredWithTax: Boolean!

  """The currency of the object."""
  currency: String!

  """The price of shipping method."""
  shippingPrice: Money!

  """The address data."""
  address: Address

  """List of discounts."""
  discounts: [TaxableObjectDiscount!]!

  """List of lines assigned to the object."""
  lines: [TaxableObjectLine!]!
  channel: Channel!
}

"""Taxable object discount."""
type TaxableObjectDiscount {
  """The name of the discount."""
  name: String

  """The amount of the discount."""
  amount: Money!
}

type TaxableObjectLine {
  """The source line related to this tax line."""
  sourceLine: TaxSourceLine!

  """Number of items."""
  quantity: Int!

  """Determines if taxes are being charged for the product."""
  chargeTaxes: Boolean!

  """The product name."""
  productName: String!

  """The variant name."""
  variantName: String!

  """The product sku."""
  productSku: String

  """Price of the single item in the order line."""
  unitPrice: Money!

  """Price of the order line."""
  totalPrice: Money!
}

"""
Represents a monetary value with taxes. In cases where taxes were not applied, net and gross values will be equal.
"""
type TaxedMoney {
  """Currency code."""
  currency: String!

  """Amount of money including taxes."""
  gross: Money!

  """Amount of money without taxes."""
  net: Money!

  """Amount of taxes."""
  tax: Money!
}

"""Represents a range of monetary values."""
type TaxedMoneyRange {
  """Lower bound of a price range."""
  start: TaxedMoney

  """Upper bound of a price range."""
  stop: TaxedMoney
}

"""An enumeration."""
enum ThumbnailFormatEnum {
  WEBP
}

type TimePeriod {
  """The length of the period."""
  amount: Int!

  """The type of the period."""
  type: TimePeriodTypeEnum!
}

input TimePeriodInputType {
  """The length of the period."""
  amount: Int!

  """The type of the period."""
  type: TimePeriodTypeEnum!
}

"""An enumeration."""
enum TimePeriodTypeEnum {
  DAY
  WEEK
  MONTH
  YEAR
}

"""An object representing a single payment."""
type Transaction implements Node {
  id: ID!
  created: DateTime!
  payment: Payment!
  token: String!
  kind: TransactionKind!
  isSuccess: Boolean!
  error: String
  gatewayResponse: JSONString!

  """Total amount of the transaction."""
  amount: Money
}

type TransactionAction {
  """Determines the action type."""
  actionType: TransactionActionEnum!

  """Transaction request amount. Null when action type is VOID."""
  amount: PositiveDecimal
}

"""
Represents possible actions on payment transaction.

    The following actions are possible:
    CHARGE - Represents the charge action.
    REFUND - Represents a refund action.
    VOID - Represents a void action.
    
"""
enum TransactionActionEnum {
  CHARGE
  REFUND
  VOID
}

"""
Event sent when transaction action is requested.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type TransactionActionRequest implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """
  Look up a transaction.
  
  Added in Saleor 3.4.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  transaction: TransactionItem

  """
  Requested action data.
  
  Added in Saleor 3.4.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  action: TransactionAction!
}

"""
Create transaction for checkout or order. Requires the following permissions: AUTHENTICATED_APP and HANDLE_PAYMENTS.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type TransactionCreate {
  transaction: TransactionItem
  errors: [TransactionCreateError!]!
}

type TransactionCreateError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: TransactionCreateErrorCode!
}

"""An enumeration."""
enum TransactionCreateErrorCode {
  INVALID
  GRAPHQL_ERROR
  NOT_FOUND
  INCORRECT_CURRENCY
  METADATA_KEY_REQUIRED
}

input TransactionCreateInput {
  """Status of the transaction."""
  status: String!

  """Payment type used for this transaction."""
  type: String!

  """Reference of the transaction."""
  reference: String

  """List of all possible actions for the transaction"""
  availableActions: [TransactionActionEnum!]

  """Amount authorized by this transaction."""
  amountAuthorized: MoneyInput

  """Amount charged by this transaction."""
  amountCharged: MoneyInput

  """Amount refunded by this transaction."""
  amountRefunded: MoneyInput

  """Amount voided by this transaction."""
  amountVoided: MoneyInput

  """Payment public metadata."""
  metadata: [MetadataInput!]

  """Payment private metadata."""
  privateMetadata: [MetadataInput!]
}

"""Represents transaction's event."""
type TransactionEvent implements Node {
  """The ID of the object."""
  id: ID!
  createdAt: DateTime!

  """Status of transaction's event."""
  status: TransactionStatus!

  """Reference of transaction's event."""
  reference: String!

  """Name of the transaction's event."""
  name: String
}

input TransactionEventInput {
  """Current status of the payment transaction."""
  status: TransactionStatus!

  """Reference of the transaction."""
  reference: String

  """Name of the transaction."""
  name: String
}

"""
Represents a payment transaction.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type TransactionItem implements Node & ObjectWithMetadata {
  """The ID of the object."""
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  createdAt: DateTime!
  modifiedAt: DateTime!

  """
  List of actions that can be performed in the current state of a payment.
  """
  actions: [TransactionActionEnum!]!

  """Total amount authorized for this payment."""
  authorizedAmount: Money!

  """Total amount refunded for this payment."""
  refundedAmount: Money!

  """Total amount voided for this payment."""
  voidedAmount: Money!

  """Total amount charged for this payment."""
  chargedAmount: Money!

  """Status of transaction."""
  status: String!

  """Type of transaction."""
  type: String!

  """Reference of transaction."""
  reference: String!

  """
  The related order.
  
  Added in Saleor 3.6.
  """
  order: Order

  """List of all transaction's events."""
  events: [TransactionEvent!]!
}

"""
Event sent when transaction item metadata is updated.

Added in Saleor 3.8.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type TransactionItemMetadataUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """
  Look up a transaction.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  transaction: TransactionItem
}

"""An enumeration."""
enum TransactionKind {
  EXTERNAL
  AUTH
  PENDING
  ACTION_TO_CONFIRM
  REFUND
  REFUND_ONGOING
  CAPTURE
  VOID
  CONFIRM
  CANCEL
}

"""
Request an action for payment transaction.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point. 

Requires one of the following permissions: HANDLE_PAYMENTS, MANAGE_ORDERS.
"""
type TransactionRequestAction {
  transaction: TransactionItem
  errors: [TransactionRequestActionError!]!
}

type TransactionRequestActionError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: TransactionRequestActionErrorCode!
}

"""An enumeration."""
enum TransactionRequestActionErrorCode {
  INVALID
  GRAPHQL_ERROR
  NOT_FOUND
  MISSING_TRANSACTION_ACTION_REQUEST_WEBHOOK
}

"""An enumeration."""
enum TransactionStatus {
  PENDING
  SUCCESS
  FAILURE
}

"""
Create transaction for checkout or order. Requires the following permissions: AUTHENTICATED_APP and HANDLE_PAYMENTS.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type TransactionUpdate {
  transaction: TransactionItem
  errors: [TransactionUpdateError!]!
}

type TransactionUpdateError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: TransactionUpdateErrorCode!
}

"""An enumeration."""
enum TransactionUpdateErrorCode {
  INVALID
  GRAPHQL_ERROR
  NOT_FOUND
  INCORRECT_CURRENCY
  METADATA_KEY_REQUIRED
}

input TransactionUpdateInput {
  """Status of the transaction."""
  status: String

  """Payment type used for this transaction."""
  type: String

  """Reference of the transaction."""
  reference: String

  """List of all possible actions for the transaction"""
  availableActions: [TransactionActionEnum!]

  """Amount authorized by this transaction."""
  amountAuthorized: MoneyInput

  """Amount charged by this transaction."""
  amountCharged: MoneyInput

  """Amount refunded by this transaction."""
  amountRefunded: MoneyInput

  """Amount voided by this transaction."""
  amountVoided: MoneyInput

  """Payment public metadata."""
  metadata: [MetadataInput!]

  """Payment private metadata."""
  privateMetadata: [MetadataInput!]
}

union TranslatableItem = ProductTranslatableContent | CollectionTranslatableContent | CategoryTranslatableContent | AttributeTranslatableContent | AttributeValueTranslatableContent | ProductVariantTranslatableContent | PageTranslatableContent | ShippingMethodTranslatableContent | SaleTranslatableContent | VoucherTranslatableContent | MenuItemTranslatableContent

type TranslatableItemConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [TranslatableItemEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type TranslatableItemEdge {
  """The item at the end of the edge."""
  node: TranslatableItem!

  """A cursor for use in pagination."""
  cursor: String!
}

enum TranslatableKinds {
  ATTRIBUTE
  ATTRIBUTE_VALUE
  CATEGORY
  COLLECTION
  MENU_ITEM
  PAGE
  PRODUCT
  SALE
  SHIPPING_METHOD
  VARIANT
  VOUCHER
}

"""
Event sent when new translation is created.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type TranslationCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The translation the event relates to."""
  translation: TranslationTypes
}

type TranslationError {
  """
  insert data into the table: "Workflow"
  """
  insert_Workflow(
    """the rows to be inserted"""
    objects: [Workflow_insert_input!]!

    """upsert condition"""
    on_conflict: Workflow_on_conflict
  ): Workflow_mutation_response

  """
  insert a single row into the table: "Workflow"
  """
  insert_Workflow_one(
    """the row to be inserted"""
    object: Workflow_insert_input!

    """upsert condition"""
    on_conflict: Workflow_on_conflict
  ): Workflow

  """
  insert data into the table: "_prisma_migrations"
  """
  insert__prisma_migrations(
    """the rows to be inserted"""
    objects: [_prisma_migrations_insert_input!]!

    """upsert condition"""
    on_conflict: _prisma_migrations_on_conflict
  ): _prisma_migrations_mutation_response

  """
  insert a single row into the table: "_prisma_migrations"
  """
  insert__prisma_migrations_one(
    """the row to be inserted"""
    object: _prisma_migrations_insert_input!

    """upsert condition"""
    on_conflict: _prisma_migrations_on_conflict
  ): _prisma_migrations
  login(data: LoginInputbe!): Authbe!
  refreshToken(token: JWTbe!): Tokenbe!
  signup(data: SignupInputbe!): Authbe!
  updateUser(data: UpdateUserInputbe!): Userbe!

  """
  update data of the table: "Action"
  """
  update_Action(
    """sets the columns of the filtered rows to the given values"""
    _set: Action_set_input

    """filter the rows which have to be updated"""
    where: Action_bool_exp!
  ): Action_mutation_response

  """
  update single row of the table: "Action"
  """
  update_Action_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: Action_set_input
    pk_columns: Action_pk_columns_input!
  ): Action

  """
  update multiples rows of table: "Action"
  """
  update_Action_many(
    """updates to execute, in order"""
    updates: [Action_updates!]!
  ): [Action_mutation_response]

  """
  update data of the table: "Activity"
  """
  update_Activity(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: Activity_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: Activity_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: Activity_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: Activity_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: Activity_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: Activity_set_input

    """filter the rows which have to be updated"""
    where: Activity_bool_exp!
  ): Activity_mutation_response

  """
  update single row of the table: "Activity"
  """
  update_Activity_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: Activity_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: Activity_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: Activity_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: Activity_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: Activity_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: Activity_set_input
    pk_columns: Activity_pk_columns_input!
  ): Activity

  """
  update multiples rows of table: "Activity"
  """
  update_Activity_many(
    """updates to execute, in order"""
    updates: [Activity_updates!]!
  ): [Activity_mutation_response]

  """
  update data of the table: "Comment"
  """
  update_Comment(
    """sets the columns of the filtered rows to the given values"""
    _set: Comment_set_input

    """filter the rows which have to be updated"""
    where: Comment_bool_exp!
  ): Comment_mutation_response

  """
  update single row of the table: "Comment"
  """
  update_Comment_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: Comment_set_input
    pk_columns: Comment_pk_columns_input!
  ): Comment

  """
  update multiples rows of table: "Comment"
  """
  update_Comment_many(
    """updates to execute, in order"""
    updates: [Comment_updates!]!
  ): [Comment_mutation_response]

  """
  update data of the table: "EventLog"
  """
  update_EventLog(
    """sets the columns of the filtered rows to the given values"""
    _set: EventLog_set_input

    """filter the rows which have to be updated"""
    where: EventLog_bool_exp!
  ): EventLog_mutation_response

  """
  update single row of the table: "EventLog"
  """
  update_EventLog_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: EventLog_set_input
    pk_columns: EventLog_pk_columns_input!
  ): EventLog

  """
  update multiples rows of table: "EventLog"
  """
  update_EventLog_many(
    """updates to execute, in order"""
    updates: [EventLog_updates!]!
  ): [EventLog_mutation_response]

  """
  update data of the table: "File"
  """
  update_File(
    """sets the columns of the filtered rows to the given values"""
    _set: File_set_input

    """filter the rows which have to be updated"""
    where: File_bool_exp!
  ): File_mutation_response

  """
  update single row of the table: "File"
  """
  update_File_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: File_set_input
    pk_columns: File_pk_columns_input!
  ): File

  """
  update multiples rows of table: "File"
  """
  update_File_many(
    """updates to execute, in order"""
    updates: [File_updates!]!
  ): [File_mutation_response]

  """
  update data of the table: "MemberOnTeams"
  """
  update_MemberOnTeams(
    """sets the columns of the filtered rows to the given values"""
    _set: MemberOnTeams_set_input

    """filter the rows which have to be updated"""
    where: MemberOnTeams_bool_exp!
  ): MemberOnTeams_mutation_response

  """
  update single row of the table: "MemberOnTeams"
  """
  update_MemberOnTeams_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: MemberOnTeams_set_input
    pk_columns: MemberOnTeams_pk_columns_input!
  ): MemberOnTeams

  """
  update multiples rows of table: "MemberOnTeams"
  """
  update_MemberOnTeams_many(
    """updates to execute, in order"""
    updates: [MemberOnTeams_updates!]!
  ): [MemberOnTeams_mutation_response]

  """
  update data of the table: "Organization"
  """
  update_Organization(
    """sets the columns of the filtered rows to the given values"""
    _set: Organization_set_input

    """filter the rows which have to be updated"""
    where: Organization_bool_exp!
  ): Organization_mutation_response

  """
  update single row of the table: "Organization"
  """
  update_Organization_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: Organization_set_input
    pk_columns: Organization_pk_columns_input!
  ): Organization

  """
  update multiples rows of table: "Organization"
  """
  update_Organization_many(
    """updates to execute, in order"""
    updates: [Organization_updates!]!
  ): [Organization_mutation_response]

  """
  update data of the table: "Permission"
  """
  update_Permission(
    """sets the columns of the filtered rows to the given values"""
    _set: Permission_set_input

    """filter the rows which have to be updated"""
    where: Permission_bool_exp!
  ): Permission_mutation_response

  """
  update data of the table: "PermissionGroup"
  """
  update_PermissionGroup(
    """sets the columns of the filtered rows to the given values"""
    _set: PermissionGroup_set_input

    """filter the rows which have to be updated"""
    where: PermissionGroup_bool_exp!
  ): PermissionGroup_mutation_response

  """
  update single row of the table: "PermissionGroup"
  """
  update_PermissionGroup_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: PermissionGroup_set_input
    pk_columns: PermissionGroup_pk_columns_input!
  ): PermissionGroup

  """
  update multiples rows of table: "PermissionGroup"
  """
  update_PermissionGroup_many(
    """updates to execute, in order"""
    updates: [PermissionGroup_updates!]!
  ): [PermissionGroup_mutation_response]

  """
  update single row of the table: "Permission"
  """
  update_Permission_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: Permission_set_input
    pk_columns: Permission_pk_columns_input!
  ): Permission

  """
  update multiples rows of table: "Permission"
  """
  update_Permission_many(
    """updates to execute, in order"""
    updates: [Permission_updates!]!
  ): [Permission_mutation_response]

  """
  update data of the table: "Post"
  """
  update_Post(
    """sets the columns of the filtered rows to the given values"""
    _set: Post_set_input

    """filter the rows which have to be updated"""
    where: Post_bool_exp!
  ): Post_mutation_response

  """
  update single row of the table: "Post"
  """
  update_Post_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: Post_set_input
    pk_columns: Post_pk_columns_input!
  ): Post

  """
  update multiples rows of table: "Post"
  """
  update_Post_many(
    """updates to execute, in order"""
    updates: [Post_updates!]!
  ): [Post_mutation_response]

  """
  update data of the table: "Settings"
  """
  update_Settings(
    """sets the columns of the filtered rows to the given values"""
    _set: Settings_set_input

    """filter the rows which have to be updated"""
    where: Settings_bool_exp!
  ): Settings_mutation_response

  """
  update single row of the table: "Settings"
  """
  update_Settings_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: Settings_set_input
    pk_columns: Settings_pk_columns_input!
  ): Settings

  """
  update multiples rows of table: "Settings"
  """
  update_Settings_many(
    """updates to execute, in order"""
    updates: [Settings_updates!]!
  ): [Settings_mutation_response]

  """
  update data of the table: "Task"
  """
  update_Task(
    """sets the columns of the filtered rows to the given values"""
    _set: Task_set_input

    """filter the rows which have to be updated"""
    where: Task_bool_exp!
  ): Task_mutation_response

  """
  update data of the table: "TaskDefinition"
  """
  update_TaskDefinition(
    """sets the columns of the filtered rows to the given values"""
    _set: TaskDefinition_set_input

    """filter the rows which have to be updated"""
    where: TaskDefinition_bool_exp!
  ): TaskDefinition_mutation_response

  """
  update single row of the table: "TaskDefinition"
  """
  update_TaskDefinition_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: TaskDefinition_set_input
    pk_columns: TaskDefinition_pk_columns_input!
  ): TaskDefinition

  """
  update multiples rows of table: "TaskDefinition"
  """
  update_TaskDefinition_many(
    """updates to execute, in order"""
    updates: [TaskDefinition_updates!]!
  ): [TaskDefinition_mutation_response]

  """
  update single row of the table: "Task"
  """
  update_Task_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: Task_set_input
    pk_columns: Task_pk_columns_input!
  ): Task

  """
  update multiples rows of table: "Task"
  """
  update_Task_many(
    """updates to execute, in order"""
    updates: [Task_updates!]!
  ): [Task_mutation_response]

  """
  update data of the table: "Team"
  """
  update_Team(
    """sets the columns of the filtered rows to the given values"""
    _set: Team_set_input

    """filter the rows which have to be updated"""
    where: Team_bool_exp!
  ): Team_mutation_response

  """
  update single row of the table: "Team"
  """
  update_Team_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: Team_set_input
    pk_columns: Team_pk_columns_input!
  ): Team

  """
  update multiples rows of table: "Team"
  """
  update_Team_many(
    """updates to execute, in order"""
    updates: [Team_updates!]!
  ): [Team_mutation_response]

  """
  update data of the table: "Trigger"
  """
  update_Trigger(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: Trigger_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: Trigger_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: Trigger_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: Trigger_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: Trigger_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: Trigger_set_input

    """filter the rows which have to be updated"""
    where: Trigger_bool_exp!
  ): Trigger_mutation_response

  """
  update single row of the table: "Trigger"
  """
  update_Trigger_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: Trigger_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: Trigger_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: Trigger_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: Trigger_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: Trigger_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: Trigger_set_input
    pk_columns: Trigger_pk_columns_input!
  ): Trigger

  """
  update multiples rows of table: "Trigger"
  """
  update_Trigger_many(
    """updates to execute, in order"""
    updates: [Trigger_updates!]!
  ): [Trigger_mutation_response]

  """
  update data of the table: "User"
  """
  update_User(
    """sets the columns of the filtered rows to the given values"""
    _set: User_set_input

    """filter the rows which have to be updated"""
    where: User_bool_exp!
  ): User_mutation_response

  """
  update single row of the table: "User"
  """
  update_User_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: User_set_input
    pk_columns: User_pk_columns_input!
  ): User

  """
  update multiples rows of table: "User"
  """
  update_User_many(
    """updates to execute, in order"""
    updates: [User_updates!]!
  ): [User_mutation_response]

  """
  update data of the table: "Workflow"
  """
  update_Workflow(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: Workflow_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: Workflow_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: Workflow_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: Workflow_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: Workflow_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: Workflow_set_input

    """filter the rows which have to be updated"""
    where: Workflow_bool_exp!
  ): Workflow_mutation_response

  """
  update single row of the table: "Workflow"
  """
  update_Workflow_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: Workflow_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: Workflow_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: Workflow_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: Workflow_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: Workflow_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: Workflow_set_input
    pk_columns: Workflow_pk_columns_input!
  ): Workflow

  """
  update multiples rows of table: "Workflow"
  """
  update_Workflow_many(
    """updates to execute, in order"""
    updates: [Workflow_updates!]!
  ): [Workflow_mutation_response]

  """
  update data of the table: "_prisma_migrations"
  """
  update__prisma_migrations(
    """increments the numeric columns with given value of the filtered values"""
    _inc: _prisma_migrations_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: _prisma_migrations_set_input

    """filter the rows which have to be updated"""
    where: _prisma_migrations_bool_exp!
  ): _prisma_migrations_mutation_response

  """
  update single row of the table: "_prisma_migrations"
  """
  update__prisma_migrations_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: _prisma_migrations_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: _prisma_migrations_set_input
    pk_columns: _prisma_migrations_pk_columns_input!
  ): _prisma_migrations

  """
  update multiples rows of table: "_prisma_migrations"
  """
  update__prisma_migrations_many(
    """updates to execute, in order"""
    updates: [_prisma_migrations_updates!]!
  ): [_prisma_migrations_mutation_response]
}

"""column ordering options"""
enum order_by {
  """in ascending order, nulls last"""
  asc

  """in ascending order, nulls first"""
  asc_nulls_first

  """in ascending order, nulls last"""
  asc_nulls_last

  """in descending order, nulls first"""
  desc

  """in descending order, nulls first"""
  desc_nulls_first

  """in descending order, nulls last"""
  desc_nulls_last
}

type query_root {
  """
  fetch data from the table: "Action"
  """
  Action(
    """distinct select on columns"""
    distinct_on: [Action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Action_order_by!]

    """filter the rows returned"""
    where: Action_bool_exp
  ): [Action!]!

  """
  fetch aggregated fields from the table: "Action"
  """
  Action_aggregate(
    """distinct select on columns"""
    distinct_on: [Action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Action_order_by!]

    """filter the rows returned"""
    where: Action_bool_exp
  ): Action_aggregate!

  """fetch data from the table: "Action" using primary key columns"""
  Action_by_pk(id: String!): Action

  """
  fetch data from the table: "Activity"
  """
  Activity(
    """distinct select on columns"""
    distinct_on: [Activity_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Activity_order_by!]

    """filter the rows returned"""
    where: Activity_bool_exp
  ): [Activity!]!

  """
  fetch aggregated fields from the table: "Activity"
  """
  Activity_aggregate(
    """distinct select on columns"""
    distinct_on: [Activity_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Activity_order_by!]

    """filter the rows returned"""
    where: Activity_bool_exp
  ): Activity_aggregate!

  """fetch data from the table: "Activity" using primary key columns"""
  Activity_by_pk(id: String!): Activity

  """
  fetch data from the table: "Comment"
  """
  Comment(
    """distinct select on columns"""
    distinct_on: [Comment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Comment_order_by!]

    """filter the rows returned"""
    where: Comment_bool_exp
  ): [Comment!]!

  """
  fetch aggregated fields from the table: "Comment"
  """
  Comment_aggregate(
    """distinct select on columns"""
    distinct_on: [Comment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Comment_order_by!]

    """filter the rows returned"""
    where: Comment_bool_exp
  ): Comment_aggregate!

  """fetch data from the table: "Comment" using primary key columns"""
  Comment_by_pk(id: String!): Comment

  """
  fetch data from the table: "EventLog"
  """
  EventLog(
    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): [EventLog!]!

  """
  fetch aggregated fields from the table: "EventLog"
  """
  EventLog_aggregate(
    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): EventLog_aggregate!

  """fetch data from the table: "EventLog" using primary key columns"""
  EventLog_by_pk(id: String!): EventLog

  """
  fetch data from the table: "File"
  """
  File(
    """distinct select on columns"""
    distinct_on: [File_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [File_order_by!]

    """filter the rows returned"""
    where: File_bool_exp
  ): [File!]!

  """
  fetch aggregated fields from the table: "File"
  """
  File_aggregate(
    """distinct select on columns"""
    distinct_on: [File_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [File_order_by!]

    """filter the rows returned"""
    where: File_bool_exp
  ): File_aggregate!

  """fetch data from the table: "File" using primary key columns"""
  File_by_pk(id: String!): File

  """An array relationship"""
  MemberOnTeams(
    """distinct select on columns"""
    distinct_on: [MemberOnTeams_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnTeams_order_by!]

    """filter the rows returned"""
    where: MemberOnTeams_bool_exp
  ): [MemberOnTeams!]!

  """An aggregate relationship"""
  MemberOnTeams_aggregate(
    """distinct select on columns"""
    distinct_on: [MemberOnTeams_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnTeams_order_by!]

    """filter the rows returned"""
    where: MemberOnTeams_bool_exp
  ): MemberOnTeams_aggregate!

  """fetch data from the table: "MemberOnTeams" using primary key columns"""
  MemberOnTeams_by_pk(teamId: String!, userId: String!): MemberOnTeams

  """
  fetch data from the table: "Organization"
  """
  Organization(
    """distinct select on columns"""
    distinct_on: [Organization_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Organization_order_by!]

    """filter the rows returned"""
    where: Organization_bool_exp
  ): [Organization!]!

  """
  fetch aggregated fields from the table: "Organization"
  """
  Organization_aggregate(
    """distinct select on columns"""
    distinct_on: [Organization_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Organization_order_by!]

    """filter the rows returned"""
    where: Organization_bool_exp
  ): Organization_aggregate!

  """fetch data from the table: "Organization" using primary key columns"""
  Organization_by_pk(id: String!): Organization

  """
  fetch data from the table: "Permission"
  """
  Permission(
    """distinct select on columns"""
    distinct_on: [Permission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Permission_order_by!]

    """filter the rows returned"""
    where: Permission_bool_exp
  ): [Permission!]!

  """
  fetch data from the table: "PermissionGroup"
  """
  PermissionGroup(
    """distinct select on columns"""
    distinct_on: [PermissionGroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [PermissionGroup_order_by!]

    """filter the rows returned"""
    where: PermissionGroup_bool_exp
  ): [PermissionGroup!]!

  """
  fetch aggregated fields from the table: "PermissionGroup"
  """
  PermissionGroup_aggregate(
    """distinct select on columns"""
    distinct_on: [PermissionGroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [PermissionGroup_order_by!]

    """filter the rows returned"""
    where: PermissionGroup_bool_exp
  ): PermissionGroup_aggregate!

  """fetch data from the table: "PermissionGroup" using primary key columns"""
  PermissionGroup_by_pk(id: String!): PermissionGroup

  """
  fetch aggregated fields from the table: "Permission"
  """
  Permission_aggregate(
    """distinct select on columns"""
    distinct_on: [Permission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Permission_order_by!]

    """filter the rows returned"""
    where: Permission_bool_exp
  ): Permission_aggregate!

  """fetch data from the table: "Permission" using primary key columns"""
  Permission_by_pk(id: String!): Permission

  """
  fetch data from the table: "Post"
  """
  Post(
    """distinct select on columns"""
    distinct_on: [Post_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Post_order_by!]

    """filter the rows returned"""
    where: Post_bool_exp
  ): [Post!]!

  """
  fetch aggregated fields from the table: "Post"
  """
  Post_aggregate(
    """distinct select on columns"""
    distinct_on: [Post_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Post_order_by!]

    """filter the rows returned"""
    where: Post_bool_exp
  ): Post_aggregate!

  """fetch data from the table: "Post" using primary key columns"""
  Post_by_pk(id: String!): Post

  """An array relationship"""
  Settings(
    """distinct select on columns"""
    distinct_on: [Settings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Settings_order_by!]

    """filter the rows returned"""
    where: Settings_bool_exp
  ): [Settings!]!

  """An aggregate relationship"""
  Settings_aggregate(
    """distinct select on columns"""
    distinct_on: [Settings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Settings_order_by!]

    """filter the rows returned"""
    where: Settings_bool_exp
  ): Settings_aggregate!

  """fetch data from the table: "Settings" using primary key columns"""
  Settings_by_pk(id: String!): Settings

  """
  fetch data from the table: "Task"
  """
  Task(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): [Task!]!

  """
  fetch data from the table: "TaskDefinition"
  """
  TaskDefinition(
    """distinct select on columns"""
    distinct_on: [TaskDefinition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): [TaskDefinition!]!

  """
  fetch aggregated fields from the table: "TaskDefinition"
  """
  TaskDefinition_aggregate(
    """distinct select on columns"""
    distinct_on: [TaskDefinition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): TaskDefinition_aggregate!

  """fetch data from the table: "TaskDefinition" using primary key columns"""
  TaskDefinition_by_pk(id: String!): TaskDefinition

  """
  fetch aggregated fields from the table: "Task"
  """
  Task_aggregate(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): Task_aggregate!

  """fetch data from the table: "Task" using primary key columns"""
  Task_by_pk(id: String!): Task

  """
  fetch data from the table: "Team"
  """
  Team(
    """distinct select on columns"""
    distinct_on: [Team_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Team_order_by!]

    """filter the rows returned"""
    where: Team_bool_exp
  ): [Team!]!

  """
  fetch aggregated fields from the table: "Team"
  """
  Team_aggregate(
    """distinct select on columns"""
    distinct_on: [Team_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Team_order_by!]

    """filter the rows returned"""
    where: Team_bool_exp
  ): Team_aggregate!

  """fetch data from the table: "Team" using primary key columns"""
  Team_by_pk(id: String!): Team

  """
  fetch data from the table: "Trigger"
  """
  Trigger(
    """distinct select on columns"""
    distinct_on: [Trigger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Trigger_order_by!]

    """filter the rows returned"""
    where: Trigger_bool_exp
  ): [Trigger!]!

  """
  fetch aggregated fields from the table: "Trigger"
  """
  Trigger_aggregate(
    """distinct select on columns"""
    distinct_on: [Trigger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Trigger_order_by!]

    """filter the rows returned"""
    where: Trigger_bool_exp
  ): Trigger_aggregate!

  """fetch data from the table: "Trigger" using primary key columns"""
  Trigger_by_pk(id: String!): Trigger

  """
  fetch data from the table: "User"
  """
  User(
    """distinct select on columns"""
    distinct_on: [User_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [User_order_by!]

    """filter the rows returned"""
    where: User_bool_exp
  ): [User!]!

  """
  fetch aggregated fields from the table: "User"
  """
  User_aggregate(
    """distinct select on columns"""
    distinct_on: [User_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [User_order_by!]

    """filter the rows returned"""
    where: User_bool_exp
  ): User_aggregate!

  """fetch data from the table: "User" using primary key columns"""
  User_by_pk(id: String!): User

  """
  fetch data from the table: "Workflow"
  """
  Workflow(
    """distinct select on columns"""
    distinct_on: [Workflow_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Workflow_order_by!]

    """filter the rows returned"""
    where: Workflow_bool_exp
  ): [Workflow!]!

  """
  fetch aggregated fields from the table: "Workflow"
  """
  Workflow_aggregate(
    """distinct select on columns"""
    distinct_on: [Workflow_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Workflow_order_by!]

    """filter the rows returned"""
    where: Workflow_bool_exp
  ): Workflow_aggregate!

  """fetch data from the table: "Workflow" using primary key columns"""
  Workflow_by_pk(id: String!): Workflow

  """
  fetch data from the table: "_prisma_migrations"
  """
  _prisma_migrations(
    """distinct select on columns"""
    distinct_on: [_prisma_migrations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [_prisma_migrations_order_by!]

    """filter the rows returned"""
    where: _prisma_migrations_bool_exp
  ): [_prisma_migrations!]!

  """
  fetch aggregated fields from the table: "_prisma_migrations"
  """
  _prisma_migrations_aggregate(
    """distinct select on columns"""
    distinct_on: [_prisma_migrations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [_prisma_migrations_order_by!]

    """filter the rows returned"""
    where: _prisma_migrations_bool_exp
  ): _prisma_migrations_aggregate!

  """
  fetch data from the table: "_prisma_migrations" using primary key columns
  """
  _prisma_migrations_by_pk(id: String!): _prisma_migrations
  hello(name: String!): String!
  helloWorld: String!
  me: Userbe!
  post(postId: String!): Postbe!
  publishedPosts(after: String, before: String, first: Int, last: Int, orderBy: PostOrderbe, query: String, skip: Int): PostConnectionbe!
  userPosts(userId: String!): [Postbe!]!
}

type subscription_root {
  """
  fetch data from the table: "Action"
  """
  Action(
    """distinct select on columns"""
    distinct_on: [Action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Action_order_by!]

    """filter the rows returned"""
    where: Action_bool_exp
  ): [Action!]!

  """
  fetch aggregated fields from the table: "Action"
  """
  Action_aggregate(
    """distinct select on columns"""
    distinct_on: [Action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Action_order_by!]

    """filter the rows returned"""
    where: Action_bool_exp
  ): Action_aggregate!

  """fetch data from the table: "Action" using primary key columns"""
  Action_by_pk(id: String!): Action

  """
  fetch data from the table in a streaming manner: "Action"
  """
  Action_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [Action_stream_cursor_input]!

    """filter the rows returned"""
    where: Action_bool_exp
  ): [Action!]!

  """
  fetch data from the table: "Activity"
  """
  Activity(
    """distinct select on columns"""
    distinct_on: [Activity_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Activity_order_by!]

    """filter the rows returned"""
    where: Activity_bool_exp
  ): [Activity!]!

  """
  fetch aggregated fields from the table: "Activity"
  """
  Activity_aggregate(
    """distinct select on columns"""
    distinct_on: [Activity_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Activity_order_by!]

    """filter the rows returned"""
    where: Activity_bool_exp
  ): Activity_aggregate!

  """fetch data from the table: "Activity" using primary key columns"""
  Activity_by_pk(id: String!): Activity

  """
  fetch data from the table in a streaming manner: "Activity"
  """
  Activity_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [Activity_stream_cursor_input]!

    """filter the rows returned"""
    where: Activity_bool_exp
  ): [Activity!]!

  """
  fetch data from the table: "Comment"
  """
  Comment(
    """distinct select on columns"""
    distinct_on: [Comment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Comment_order_by!]

    """filter the rows returned"""
    where: Comment_bool_exp
  ): [Comment!]!

  """
  fetch aggregated fields from the table: "Comment"
  """
  Comment_aggregate(
    """distinct select on columns"""
    distinct_on: [Comment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Comment_order_by!]

    """filter the rows returned"""
    where: Comment_bool_exp
  ): Comment_aggregate!

  """fetch data from the table: "Comment" using primary key columns"""
  Comment_by_pk(id: String!): Comment

  """
  fetch data from the table in a streaming manner: "Comment"
  """
  Comment_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [Comment_stream_cursor_input]!

    """filter the rows returned"""
    where: Comment_bool_exp
  ): [Comment!]!

  """
  fetch data from the table: "EventLog"
  """
  EventLog(
    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): [EventLog!]!

  """
  fetch aggregated fields from the table: "EventLog"
  """
  EventLog_aggregate(
    """distinct select on columns"""
    distinct_on: [EventLog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventLog_order_by!]

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): EventLog_aggregate!

  """fetch data from the table: "EventLog" using primary key columns"""
  EventLog_by_pk(id: String!): EventLog

  """
  fetch data from the table in a streaming manner: "EventLog"
  """
  EventLog_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [EventLog_stream_cursor_input]!

    """filter the rows returned"""
    where: EventLog_bool_exp
  ): [EventLog!]!

  """
  fetch data from the table: "File"
  """
  File(
    """distinct select on columns"""
    distinct_on: [File_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [File_order_by!]

    """filter the rows returned"""
    where: File_bool_exp
  ): [File!]!

  """
  fetch aggregated fields from the table: "File"
  """
  File_aggregate(
    """distinct select on columns"""
    distinct_on: [File_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [File_order_by!]

    """filter the rows returned"""
    where: File_bool_exp
  ): File_aggregate!

  """fetch data from the table: "File" using primary key columns"""
  File_by_pk(id: String!): File

  """
  fetch data from the table in a streaming manner: "File"
  """
  File_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [File_stream_cursor_input]!

    """filter the rows returned"""
    where: File_bool_exp
  ): [File!]!

  """An array relationship"""
  MemberOnTeams(
    """distinct select on columns"""
    distinct_on: [MemberOnTeams_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnTeams_order_by!]

    """filter the rows returned"""
    where: MemberOnTeams_bool_exp
  ): [MemberOnTeams!]!

  """An aggregate relationship"""
  MemberOnTeams_aggregate(
    """distinct select on columns"""
    distinct_on: [MemberOnTeams_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [MemberOnTeams_order_by!]

    """filter the rows returned"""
    where: MemberOnTeams_bool_exp
  ): MemberOnTeams_aggregate!

  """fetch data from the table: "MemberOnTeams" using primary key columns"""
  MemberOnTeams_by_pk(teamId: String!, userId: String!): MemberOnTeams

  """
  fetch data from the table in a streaming manner: "MemberOnTeams"
  """
  MemberOnTeams_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [MemberOnTeams_stream_cursor_input]!

    """filter the rows returned"""
    where: MemberOnTeams_bool_exp
  ): [MemberOnTeams!]!

  """
  fetch data from the table: "Organization"
  """
  Organization(
    """distinct select on columns"""
    distinct_on: [Organization_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Organization_order_by!]

    """filter the rows returned"""
    where: Organization_bool_exp
  ): [Organization!]!

  """
  fetch aggregated fields from the table: "Organization"
  """
  Organization_aggregate(
    """distinct select on columns"""
    distinct_on: [Organization_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Organization_order_by!]

    """filter the rows returned"""
    where: Organization_bool_exp
  ): Organization_aggregate!

  """fetch data from the table: "Organization" using primary key columns"""
  Organization_by_pk(id: String!): Organization

  """
  fetch data from the table in a streaming manner: "Organization"
  """
  Organization_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [Organization_stream_cursor_input]!

    """filter the rows returned"""
    where: Organization_bool_exp
  ): [Organization!]!

  """
  fetch data from the table: "Permission"
  """
  Permission(
    """distinct select on columns"""
    distinct_on: [Permission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Permission_order_by!]

    """filter the rows returned"""
    where: Permission_bool_exp
  ): [Permission!]!

  """
  fetch data from the table: "PermissionGroup"
  """
  PermissionGroup(
    """distinct select on columns"""
    distinct_on: [PermissionGroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [PermissionGroup_order_by!]

    """filter the rows returned"""
    where: PermissionGroup_bool_exp
  ): [PermissionGroup!]!

  """
  fetch aggregated fields from the table: "PermissionGroup"
  """
  PermissionGroup_aggregate(
    """distinct select on columns"""
    distinct_on: [PermissionGroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [PermissionGroup_order_by!]

    """filter the rows returned"""
    where: PermissionGroup_bool_exp
  ): PermissionGroup_aggregate!

  """fetch data from the table: "PermissionGroup" using primary key columns"""
  PermissionGroup_by_pk(id: String!): PermissionGroup

  """
  fetch data from the table in a streaming manner: "PermissionGroup"
  """
  PermissionGroup_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [PermissionGroup_stream_cursor_input]!

    """filter the rows returned"""
    where: PermissionGroup_bool_exp
  ): [PermissionGroup!]!

  """
  fetch aggregated fields from the table: "Permission"
  """
  Permission_aggregate(
    """distinct select on columns"""
    distinct_on: [Permission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Permission_order_by!]

    """filter the rows returned"""
    where: Permission_bool_exp
  ): Permission_aggregate!

  """fetch data from the table: "Permission" using primary key columns"""
  Permission_by_pk(id: String!): Permission

  """
  fetch data from the table in a streaming manner: "Permission"
  """
  Permission_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [Permission_stream_cursor_input]!

    """filter the rows returned"""
    where: Permission_bool_exp
  ): [Permission!]!

  """
  fetch data from the table: "Post"
  """
  Post(
    """distinct select on columns"""
    distinct_on: [Post_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Post_order_by!]

    """filter the rows returned"""
    where: Post_bool_exp
  ): [Post!]!

  """
  fetch aggregated fields from the table: "Post"
  """
  Post_aggregate(
    """distinct select on columns"""
    distinct_on: [Post_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Post_order_by!]

    """filter the rows returned"""
    where: Post_bool_exp
  ): Post_aggregate!

  """fetch data from the table: "Post" using primary key columns"""
  Post_by_pk(id: String!): Post

  """
  fetch data from the table in a streaming manner: "Post"
  """
  Post_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [Post_stream_cursor_input]!

    """filter the rows returned"""
    where: Post_bool_exp
  ): [Post!]!

  """An array relationship"""
  Settings(
    """distinct select on columns"""
    distinct_on: [Settings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Settings_order_by!]

    """filter the rows returned"""
    where: Settings_bool_exp
  ): [Settings!]!

  """An aggregate relationship"""
  Settings_aggregate(
    """distinct select on columns"""
    distinct_on: [Settings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Settings_order_by!]

    """filter the rows returned"""
    where: Settings_bool_exp
  ): Settings_aggregate!

  """fetch data from the table: "Settings" using primary key columns"""
  Settings_by_pk(id: String!): Settings

  """
  fetch data from the table in a streaming manner: "Settings"
  """
  Settings_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [Settings_stream_cursor_input]!

    """filter the rows returned"""
    where: Settings_bool_exp
  ): [Settings!]!

  """
  fetch data from the table: "Task"
  """
  Task(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): [Task!]!

  """
  fetch data from the table: "TaskDefinition"
  """
  TaskDefinition(
    """distinct select on columns"""
    distinct_on: [TaskDefinition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): [TaskDefinition!]!

  """
  fetch aggregated fields from the table: "TaskDefinition"
  """
  TaskDefinition_aggregate(
    """distinct select on columns"""
    distinct_on: [TaskDefinition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [TaskDefinition_order_by!]

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): TaskDefinition_aggregate!

  """fetch data from the table: "TaskDefinition" using primary key columns"""
  TaskDefinition_by_pk(id: String!): TaskDefinition

  """
  fetch data from the table in a streaming manner: "TaskDefinition"
  """
  TaskDefinition_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [TaskDefinition_stream_cursor_input]!

    """filter the rows returned"""
    where: TaskDefinition_bool_exp
  ): [TaskDefinition!]!

  """
  fetch aggregated fields from the table: "Task"
  """
  Task_aggregate(
    """distinct select on columns"""
    distinct_on: [Task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Task_order_by!]

    """filter the rows returned"""
    where: Task_bool_exp
  ): Task_aggregate!

  """fetch data from the table: "Task" using primary key columns"""
  Task_by_pk(id: String!): Task

  """
  fetch data from the table in a streaming manner: "Task"
  """
  Task_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [Task_stream_cursor_input]!

    """filter the rows returned"""
    where: Task_bool_exp
  ): [Task!]!

  """
  fetch data from the table: "Team"
  """
  Team(
    """distinct select on columns"""
    distinct_on: [Team_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Team_order_by!]

    """filter the rows returned"""
    where: Team_bool_exp
  ): [Team!]!

  """
  fetch aggregated fields from the table: "Team"
  """
  Team_aggregate(
    """distinct select on columns"""
    distinct_on: [Team_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Team_order_by!]

    """filter the rows returned"""
    where: Team_bool_exp
  ): Team_aggregate!

  """fetch data from the table: "Team" using primary key columns"""
  Team_by_pk(id: String!): Team

  """
  fetch data from the table in a streaming manner: "Team"
  """
  Team_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [Team_stream_cursor_input]!

    """filter the rows returned"""
    where: Team_bool_exp
  ): [Team!]!

  """
  fetch data from the table: "Trigger"
  """
  Trigger(
    """distinct select on columns"""
    distinct_on: [Trigger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Trigger_order_by!]

    """filter the rows returned"""
    where: Trigger_bool_exp
  ): [Trigger!]!

  """
  fetch aggregated fields from the table: "Trigger"
  """
  Trigger_aggregate(
    """distinct select on columns"""
    distinct_on: [Trigger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Trigger_order_by!]

    """filter the rows returned"""
    where: Trigger_bool_exp
  ): Trigger_aggregate!

  """fetch data from the table: "Trigger" using primary key columns"""
  Trigger_by_pk(id: String!): Trigger

  """
  fetch data from the table in a streaming manner: "Trigger"
  """
  Trigger_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [Trigger_stream_cursor_input]!

    """filter the rows returned"""
    where: Trigger_bool_exp
  ): [Trigger!]!

  """
  fetch data from the table: "User"
  """
  User(
    """distinct select on columns"""
    distinct_on: [User_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [User_order_by!]

    """filter the rows returned"""
    where: User_bool_exp
  ): [User!]!

  """
  fetch aggregated fields from the table: "User"
  """
  User_aggregate(
    """distinct select on columns"""
    distinct_on: [User_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [User_order_by!]

    """filter the rows returned"""
    where: User_bool_exp
  ): User_aggregate!

  """fetch data from the table: "User" using primary key columns"""
  User_by_pk(id: String!): User

  """
  fetch data from the table in a streaming manner: "User"
  """
  User_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [User_stream_cursor_input]!

    """filter the rows returned"""
    where: User_bool_exp
  ): [User!]!

  """
  fetch data from the table: "Workflow"
  """
  Workflow(
    """distinct select on columns"""
    distinct_on: [Workflow_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Workflow_order_by!]

    """filter the rows returned"""
    where: Workflow_bool_exp
  ): [Workflow!]!

  """
  fetch aggregated fields from the table: "Workflow"
  """
  Workflow_aggregate(
    """distinct select on columns"""
    distinct_on: [Workflow_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Workflow_order_by!]

    """filter the rows returned"""
    where: Workflow_bool_exp
  ): Workflow_aggregate!

  """fetch data from the table: "Workflow" using primary key columns"""
  Workflow_by_pk(id: String!): Workflow

  """
  fetch data from the table in a streaming manner: "Workflow"
  """
  Workflow_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [Workflow_stream_cursor_input]!

    """filter the rows returned"""
    where: Workflow_bool_exp
  ): [Workflow!]!

  """
  fetch data from the table: "_prisma_migrations"
  """
  _prisma_migrations(
    """distinct select on columns"""
    distinct_on: [_prisma_migrations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [_prisma_migrations_order_by!]

    """filter the rows returned"""
    where: _prisma_migrations_bool_exp
  ): [_prisma_migrations!]!

  """
  fetch aggregated fields from the table: "_prisma_migrations"
  """
  _prisma_migrations_aggregate(
    """distinct select on columns"""
    distinct_on: [_prisma_migrations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [_prisma_migrations_order_by!]

    """filter the rows returned"""
    where: _prisma_migrations_bool_exp
  ): _prisma_migrations_aggregate!

  """
  fetch data from the table: "_prisma_migrations" using primary key columns
  """
  _prisma_migrations_by_pk(id: String!): _prisma_migrations

  """
  fetch data from the table in a streaming manner: "_prisma_migrations"
  """
  _prisma_migrations_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [_prisma_migrations_stream_cursor_input]!

    """filter the rows returned"""
    where: _prisma_migrations_bool_exp
  ): [_prisma_migrations!]!
  postCreated: Postbe!
}

scalar timestamp

"""
Boolean expression to compare columns of type "timestamp". All fields are combined with logical 'AND'.
"""
input timestamp_comparison_exp {
  _eq: timestamp
  _gt: timestamp
  _gte: timestamp
  _in: [timestamp!]
  _is_null: Boolean
  _lt: timestamp
  _lte: timestamp
  _neq: timestamp
  _nin: [timestamp!]
}

scalar timestamptz

"""
Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'.
"""
type UserAvatarUpdate {
  """An updated user instance."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""
Activate or deactivate users. 

Requires one of the following permissions: MANAGE_USERS.
"""
type UserBulkSetActive {
  """Returns how many objects were affected."""
  count: Int!
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

type UserCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [UserCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type UserCountableEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

input UserCreateInput {
  """Billing address of the customer."""
  defaultBillingAddress: AddressInput

  """Shipping address of the customer."""
  defaultShippingAddress: AddressInput

  """Given name."""
  firstName: String

  """Family name."""
  lastName: String

  """The unique email address of the user."""
  email: String

  """User account is active."""
  isActive: Boolean

  """A note about the user."""
  note: String

  """User language code."""
  languageCode: LanguageCodeEnum

  """
  URL of a view where users should be redirected to set the password. URL in RFC 1808 format.
  """
  redirectUrl: String

  """
  Slug of a channel which will be used for notify user. Optional when only one channel exists.
  """
  channel: String
}

type UserPermission {
  """Internal code for permission."""
  code: PermissionEnum!

  """Describe action(s) allowed to do by permission."""
  name: String!

  """List of user permission groups which contains this permission."""
  sourcePermissionGroups(
    """ID of user whose groups should be returned."""
    userId: ID!
  ): [Group!]
}

enum UserSortField {
  """Sort users by first name."""
  FIRST_NAME

  """Sort users by last name."""
  LAST_NAME

  """Sort users by email."""
  EMAIL

  """Sort users by order count."""
  ORDER_COUNT

  """Sort users by created at."""
  CREATED_AT

  """Sort users by last modified at."""
  LAST_MODIFIED_AT
}

input UserSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort users by the selected field."""
  field: UserSortField!
}

"""Represents a VAT rate for a country."""
type VAT {
  """Country code."""
  countryCode: String!

  """Standard VAT rate in percent."""
  standardRate: Float

  """Country's VAT rate exceptions for specific types of goods."""
  reducedRates: [ReducedRate!]!
}

enum VariantAttributeScope {
  ALL
  VARIANT_SELECTION
  NOT_VARIANT_SELECTION
}

"""
Assign an media to a product variant. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type VariantMediaAssign {
  productVariant: ProductVariant
  media: ProductMedia
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
}

"""
Unassign an media from a product variant. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type VariantMediaUnassign {
  productVariant: ProductVariant
  media: ProductMedia
  productErrors: [ProductError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ProductError!]!
}

"""Represents availability of a variant in the storefront."""
type VariantPricingInfo {
  """Whether it is in sale or not."""
  onSale: Boolean

  """The discount amount if in sale (null otherwise)."""
  discount: TaxedMoney

  """The discount amount in the local currency."""
  discountLocalCurrency: TaxedMoney

  """The price, with any discount subtracted."""
  price: TaxedMoney

  """The price without any discount."""
  priceUndiscounted: TaxedMoney

  """The discounted price in the local currency."""
  priceLocalCurrency: TaxedMoney
}

"""Verify JWT token."""
type VerifyToken {
  """User assigned to token."""
  user: User

  """Determine if token is valid or not."""
  isValid: Boolean!

  """JWT payload."""
  payload: GenericScalar
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""An enumeration."""
enum VolumeUnitsEnum {
  CUBIC_MILLIMETER
  CUBIC_CENTIMETER
  CUBIC_DECIMETER
  CUBIC_METER
  LITER
  CUBIC_FOOT
  CUBIC_INCH
  CUBIC_YARD
  QT
  PINT
  FL_OZ
  ACRE_IN
  ACRE_FT
}

"""
Vouchers allow giving discounts to particular customers on categories, collections or specific products. They can be used during checkout by providing valid voucher codes.
"""
type Voucher implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  name: String
  code: String!
  usageLimit: Int
  used: Int!
  startDate: DateTime!
  endDate: DateTime
  applyOncePerOrder: Boolean!
  applyOncePerCustomer: Boolean!
  onlyForStaff: Boolean!
  minCheckoutItemsQuantity: Int

  """List of categories this voucher applies to."""
  categories(
    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): CategoryCountableConnection

  """
  List of collections this voucher applies to.
  
  Requires one of the following permissions: MANAGE_DISCOUNTS.
  """
  collections(
    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): CollectionCountableConnection

  """
  List of products this voucher applies to.
  
  Requires one of the following permissions: MANAGE_DISCOUNTS.
  """
  products(
    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): ProductCountableConnection

  """
  List of product variants this voucher applies to.
  
  Added in Saleor 3.1.
  
  Requires one of the following permissions: MANAGE_DISCOUNTS.
  """
  variants(
    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): ProductVariantCountableConnection

  """List of countries available for the shipping voucher."""
  countries: [CountryDisplay!]

  """Returns translated voucher fields for the given language code."""
  translation(
    """A language code to return the translation for voucher."""
    languageCode: LanguageCodeEnum!
  ): VoucherTranslation

  """Determines a type of discount for voucher - value or percentage"""
  discountValueType: DiscountValueTypeEnum!

  """Voucher value."""
  discountValue: Float

  """Currency code for voucher."""
  currency: String

  """Minimum order value to apply voucher."""
  minSpent: Money

  """Determines a type of voucher."""
  type: VoucherTypeEnum!

  """
  List of availability in channels for the voucher.
  
  Requires one of the following permissions: MANAGE_DISCOUNTS.
  """
  channelListings: [VoucherChannelListing!]
}

"""
Adds products, categories, collections to a voucher. 

Requires one of the following permissions: MANAGE_DISCOUNTS.
"""
type VoucherAddCatalogues {
  """Voucher of which catalogue IDs will be modified."""
  voucher: Voucher
  discountErrors: [DiscountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [DiscountError!]!
}

"""
Deletes vouchers. 

Requires one of the following permissions: MANAGE_DISCOUNTS.
"""
type VoucherBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  discountErrors: [DiscountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [DiscountError!]!
}

"""Represents voucher channel listing."""
type VoucherChannelListing implements Node {
  id: ID!
  channel: Channel!
  discountValue: Float!
  currency: String!
  minSpent: Money
}

input VoucherChannelListingAddInput {
  """ID of a channel."""
  channelId: ID!

  """Value of the voucher."""
  discountValue: PositiveDecimal

  """Min purchase amount required to apply the voucher."""
  minAmountSpent: PositiveDecimal
}

input VoucherChannelListingInput {
  """List of channels to which the voucher should be assigned."""
  addChannels: [VoucherChannelListingAddInput!]

  """List of channels from which the voucher should be unassigned."""
  removeChannels: [ID!]
}

"""
Manage voucher's availability in channels. 

Requires one of the following permissions: MANAGE_DISCOUNTS.
"""
type VoucherChannelListingUpdate {
  """An updated voucher instance."""
  voucher: Voucher
  discountErrors: [DiscountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [DiscountError!]!
}

type VoucherCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [VoucherCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type VoucherCountableEdge {
  """The item at the end of the edge."""
  node: Voucher!

  """A cursor for use in pagination."""
  cursor: String!
}

"""
Creates a new voucher. 

Requires one of the following permissions: MANAGE_DISCOUNTS.
"""
type VoucherCreate {
  discountErrors: [DiscountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [DiscountError!]!
  voucher: Voucher
}

"""
Event sent when new voucher is created.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type VoucherCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The voucher the event relates to."""
  voucher(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): Voucher
}

"""
Deletes a voucher. 

Requires one of the following permissions: MANAGE_DISCOUNTS.
"""
type VoucherDelete {
  discountErrors: [DiscountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [DiscountError!]!
  voucher: Voucher
}

"""
Event sent when voucher is deleted.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type VoucherDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The voucher the event relates to."""
  voucher(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): Voucher
}

enum VoucherDiscountType {
  FIXED
  PERCENTAGE
  SHIPPING
}

input VoucherFilterInput {
  status: [DiscountStatusEnum!]
  timesUsed: IntRangeInput
  discountType: [VoucherDiscountType!]
  started: DateTimeRangeInput
  search: String
  metadata: [MetadataFilter!]
  ids: [ID!]
}

input VoucherInput {
  """Voucher type: PRODUCT, CATEGORY SHIPPING or ENTIRE_ORDER."""
  type: VoucherTypeEnum

  """Voucher name."""
  name: String

  """Code to use the voucher."""
  code: String

  """Start date of the voucher in ISO 8601 format."""
  startDate: DateTime

  """End date of the voucher in ISO 8601 format."""
  endDate: DateTime

  """Choices: fixed or percentage."""
  discountValueType: DiscountValueTypeEnum

  """Products discounted by the voucher."""
  products: [ID!]

  """
  Variants discounted by the voucher.
  
  Added in Saleor 3.1.
  """
  variants: [ID!]

  """Collections discounted by the voucher."""
  collections: [ID!]

  """Categories discounted by the voucher."""
  categories: [ID!]

  """Minimal quantity of checkout items required to apply the voucher."""
  minCheckoutItemsQuantity: Int

  """Country codes that can be used with the shipping voucher."""
  countries: [String!]

  """Voucher should be applied to the cheapest item or entire order."""
  applyOncePerOrder: Boolean

  """Voucher should be applied once per customer."""
  applyOncePerCustomer: Boolean

  """Voucher can be used only by staff user."""
  onlyForStaff: Boolean

  """Limit number of times this voucher can be used in total."""
  usageLimit: Int
}

"""
Event sent when voucher metadata is updated.

Added in Saleor 3.8.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type VoucherMetadataUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The voucher the event relates to."""
  voucher(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): Voucher
}

"""
Removes products, categories, collections from a voucher. 

Requires one of the following permissions: MANAGE_DISCOUNTS.
"""
type VoucherRemoveCatalogues {
  """Voucher of which catalogue IDs will be modified."""
  voucher: Voucher
  discountErrors: [DiscountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [DiscountError!]!
}

enum VoucherSortField {
  """Sort vouchers by code."""
  CODE

  """Sort vouchers by start date."""
  START_DATE

  """Sort vouchers by end date."""
  END_DATE

  """
  Sort vouchers by value.
  
  This option requires a channel filter to work as the values can vary between channels.
  """
  VALUE

  """Sort vouchers by type."""
  TYPE

  """Sort vouchers by usage limit."""
  USAGE_LIMIT

  """
  Sort vouchers by minimum spent amount.
  
  This option requires a channel filter to work as the values can vary between channels.
  """
  MINIMUM_SPENT_AMOUNT
}

input VoucherSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """
  Specifies the channel in which to sort the data.
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use root-level channel argument instead.
  """
  channel: String

  """Sort vouchers by the selected field."""
  field: VoucherSortField!
}

type VoucherTranslatableContent implements Node {
  id: ID!
  name: String

  """Returns translated voucher fields for the given language code."""
  translation(
    """A language code to return the translation for voucher."""
    languageCode: LanguageCodeEnum!
  ): VoucherTranslation

  """
  Vouchers allow giving discounts to particular customers on categories, collections or specific products. They can be used during checkout by providing valid voucher codes.
  
  Requires one of the following permissions: MANAGE_DISCOUNTS.
  """
  voucher: Voucher @deprecated(reason: "This field will be removed in Saleor 4.0. Get model fields from the root level queries.")
}

"""
Creates/updates translations for a voucher. 

Requires one of the following permissions: MANAGE_TRANSLATIONS.
"""
type VoucherTranslate {
  translationErrors: [TranslationError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [TranslationError!]!
  voucher: Voucher
}

type VoucherTranslation implements Node {
  id: ID!

  """Translation language."""
  language: LanguageDisplay!
  name: String
}

enum VoucherTypeEnum {
  SHIPPING
  ENTIRE_ORDER
  SPECIFIC_PRODUCT
}

"""
Updates a voucher. 

Requires one of the following permissions: MANAGE_DISCOUNTS.
"""
type VoucherUpdate {
  discountErrors: [DiscountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [DiscountError!]!
  voucher: Voucher
}

"""
Event sent when voucher is updated.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type VoucherUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The voucher the event relates to."""
  voucher(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): Voucher
}

"""Represents warehouse."""
type Warehouse implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  name: String!
  slug: String!
  email: String!
  isPrivate: Boolean!
  address: Address!

  """Warehouse company name."""
  companyName: String! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `Address.companyName` instead.")

  """
  Click and collect options: local, all or disabled.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  clickAndCollectOption: WarehouseClickAndCollectOptionEnum!
  shippingZones(
    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): ShippingZoneCountableConnection!
}

"""An enumeration."""
enum WarehouseClickAndCollectOptionEnum {
  DISABLED
  LOCAL
  ALL
}

type WarehouseCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [WarehouseCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type WarehouseCountableEdge {
  """The item at the end of the edge."""
  node: Warehouse!

  """A cursor for use in pagination."""
  cursor: String!
}

"""
Creates new warehouse. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type WarehouseCreate {
  warehouseErrors: [WarehouseError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [WarehouseError!]!
  warehouse: Warehouse
}

input WarehouseCreateInput {
  """Warehouse slug."""
  slug: String

  """The email address of the warehouse."""
  email: String

  """Warehouse name."""
  name: String!

  """Address of the warehouse."""
  address: AddressInput!

  """
  Shipping zones supported by the warehouse.
  
  DEPRECATED: this field will be removed in Saleor 4.0. Providing the zone ids will raise a ValidationError.
  """
  shippingZones: [ID!]
}

"""
Event sent when new warehouse is created.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type WarehouseCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The warehouse the event relates to."""
  warehouse: Warehouse
}

"""
Deletes selected warehouse. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type WarehouseDelete {
  warehouseErrors: [WarehouseError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [WarehouseError!]!
  warehouse: Warehouse
}

"""
Event sent when warehouse is deleted.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type WarehouseDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The warehouse the event relates to."""
  warehouse: Warehouse
}

type WarehouseError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: WarehouseErrorCode!

  """List of shipping zones IDs which causes the error."""
  shippingZones: [ID!]
}

"""An enumeration."""
enum WarehouseErrorCode {
  ALREADY_EXISTS
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  REQUIRED
  UNIQUE
}

input WarehouseFilterInput {
  clickAndCollectOption: WarehouseClickAndCollectOptionEnum
  search: String
  ids: [ID!]
  isPrivate: Boolean
  channels: [ID!]
  slugs: [String!]
}

"""
Event sent when warehouse metadata is updated.

Added in Saleor 3.8.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type WarehouseMetadataUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The warehouse the event relates to."""
  warehouse: Warehouse
}

"""
Add shipping zone to given warehouse. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type WarehouseShippingZoneAssign {
  warehouseErrors: [WarehouseError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [WarehouseError!]!
  warehouse: Warehouse
}

"""
Remove shipping zone from given warehouse. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type WarehouseShippingZoneUnassign {
  warehouseErrors: [WarehouseError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [WarehouseError!]!
  warehouse: Warehouse
}

enum WarehouseSortField {
  """Sort warehouses by name."""
  NAME
}

input WarehouseSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort warehouses by the selected field."""
  field: WarehouseSortField!
}

"""
Updates given warehouse. 

Requires one of the following permissions: MANAGE_PRODUCTS.
"""
type WarehouseUpdate {
  warehouseErrors: [WarehouseError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [WarehouseError!]!
  warehouse: Warehouse
}

input WarehouseUpdateInput {
  """Warehouse slug."""
  slug: String

  """The email address of the warehouse."""
  email: String

  """Warehouse name."""
  name: String

  """Address of the warehouse."""
  address: AddressInput

  """
  Click and collect options: local, all or disabled.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  clickAndCollectOption: WarehouseClickAndCollectOptionEnum

  """
  Visibility of warehouse stocks.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  isPrivate: Boolean
}

"""
Event sent when warehouse is updated.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type WarehouseUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The warehouse the event relates to."""
  warehouse: Warehouse
}

"""Webhook."""
type Webhook implements Node {
  id: ID!
  name: String!

  """List of webhook events."""
  events: [WebhookEvent!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `asyncEvents` or `syncEvents` instead.")

  """List of synchronous webhook events."""
  syncEvents: [WebhookEventSync!]!

  """List of asynchronous webhook events."""
  asyncEvents: [WebhookEventAsync!]!
  app: App!

  """Event deliveries."""
  eventDeliveries(
    """Event delivery sorter."""
    sortBy: EventDeliverySortingInput

    """Event delivery filter options."""
    filter: EventDeliveryFilterInput

    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): EventDeliveryCountableConnection

  """Target URL for webhook."""
  targetUrl: String!

  """Informs if webhook is activated."""
  isActive: Boolean!

  """Used to create a hash signature for each payload."""
  secretKey: String @deprecated(reason: "This field will be removed in Saleor 4.0. As of Saleor 3.5, webhook payloads default to signing using a verifiable JWS.")

  """Used to define payloads for specific events."""
  subscriptionQuery: String
}

"""
Creates a new webhook subscription. 

Requires one of the following permissions: MANAGE_APPS, AUTHENTICATED_APP.
"""
type WebhookCreate {
  webhookErrors: [WebhookError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [WebhookError!]!
  webhook: Webhook
}

input WebhookCreateInput {
  """The name of the webhook."""
  name: String

  """The url to receive the payload."""
  targetUrl: String

  """
  The events that webhook wants to subscribe. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use `asyncEvents` or `syncEvents` instead.
  """
  events: [WebhookEventTypeEnum!]

  """The asynchronous events that webhook wants to subscribe."""
  asyncEvents: [WebhookEventTypeAsyncEnum!]

  """The synchronous events that webhook wants to subscribe."""
  syncEvents: [WebhookEventTypeSyncEnum!]

  """ID of the app to which webhook belongs."""
  app: ID

  """Determine if webhook will be set active or not."""
  isActive: Boolean

  """
  The secret key used to create a hash signature with each payload.
  
  DEPRECATED: this field will be removed in Saleor 4.0. As of Saleor 3.5, webhook payloads default to signing using a verifiable JWS.
  """
  secretKey: String

  """
  Subscription query used to define a webhook payload.
  
  Added in Saleor 3.2.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  query: String
}

"""
Deletes a webhook subscription. 

Requires one of the following permissions: MANAGE_APPS, AUTHENTICATED_APP.
"""
type WebhookDelete {
  webhookErrors: [WebhookError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [WebhookError!]!
  webhook: Webhook
}

type WebhookError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: WebhookErrorCode!
}

"""An enumeration."""
enum WebhookErrorCode {
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  REQUIRED
  UNIQUE
}

"""Webhook event."""
type WebhookEvent {
  """Display name of the event."""
  name: String!

  """Internal name of the event type."""
  eventType: WebhookEventTypeEnum!
}

"""Asynchronous webhook event."""
type WebhookEventAsync {
  """Display name of the event."""
  name: String!

  """Internal name of the event type."""
  eventType: WebhookEventTypeAsyncEnum!
}

"""Synchronous webhook event."""
type WebhookEventSync {
  """Display name of the event."""
  name: String!

  """Internal name of the event type."""
  eventType: WebhookEventTypeSyncEnum!
}

"""Enum determining type of webhook."""
enum WebhookEventTypeAsyncEnum {
  """All the events."""
  ANY_EVENTS

  """A new address created."""
  ADDRESS_CREATED

  """An address updated."""
  ADDRESS_UPDATED

  """An address deleted."""
  ADDRESS_DELETED

  """A new app installed."""
  APP_INSTALLED

  """An app updated."""
  APP_UPDATED

  """An app deleted."""
  APP_DELETED

  """An app status is changed."""
  APP_STATUS_CHANGED

  """A new attribute is created."""
  ATTRIBUTE_CREATED

  """An attribute is updated."""
  ATTRIBUTE_UPDATED

  """An attribute is deleted."""
  ATTRIBUTE_DELETED

  """A new attribute value is created."""
  ATTRIBUTE_VALUE_CREATED

  """An attribute value is updated."""
  ATTRIBUTE_VALUE_UPDATED

  """An attribute value is deleted."""
  ATTRIBUTE_VALUE_DELETED

  """A new category created."""
  CATEGORY_CREATED

  """A category is updated."""
  CATEGORY_UPDATED

  """A category is deleted."""
  CATEGORY_DELETED

  """A new channel created."""
  CHANNEL_CREATED

  """A channel is updated."""
  CHANNEL_UPDATED

  """A channel is deleted."""
  CHANNEL_DELETED

  """A channel status is changed."""
  CHANNEL_STATUS_CHANGED

  """A new gift card created."""
  GIFT_CARD_CREATED

  """A gift card is updated."""
  GIFT_CARD_UPDATED

  """A gift card is deleted."""
  GIFT_CARD_DELETED

  """A gift card status is changed."""
  GIFT_CARD_STATUS_CHANGED

  """
  A gift card metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  GIFT_CARD_METADATA_UPDATED

  """A new menu created."""
  MENU_CREATED

  """A menu is updated."""
  MENU_UPDATED

  """A menu is deleted."""
  MENU_DELETED

  """A new menu item created."""
  MENU_ITEM_CREATED

  """A menu item is updated."""
  MENU_ITEM_UPDATED

  """A menu item is deleted."""
  MENU_ITEM_DELETED

  """A new order is placed."""
  ORDER_CREATED

  """
  An order is confirmed (status change unconfirmed -> unfulfilled) by a staff user using the OrderConfirm mutation. It also triggers when the user completes the checkout and the shop setting `automatically_confirm_all_new_orders` is enabled.
  """
  ORDER_CONFIRMED

  """Payment is made and an order is fully paid."""
  ORDER_FULLY_PAID

  """
  An order is updated; triggered for all changes related to an order; covers all other order webhooks, except for ORDER_CREATED.
  """
  ORDER_UPDATED

  """An order is cancelled."""
  ORDER_CANCELLED

  """An order is fulfilled."""
  ORDER_FULFILLED

  """
  An order metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  ORDER_METADATA_UPDATED

  """A draft order is created."""
  DRAFT_ORDER_CREATED

  """A draft order is updated."""
  DRAFT_ORDER_UPDATED

  """A draft order is deleted."""
  DRAFT_ORDER_DELETED

  """A sale is created."""
  SALE_CREATED

  """A sale is updated."""
  SALE_UPDATED

  """A sale is deleted."""
  SALE_DELETED

  """A sale is activated or deactivated."""
  SALE_TOGGLE

  """An invoice for order requested."""
  INVOICE_REQUESTED

  """An invoice is deleted."""
  INVOICE_DELETED

  """Invoice has been sent."""
  INVOICE_SENT

  """A new customer account is created."""
  CUSTOMER_CREATED

  """A customer account is updated."""
  CUSTOMER_UPDATED

  """A customer account is deleted."""
  CUSTOMER_DELETED

  """
  A customer account metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  CUSTOMER_METADATA_UPDATED

  """A new collection is created."""
  COLLECTION_CREATED

  """A collection is updated."""
  COLLECTION_UPDATED

  """A collection is deleted."""
  COLLECTION_DELETED

  """
  A collection metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  COLLECTION_METADATA_UPDATED

  """A new product is created."""
  PRODUCT_CREATED

  """A product is updated."""
  PRODUCT_UPDATED

  """A product is deleted."""
  PRODUCT_DELETED

  """
  A product metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  PRODUCT_METADATA_UPDATED

  """A new product variant is created."""
  PRODUCT_VARIANT_CREATED

  """A product variant is updated."""
  PRODUCT_VARIANT_UPDATED

  """A product variant is deleted."""
  PRODUCT_VARIANT_DELETED

  """A product variant is out of stock."""
  PRODUCT_VARIANT_OUT_OF_STOCK

  """A product variant is back in stock."""
  PRODUCT_VARIANT_BACK_IN_STOCK

  """
  A product variant metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  PRODUCT_VARIANT_METADATA_UPDATED

  """A new checkout is created."""
  CHECKOUT_CREATED

  """
  A checkout is updated. It also triggers all updates related to the checkout.
  """
  CHECKOUT_UPDATED

  """
  A checkout metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  CHECKOUT_METADATA_UPDATED

  """A new fulfillment is created."""
  FULFILLMENT_CREATED

  """A fulfillment is cancelled."""
  FULFILLMENT_CANCELED

  """A fulfillment is approved."""
  FULFILLMENT_APPROVED

  """
  A fulfillment metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  FULFILLMENT_METADATA_UPDATED

  """User notification triggered."""
  NOTIFY_USER

  """A new page is created."""
  PAGE_CREATED

  """A page is updated."""
  PAGE_UPDATED

  """A page is deleted."""
  PAGE_DELETED

  """A new page type is created."""
  PAGE_TYPE_CREATED

  """A page type is updated."""
  PAGE_TYPE_UPDATED

  """A page type is deleted."""
  PAGE_TYPE_DELETED

  """A new permission group is created."""
  PERMISSION_GROUP_CREATED

  """A permission group is updated."""
  PERMISSION_GROUP_UPDATED

  """A permission group is deleted."""
  PERMISSION_GROUP_DELETED

  """A new shipping price is created."""
  SHIPPING_PRICE_CREATED

  """A shipping price is updated."""
  SHIPPING_PRICE_UPDATED

  """A shipping price is deleted."""
  SHIPPING_PRICE_DELETED

  """A new shipping zone is created."""
  SHIPPING_ZONE_CREATED

  """A shipping zone is updated."""
  SHIPPING_ZONE_UPDATED

  """A shipping zone is deleted."""
  SHIPPING_ZONE_DELETED

  """
  A shipping zone metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  SHIPPING_ZONE_METADATA_UPDATED

  """A new staff user is created."""
  STAFF_CREATED

  """A staff user is updated."""
  STAFF_UPDATED

  """A staff user is deleted."""
  STAFF_DELETED

  """An action requested for transaction."""
  TRANSACTION_ACTION_REQUEST

  """
  Transaction item metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  TRANSACTION_ITEM_METADATA_UPDATED

  """A new translation is created."""
  TRANSLATION_CREATED

  """A translation is updated."""
  TRANSLATION_UPDATED

  """A new warehouse created."""
  WAREHOUSE_CREATED

  """A warehouse is updated."""
  WAREHOUSE_UPDATED

  """A warehouse is deleted."""
  WAREHOUSE_DELETED

  """
  A warehouse metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  WAREHOUSE_METADATA_UPDATED

  """A new voucher created."""
  VOUCHER_CREATED

  """A voucher is updated."""
  VOUCHER_UPDATED

  """A voucher is deleted."""
  VOUCHER_DELETED

  """
  A voucher metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  VOUCHER_METADATA_UPDATED

  """An observability event is created."""
  OBSERVABILITY
}

"""Enum determining type of webhook."""
enum WebhookEventTypeEnum {
  """All the events."""
  ANY_EVENTS

  """A new address created."""
  ADDRESS_CREATED

  """An address updated."""
  ADDRESS_UPDATED

  """An address deleted."""
  ADDRESS_DELETED

  """A new app installed."""
  APP_INSTALLED

  """An app updated."""
  APP_UPDATED

  """An app deleted."""
  APP_DELETED

  """An app status is changed."""
  APP_STATUS_CHANGED

  """A new attribute is created."""
  ATTRIBUTE_CREATED

  """An attribute is updated."""
  ATTRIBUTE_UPDATED

  """An attribute is deleted."""
  ATTRIBUTE_DELETED

  """A new attribute value is created."""
  ATTRIBUTE_VALUE_CREATED

  """An attribute value is updated."""
  ATTRIBUTE_VALUE_UPDATED

  """An attribute value is deleted."""
  ATTRIBUTE_VALUE_DELETED

  """A new category created."""
  CATEGORY_CREATED

  """A category is updated."""
  CATEGORY_UPDATED

  """A category is deleted."""
  CATEGORY_DELETED

  """A new channel created."""
  CHANNEL_CREATED

  """A channel is updated."""
  CHANNEL_UPDATED

  """A channel is deleted."""
  CHANNEL_DELETED

  """A channel status is changed."""
  CHANNEL_STATUS_CHANGED

  """A new gift card created."""
  GIFT_CARD_CREATED

  """A gift card is updated."""
  GIFT_CARD_UPDATED

  """A gift card is deleted."""
  GIFT_CARD_DELETED

  """A gift card status is changed."""
  GIFT_CARD_STATUS_CHANGED

  """
  A gift card metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  GIFT_CARD_METADATA_UPDATED

  """A new menu created."""
  MENU_CREATED

  """A menu is updated."""
  MENU_UPDATED

  """A menu is deleted."""
  MENU_DELETED

  """A new menu item created."""
  MENU_ITEM_CREATED

  """A menu item is updated."""
  MENU_ITEM_UPDATED

  """A menu item is deleted."""
  MENU_ITEM_DELETED

  """A new order is placed."""
  ORDER_CREATED

  """
  An order is confirmed (status change unconfirmed -> unfulfilled) by a staff user using the OrderConfirm mutation. It also triggers when the user completes the checkout and the shop setting `automatically_confirm_all_new_orders` is enabled.
  """
  ORDER_CONFIRMED

  """Payment is made and an order is fully paid."""
  ORDER_FULLY_PAID

  """
  An order is updated; triggered for all changes related to an order; covers all other order webhooks, except for ORDER_CREATED.
  """
  ORDER_UPDATED

  """An order is cancelled."""
  ORDER_CANCELLED

  """An order is fulfilled."""
  ORDER_FULFILLED

  """
  An order metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  ORDER_METADATA_UPDATED

  """A draft order is created."""
  DRAFT_ORDER_CREATED

  """A draft order is updated."""
  DRAFT_ORDER_UPDATED

  """A draft order is deleted."""
  DRAFT_ORDER_DELETED

  """A sale is created."""
  SALE_CREATED

  """A sale is updated."""
  SALE_UPDATED

  """A sale is deleted."""
  SALE_DELETED

  """A sale is activated or deactivated."""
  SALE_TOGGLE

  """An invoice for order requested."""
  INVOICE_REQUESTED

  """An invoice is deleted."""
  INVOICE_DELETED

  """Invoice has been sent."""
  INVOICE_SENT

  """A new customer account is created."""
  CUSTOMER_CREATED

  """A customer account is updated."""
  CUSTOMER_UPDATED

  """A customer account is deleted."""
  CUSTOMER_DELETED

  """
  A customer account metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  CUSTOMER_METADATA_UPDATED

  """A new collection is created."""
  COLLECTION_CREATED

  """A collection is updated."""
  COLLECTION_UPDATED

  """A collection is deleted."""
  COLLECTION_DELETED

  """
  A collection metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  COLLECTION_METADATA_UPDATED

  """A new product is created."""
  PRODUCT_CREATED

  """A product is updated."""
  PRODUCT_UPDATED

  """A product is deleted."""
  PRODUCT_DELETED

  """
  A product metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  PRODUCT_METADATA_UPDATED

  """A new product variant is created."""
  PRODUCT_VARIANT_CREATED

  """A product variant is updated."""
  PRODUCT_VARIANT_UPDATED

  """A product variant is deleted."""
  PRODUCT_VARIANT_DELETED

  """A product variant is out of stock."""
  PRODUCT_VARIANT_OUT_OF_STOCK

  """A product variant is back in stock."""
  PRODUCT_VARIANT_BACK_IN_STOCK

  """
  A product variant metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  PRODUCT_VARIANT_METADATA_UPDATED

  """A new checkout is created."""
  CHECKOUT_CREATED

  """
  A checkout is updated. It also triggers all updates related to the checkout.
  """
  CHECKOUT_UPDATED

  """
  A checkout metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  CHECKOUT_METADATA_UPDATED

  """A new fulfillment is created."""
  FULFILLMENT_CREATED

  """A fulfillment is cancelled."""
  FULFILLMENT_CANCELED

  """A fulfillment is approved."""
  FULFILLMENT_APPROVED

  """
  A fulfillment metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  FULFILLMENT_METADATA_UPDATED

  """User notification triggered."""
  NOTIFY_USER

  """A new page is created."""
  PAGE_CREATED

  """A page is updated."""
  PAGE_UPDATED

  """A page is deleted."""
  PAGE_DELETED

  """A new page type is created."""
  PAGE_TYPE_CREATED

  """A page type is updated."""
  PAGE_TYPE_UPDATED

  """A page type is deleted."""
  PAGE_TYPE_DELETED

  """A new permission group is created."""
  PERMISSION_GROUP_CREATED

  """A permission group is updated."""
  PERMISSION_GROUP_UPDATED

  """A permission group is deleted."""
  PERMISSION_GROUP_DELETED

  """A new shipping price is created."""
  SHIPPING_PRICE_CREATED

  """A shipping price is updated."""
  SHIPPING_PRICE_UPDATED

  """A shipping price is deleted."""
  SHIPPING_PRICE_DELETED

  """A new shipping zone is created."""
  SHIPPING_ZONE_CREATED

  """A shipping zone is updated."""
  SHIPPING_ZONE_UPDATED

  """A shipping zone is deleted."""
  SHIPPING_ZONE_DELETED

  """
  A shipping zone metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  SHIPPING_ZONE_METADATA_UPDATED

  """A new staff user is created."""
  STAFF_CREATED

  """A staff user is updated."""
  STAFF_UPDATED

  """A staff user is deleted."""
  STAFF_DELETED

  """An action requested for transaction."""
  TRANSACTION_ACTION_REQUEST

  """
  Transaction item metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  TRANSACTION_ITEM_METADATA_UPDATED

  """A new translation is created."""
  TRANSLATION_CREATED

  """A translation is updated."""
  TRANSLATION_UPDATED

  """A new warehouse created."""
  WAREHOUSE_CREATED

  """A warehouse is updated."""
  WAREHOUSE_UPDATED

  """A warehouse is deleted."""
  WAREHOUSE_DELETED

  """
  A warehouse metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  WAREHOUSE_METADATA_UPDATED

  """A new voucher created."""
  VOUCHER_CREATED

  """A voucher is updated."""
  VOUCHER_UPDATED

  """A voucher is deleted."""
  VOUCHER_DELETED

  """
  A voucher metadata is updated.
  
  Added in Saleor 3.8.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  VOUCHER_METADATA_UPDATED

  """An observability event is created."""
  OBSERVABILITY

  """Authorize payment."""
  PAYMENT_AUTHORIZE

  """Capture payment."""
  PAYMENT_CAPTURE

  """Confirm payment."""
  PAYMENT_CONFIRM

  """Listing available payment gateways."""
  PAYMENT_LIST_GATEWAYS

  """Process payment."""
  PAYMENT_PROCESS

  """Refund payment."""
  PAYMENT_REFUND

  """Void payment."""
  PAYMENT_VOID

  """
  Event called for checkout tax calculation.
  
  Added in Saleor 3.6.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  CHECKOUT_CALCULATE_TAXES

  """
  Event called for order tax calculation.
  
  Added in Saleor 3.6.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  ORDER_CALCULATE_TAXES

  """Fetch external shipping methods for checkout."""
  SHIPPING_LIST_METHODS_FOR_CHECKOUT

  """Filter shipping methods for order."""
  ORDER_FILTER_SHIPPING_METHODS

  """Filter shipping methods for checkout."""
  CHECKOUT_FILTER_SHIPPING_METHODS
}

"""Enum determining type of webhook."""
enum WebhookEventTypeSyncEnum {
  """Authorize payment."""
  PAYMENT_AUTHORIZE

  """Capture payment."""
  PAYMENT_CAPTURE

  """Confirm payment."""
  PAYMENT_CONFIRM

  """Listing available payment gateways."""
  PAYMENT_LIST_GATEWAYS

  """Process payment."""
  PAYMENT_PROCESS

  """Refund payment."""
  PAYMENT_REFUND

  """Void payment."""
  PAYMENT_VOID

  """
  Event called for checkout tax calculation.
  
  Added in Saleor 3.6.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  CHECKOUT_CALCULATE_TAXES

  """
  Event called for order tax calculation.
  
  Added in Saleor 3.6.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  ORDER_CALCULATE_TAXES

  """Fetch external shipping methods for checkout."""
  SHIPPING_LIST_METHODS_FOR_CHECKOUT

  """Filter shipping methods for order."""
  ORDER_FILTER_SHIPPING_METHODS

  """Filter shipping methods for checkout."""
  CHECKOUT_FILTER_SHIPPING_METHODS
}

"""An enumeration."""
enum WebhookSampleEventTypeEnum {
  ADDRESS_CREATED
  ADDRESS_UPDATED
  ADDRESS_DELETED
  APP_INSTALLED
  APP_UPDATED
  APP_DELETED
  APP_STATUS_CHANGED
  ATTRIBUTE_CREATED
  ATTRIBUTE_UPDATED
  ATTRIBUTE_DELETED
  ATTRIBUTE_VALUE_CREATED
  ATTRIBUTE_VALUE_UPDATED
  ATTRIBUTE_VALUE_DELETED
  CATEGORY_CREATED
  CATEGORY_UPDATED
  CATEGORY_DELETED
  CHANNEL_CREATED
  CHANNEL_UPDATED
  CHANNEL_DELETED
  CHANNEL_STATUS_CHANGED
  GIFT_CARD_CREATED
  GIFT_CARD_UPDATED
  GIFT_CARD_DELETED
  GIFT_CARD_STATUS_CHANGED
  GIFT_CARD_METADATA_UPDATED
  MENU_CREATED
  MENU_UPDATED
  MENU_DELETED
  MENU_ITEM_CREATED
  MENU_ITEM_UPDATED
  MENU_ITEM_DELETED
  ORDER_CREATED
  ORDER_CONFIRMED
  ORDER_FULLY_PAID
  ORDER_UPDATED
  ORDER_CANCELLED
  ORDER_FULFILLED
  ORDER_METADATA_UPDATED
  DRAFT_ORDER_CREATED
  DRAFT_ORDER_UPDATED
  DRAFT_ORDER_DELETED
  SALE_CREATED
  SALE_UPDATED
  SALE_DELETED
  SALE_TOGGLE
  INVOICE_REQUESTED
  INVOICE_DELETED
  INVOICE_SENT
  CUSTOMER_CREATED
  CUSTOMER_UPDATED
  CUSTOMER_DELETED
  CUSTOMER_METADATA_UPDATED
  COLLECTION_CREATED
  COLLECTION_UPDATED
  COLLECTION_DELETED
  COLLECTION_METADATA_UPDATED
  PRODUCT_CREATED
  PRODUCT_UPDATED
  PRODUCT_DELETED
  PRODUCT_METADATA_UPDATED
  PRODUCT_VARIANT_CREATED
  PRODUCT_VARIANT_UPDATED
  PRODUCT_VARIANT_DELETED
  PRODUCT_VARIANT_OUT_OF_STOCK
  PRODUCT_VARIANT_BACK_IN_STOCK
  PRODUCT_VARIANT_METADATA_UPDATED
  CHECKOUT_CREATED
  CHECKOUT_UPDATED
  CHECKOUT_METADATA_UPDATED
  FULFILLMENT_CREATED
  FULFILLMENT_CANCELED
  FULFILLMENT_APPROVED
  FULFILLMENT_METADATA_UPDATED
  NOTIFY_USER
  PAGE_CREATED
  PAGE_UPDATED
  PAGE_DELETED
  PAGE_TYPE_CREATED
  PAGE_TYPE_UPDATED
  PAGE_TYPE_DELETED
  PERMISSION_GROUP_CREATED
  PERMISSION_GROUP_UPDATED
  PERMISSION_GROUP_DELETED
  SHIPPING_PRICE_CREATED
  SHIPPING_PRICE_UPDATED
  SHIPPING_PRICE_DELETED
  SHIPPING_ZONE_CREATED
  SHIPPING_ZONE_UPDATED
  SHIPPING_ZONE_DELETED
  SHIPPING_ZONE_METADATA_UPDATED
  STAFF_CREATED
  STAFF_UPDATED
  STAFF_DELETED
  TRANSACTION_ACTION_REQUEST
  TRANSACTION_ITEM_METADATA_UPDATED
  TRANSLATION_CREATED
  TRANSLATION_UPDATED
  WAREHOUSE_CREATED
  WAREHOUSE_UPDATED
  WAREHOUSE_DELETED
  WAREHOUSE_METADATA_UPDATED
  VOUCHER_CREATED
  VOUCHER_UPDATED
  VOUCHER_DELETED
  VOUCHER_METADATA_UPDATED
  OBSERVABILITY
}

"""
Updates a webhook subscription. 

Requires one of the following permissions: MANAGE_APPS.
"""
type WebhookUpdate {
  webhookErrors: [WebhookError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [WebhookError!]!
  webhook: Webhook
}

input WebhookUpdateInput {
  """The new name of the webhook."""
  name: String

  """The url to receive the payload."""
  targetUrl: String

  """
  The events that webhook wants to subscribe. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use `asyncEvents` or `syncEvents` instead.
  """
  events: [WebhookEventTypeEnum!]

  """The asynchronous events that webhook wants to subscribe."""
  asyncEvents: [WebhookEventTypeAsyncEnum!]

  """The synchronous events that webhook wants to subscribe."""
  syncEvents: [WebhookEventTypeSyncEnum!]

  """ID of the app to which webhook belongs."""
  app: ID

  """Determine if webhook will be set active or not."""
  isActive: Boolean

  """
  Use to create a hash signature with each payload.
  
  DEPRECATED: this field will be removed in Saleor 4.0. As of Saleor 3.5, webhook payloads default to signing using a verifiable JWS.
  """
  secretKey: String

  """
  Subscription query used to define a webhook payload.
  
  Added in Saleor 3.2.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  query: String
}

"""Represents weight value in a specific weight unit."""
type Weight {
  """Weight unit."""
  unit: WeightUnitsEnum!

  """Weight value."""
  value: Float!
}

scalar WeightScalar

"""An enumeration."""
enum WeightUnitsEnum {
  G
  LB
  OZ
  KG
  TONNE
}

"""_Any value scalar as defined by Federation spec."""
scalar _Any

"""_Entity union as defined by Federation spec."""
union _Entity = App | Address | User | Group | ProductVariant | Product | ProductType | ProductMedia | Category | Collection | PageType

"""_Service manifest as defined by Federation spec."""
type _Service {
  sdl: String
}
